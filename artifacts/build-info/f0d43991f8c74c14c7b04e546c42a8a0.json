{"id":"f0d43991f8c74c14c7b04e546c42a8a0","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC4906.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Metadata} from \"./IERC721Metadata.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {IERC4906-MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/Dataset.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract Dataset is Ownable, ReentrancyGuard, AccessControl {\n    bytes32 public constant DATASET_ADMIN_ROLE = keccak256(\"DATASET_ADMIN_ROLE\");\n    bytes32 public constant VERIFIER_ROLE = keccak256(\"VERIFIER_ROLE\");\n\n    struct DatasetInfo {\n        string name;\n        string description;\n        address owner;\n        string dataHash; // Hash of the actual data\n        string metadataHash; // IPFS hash for metadata\n        uint256 createdAt;\n        uint256 lastUpdated;\n        uint256 version;\n        bool isPublic;\n        bool isVerified;\n        uint256 accessPrice; // Price in wei to access dataset\n        string[] tags;\n        uint256 downloadCount;\n        uint256 citationCount;\n    }\n\n    struct AccessRequest {\n        address requester;\n        uint256 datasetId;\n        string purpose;\n        uint256 requestedAt;\n        bool isApproved;\n        bool isPending;\n        uint256 approvedAt;\n    }\n\n    struct DatasetVersion {\n        uint256 version;\n        string dataHash;\n        string metadataHash;\n        uint256 timestamp;\n        string changeLog;\n    }\n\n    mapping(uint256 => DatasetInfo) public datasets;\n    mapping(uint256 => mapping(address => bool)) public hasAccess;\n    mapping(uint256 => AccessRequest[]) public accessRequests;\n    mapping(uint256 => DatasetVersion[]) public datasetVersions;\n    mapping(address => uint256[]) public ownerDatasets;\n    mapping(string => uint256) public nameToDatasetId;\n    \n    uint256 public nextDatasetId;\n    uint256[] public allDatasets;\n    \n    event DatasetRegistered(\n        uint256 indexed datasetId,\n        address indexed owner,\n        string name,\n        string dataHash\n    );\n    \n    event AccessGranted(\n        uint256 indexed datasetId,\n        address indexed user,\n        address indexed grantor\n    );\n    \n    event AccessRequested(\n        uint256 indexed datasetId,\n        address indexed requester,\n        string purpose\n    );\n    \n    event DatasetUpdated(\n        uint256 indexed datasetId,\n        uint256 newVersion,\n        string newDataHash\n    );\n    \n    event DatasetVerified(uint256 indexed datasetId, bool verified);\n    event DatasetDownloaded(uint256 indexed datasetId, address indexed downloader);\n\n    modifier onlyDatasetOwner(uint256 _datasetId) {\n        require(datasets[_datasetId].owner == msg.sender, \"Not dataset owner\");\n        _;\n    }\n\n    modifier datasetExists(uint256 _datasetId) {\n        require(_datasetId < nextDatasetId, \"Dataset does not exist\");\n        _;\n    }\n\n    constructor() Ownable(msg.sender) {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(DATASET_ADMIN_ROLE, msg.sender);\n        _grantRole(VERIFIER_ROLE, msg.sender);\n        nextDatasetId = 1;\n    }\n\n    /**\n     * @dev Register a new dataset\n     * @param _name Name of the dataset\n     * @param _description Description of the dataset\n     * @param _dataHash Hash of the dataset content\n     * @param _metadataHash IPFS hash for metadata\n     * @param _isPublic Whether the dataset is publicly accessible\n     * @param _accessPrice Price to access the dataset (0 for free)\n     * @param _tags Array of tags for categorization\n     */\n    function registerDataset(\n        string memory _name,\n        string memory _description,\n        string memory _dataHash,\n        string memory _metadataHash,\n        bool _isPublic,\n        uint256 _accessPrice,\n        string[] memory _tags\n    ) external nonReentrant returns (uint256) {\n        require(bytes(_name).length > 0, \"Name cannot be empty\");\n        require(bytes(_dataHash).length > 0, \"Data hash cannot be empty\");\n        require(nameToDatasetId[_name] == 0, \"Dataset name already exists\");\n\n        uint256 datasetId = nextDatasetId++;\n\n        datasets[datasetId] = DatasetInfo({\n            name: _name,\n            description: _description,\n            owner: msg.sender,\n            dataHash: _dataHash,\n            metadataHash: _metadataHash,\n            createdAt: block.timestamp,\n            lastUpdated: block.timestamp,\n            version: 1,\n            isPublic: _isPublic,\n            isVerified: false,\n            accessPrice: _accessPrice,\n            tags: _tags,\n            downloadCount: 0,\n            citationCount: 0\n        });\n\n        // Create initial version\n        datasetVersions[datasetId].push(DatasetVersion({\n            version: 1,\n            dataHash: _dataHash,\n            metadataHash: _metadataHash,\n            timestamp: block.timestamp,\n            changeLog: \"Initial version\"\n        }));\n\n        nameToDatasetId[_name] = datasetId;\n        ownerDatasets[msg.sender].push(datasetId);\n        allDatasets.push(datasetId);\n\n        // Owner always has access to their own dataset\n        hasAccess[datasetId][msg.sender] = true;\n\n        emit DatasetRegistered(datasetId, msg.sender, _name, _dataHash);\n        \n        return datasetId;\n    }\n\n    /**\n     * @dev Request access to a dataset\n     * @param _datasetId ID of the dataset\n     * @param _purpose Purpose for accessing the dataset\n     */\n    function requestAccess(\n        uint256 _datasetId,\n        string memory _purpose\n    ) external payable datasetExists(_datasetId) nonReentrant {\n        DatasetInfo storage dataset = datasets[_datasetId];\n        require(!hasAccess[_datasetId][msg.sender], \"Already has access\");\n        require(msg.sender != dataset.owner, \"Owner already has access\");\n\n        if (dataset.isPublic && dataset.accessPrice > 0) {\n            require(msg.value >= dataset.accessPrice, \"Insufficient payment\");\n            \n            // Grant access immediately for public paid datasets\n            hasAccess[_datasetId][msg.sender] = true;\n            \n            // Transfer payment to dataset owner\n            payable(dataset.owner).transfer(msg.value);\n            \n            emit AccessGranted(_datasetId, msg.sender, dataset.owner);\n        } else if (dataset.isPublic && dataset.accessPrice == 0) {\n            // Grant access immediately for free public datasets\n            hasAccess[_datasetId][msg.sender] = true;\n            emit AccessGranted(_datasetId, msg.sender, dataset.owner);\n        } else {\n            // Private dataset - requires approval\n            accessRequests[_datasetId].push(AccessRequest({\n                requester: msg.sender,\n                datasetId: _datasetId,\n                purpose: _purpose,\n                requestedAt: block.timestamp,\n                isApproved: false,\n                isPending: true,\n                approvedAt: 0\n            }));\n\n            emit AccessRequested(_datasetId, msg.sender, _purpose);\n        }\n    }\n\n    /**\n     * @dev Grant access to a user (for private datasets)\n     * @param _datasetId ID of the dataset\n     * @param _user Address of the user to grant access\n     * @param _requestIndex Index of the access request (if applicable)\n     */\n    function grantAccess(\n        uint256 _datasetId,\n        address _user,\n        uint256 _requestIndex\n    ) external datasetExists(_datasetId) onlyDatasetOwner(_datasetId) {\n        require(!hasAccess[_datasetId][_user], \"User already has access\");\n\n        hasAccess[_datasetId][_user] = true;\n\n        // Update request status if applicable\n        if (_requestIndex < accessRequests[_datasetId].length) {\n            AccessRequest storage request = accessRequests[_datasetId][_requestIndex];\n            if (request.requester == _user && request.isPending) {\n                request.isApproved = true;\n                request.isPending = false;\n                request.approvedAt = block.timestamp;\n            }\n        }\n\n        emit AccessGranted(_datasetId, _user, msg.sender);\n    }\n\n    /**\n     * @dev Update dataset with new version\n     * @param _datasetId ID of the dataset\n     * @param _newDataHash New data hash\n     * @param _newMetadataHash New metadata hash\n     * @param _changeLog Description of changes\n     */\n    function updateDataset(\n        uint256 _datasetId,\n        string memory _newDataHash,\n        string memory _newMetadataHash,\n        string memory _changeLog\n    ) external datasetExists(_datasetId) onlyDatasetOwner(_datasetId) {\n        require(bytes(_newDataHash).length > 0, \"Data hash cannot be empty\");\n\n        DatasetInfo storage dataset = datasets[_datasetId];\n        dataset.dataHash = _newDataHash;\n        dataset.metadataHash = _newMetadataHash;\n        dataset.lastUpdated = block.timestamp;\n        dataset.version++;\n\n        // Add new version to history\n        datasetVersions[_datasetId].push(DatasetVersion({\n            version: dataset.version,\n            dataHash: _newDataHash,\n            metadataHash: _newMetadataHash,\n            timestamp: block.timestamp,\n            changeLog: _changeLog\n        }));\n\n        emit DatasetUpdated(_datasetId, dataset.version, _newDataHash);\n    }\n\n    /**\n     * @dev Verify a dataset (only by verifiers)\n     * @param _datasetId ID of the dataset\n     * @param _verified Verification status\n     */\n    function verifyDataset(\n        uint256 _datasetId,\n        bool _verified\n    ) external datasetExists(_datasetId) onlyRole(VERIFIER_ROLE) {\n        datasets[_datasetId].isVerified = _verified;\n        emit DatasetVerified(_datasetId, _verified);\n    }\n\n    /**\n     * @dev Record dataset download (for analytics)\n     * @param _datasetId ID of the dataset\n     */\n    function recordDownload(uint256 _datasetId) external datasetExists(_datasetId) {\n        require(hasAccess[_datasetId][msg.sender], \"No access to dataset\");\n        \n        datasets[_datasetId].downloadCount++;\n        emit DatasetDownloaded(_datasetId, msg.sender);\n    }\n\n    /**\n     * @dev Update citation count\n     * @param _datasetId ID of the dataset\n     * @param _count New citation count\n     */\n    function updateCitationCount(\n        uint256 _datasetId,\n        uint256 _count\n    ) external datasetExists(_datasetId) onlyRole(DATASET_ADMIN_ROLE) {\n        datasets[_datasetId].citationCount = _count;\n    }\n\n    /**\n     * @dev Get dataset information\n     * @param _datasetId ID of the dataset\n     * @return DatasetInfo struct\n     */\n    function getDataset(uint256 _datasetId) external view datasetExists(_datasetId) returns (DatasetInfo memory) {\n        return datasets[_datasetId];\n    }\n\n    /**\n     * @dev Get dataset versions\n     * @param _datasetId ID of the dataset\n     * @return Array of DatasetVersion structs\n     */\n    function getDatasetVersions(uint256 _datasetId) external view datasetExists(_datasetId) returns (DatasetVersion[] memory) {\n        return datasetVersions[_datasetId];\n    }\n\n    /**\n     * @dev Get access requests for a dataset\n     * @param _datasetId ID of the dataset\n     * @return Array of AccessRequest structs\n     */\n    function getAccessRequests(uint256 _datasetId) external view datasetExists(_datasetId) returns (AccessRequest[] memory) {\n        require(\n            datasets[_datasetId].owner == msg.sender || hasRole(DATASET_ADMIN_ROLE, msg.sender),\n            \"Not authorized to view access requests\"\n        );\n        return accessRequests[_datasetId];\n    }\n\n    /**\n     * @dev Get datasets owned by an address\n     * @param _owner Address of the owner\n     * @return Array of dataset IDs\n     */\n    function getOwnerDatasets(address _owner) external view returns (uint256[] memory) {\n        return ownerDatasets[_owner];\n    }\n\n    /**\n     * @dev Check if user has access to dataset\n     * @param _datasetId ID of the dataset\n     * @param _user Address of the user\n     * @return Whether user has access\n     */\n    function checkAccess(uint256 _datasetId, address _user) external view returns (bool) {\n        return hasAccess[_datasetId][_user];\n    }\n\n    /**\n     * @dev Get all dataset IDs\n     * @return Array of all dataset IDs\n     */\n    function getAllDatasets() external view returns (uint256[] memory) {\n        return allDatasets;\n    }\n\n    /**\n     * @dev Get total number of datasets\n     * @return Total dataset count\n     */\n    function getTotalDatasets() external view returns (uint256) {\n        return nextDatasetId - 1;\n    }\n\n    /**\n     * @dev Add verifier role to an address\n     * @param _verifier Address to add as verifier\n     */\n    function addVerifier(address _verifier) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        grantRole(VERIFIER_ROLE, _verifier);\n    }\n\n    /**\n     * @dev Remove verifier role from an address\n     * @param _verifier Address to remove verifier role from\n     */\n    function removeVerifier(address _verifier) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        revokeRole(VERIFIER_ROLE, _verifier);\n    }\n}\n"},"contracts/DeSciNFTSimple.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract DeSciNFTSimple is ERC721, ERC721URIStorage, Ownable, ReentrancyGuard {\n    uint256 private _tokenIdCounter;\n\n    struct ResearchNFT {\n        string title;\n        string description;\n        address researcher;\n        uint256 createdAt;\n        string researchType; // \"paper\", \"dataset\", \"code\", \"review\"\n        uint256 citationCount;\n        uint256 impactScore;\n        bool isVerified;\n    }\n\n    mapping(uint256 => ResearchNFT) public researchNFTs;\n    mapping(address => uint256[]) public researcherNFTs;\n    mapping(string => uint256) public titleToTokenId;\n    \n    event ResearchNFTMinted(\n        uint256 indexed tokenId,\n        address indexed researcher,\n        string title,\n        string researchType\n    );\n    \n    event CitationAdded(uint256 indexed tokenId, uint256 newCount);\n    event ImpactScoreUpdated(uint256 indexed tokenId, uint256 newScore);\n    event NFTVerified(uint256 indexed tokenId, bool verified);\n\n    constructor() ERC721(\"DeSci Research NFT\", \"DSCI\") Ownable(msg.sender) {\n        _tokenIdCounter = 1;\n    }\n\n    /**\n     * @dev Mint a new research NFT\n     * @param to Address to mint the NFT to\n     * @param title Title of the research\n     * @param description Description of the research\n     * @param uri URI for the token metadata\n     * @param researchType Type of research\n     */\n    function mintResearchNFT(\n        address to,\n        string memory title,\n        string memory description,\n        string memory uri,\n        string memory researchType\n    ) external nonReentrant returns (uint256) {\n        require(bytes(title).length > 0, \"Title cannot be empty\");\n        require(titleToTokenId[title] == 0, \"Research with this title already exists\");\n\n        uint256 tokenId = _tokenIdCounter;\n        _tokenIdCounter++;\n\n        _safeMint(to, tokenId);\n        _setTokenURI(tokenId, uri);\n\n        researchNFTs[tokenId] = ResearchNFT({\n            title: title,\n            description: description,\n            researcher: to,\n            createdAt: block.timestamp,\n            researchType: researchType,\n            citationCount: 0,\n            impactScore: 0,\n            isVerified: false\n        });\n\n        titleToTokenId[title] = tokenId;\n        researcherNFTs[to].push(tokenId);\n\n        emit ResearchNFTMinted(tokenId, to, title, researchType);\n        \n        return tokenId;\n    }\n\n    /**\n     * @dev Add a citation to increase citation count\n     * @param tokenId Token ID to add citation to\n     */\n    function addCitation(uint256 tokenId) external {\n        require(ownerOf(tokenId) != address(0), \"Token does not exist\");\n        \n        researchNFTs[tokenId].citationCount++;\n        _updateImpactScore(tokenId);\n        \n        emit CitationAdded(tokenId, researchNFTs[tokenId].citationCount);\n    }\n\n    /**\n     * @dev Update the impact score of a research NFT\n     * @param tokenId Token ID to update\n     */\n    function _updateImpactScore(uint256 tokenId) internal {\n        ResearchNFT storage research = researchNFTs[tokenId];\n        research.impactScore = research.citationCount * 10;\n        emit ImpactScoreUpdated(tokenId, research.impactScore);\n    }\n\n    /**\n     * @dev Verify a research NFT\n     * @param tokenId Token ID to verify\n     * @param verified Verification status\n     */\n    function verifyResearch(uint256 tokenId, bool verified) external onlyOwner {\n        require(ownerOf(tokenId) != address(0), \"Token does not exist\");\n        \n        researchNFTs[tokenId].isVerified = verified;\n        emit NFTVerified(tokenId, verified);\n    }\n\n    /**\n     * @dev Get research NFT details\n     * @param tokenId Token ID\n     * @return ResearchNFT struct\n     */\n    function getResearchNFT(uint256 tokenId) external view returns (ResearchNFT memory) {\n        require(ownerOf(tokenId) != address(0), \"Token does not exist\");\n        return researchNFTs[tokenId];\n    }\n\n    /**\n     * @dev Get all NFTs owned by a researcher\n     * @param researcher Address of the researcher\n     * @return Array of token IDs\n     */\n    function getResearcherNFTs(address researcher) external view returns (uint256[] memory) {\n        return researcherNFTs[researcher];\n    }\n\n    /**\n     * @dev Get total number of minted NFTs\n     * @return Total NFT count\n     */\n    function getTotalNFTs() external view returns (uint256) {\n        return _tokenIdCounter - 1;\n    }\n\n    // Required overrides\n    function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory) {\n        return super.tokenURI(tokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721URIStorage) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"},"contracts/DeSciPlatform.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"./UserProfile.sol\";\nimport \"./ZKProof.sol\";\nimport \"./DeSciNFTSimple.sol\";\nimport \"./Dataset.sol\";\n\ncontract DeSciPlatform is Ownable, ReentrancyGuard {\n    UserProfile public userProfileContract;\n    ZKProof public zkProofContract;\n    DeSciNFTSimple public nftContract;\n    Dataset public datasetContract;\n\n    struct Research {\n        uint256 id;\n        string title;\n        string description;\n        address researcher;\n        uint256 datasetId;\n        uint256 nftTokenId;\n        uint256[] zkProofIds;\n        string metadataHash;\n        uint256 publishedAt;\n        ResearchStatus status;\n        uint256 peerReviewCount;\n        uint256 averageRating;\n    }\n\n    struct PeerReview {\n        uint256 researchId;\n        address reviewer;\n        uint256 rating; // 1-10 scale\n        string comments;\n        string ipfsHash;\n        uint256 reviewedAt;\n        bool isVerified;\n    }\n\n    enum ResearchStatus {\n        Draft,\n        Submitted,\n        UnderReview,\n        Published,\n        Rejected\n    }\n\n    mapping(uint256 => Research) public researches;\n    mapping(uint256 => PeerReview[]) public peerReviews;\n    mapping(address => uint256[]) public researcherPublications;\n    mapping(uint256 => mapping(address => bool)) public hasReviewed;\n    \n    uint256 public nextResearchId;\n    uint256[] public allResearches;\n    \n    // Platform settings\n    uint256 public minimumReputationToReview = 50;\n    uint256 public minimumReviewsToPublish = 2;\n    uint256 public reviewReward = 0.01 ether;\n    \n    event ResearchSubmitted(\n        uint256 indexed researchId,\n        address indexed researcher,\n        string title,\n        uint256 datasetId\n    );\n    \n    event ResearchPublished(\n        uint256 indexed researchId,\n        uint256 indexed nftTokenId,\n        address indexed researcher\n    );\n    \n    event PeerReviewSubmitted(\n        uint256 indexed researchId,\n        address indexed reviewer,\n        uint256 rating\n    );\n    \n    event ResearchStatusChanged(\n        uint256 indexed researchId,\n        ResearchStatus oldStatus,\n        ResearchStatus newStatus\n    );\n\n    modifier onlyRegisteredUser() {\n        require(userProfileContract.hasProfile(msg.sender), \"User not registered\");\n        _;\n    }\n\n    modifier researchExists(uint256 _researchId) {\n        require(_researchId < nextResearchId, \"Research does not exist\");\n        _;\n    }\n\n    modifier onlyResearcher(uint256 _researchId) {\n        require(researches[_researchId].researcher == msg.sender, \"Not the researcher\");\n        _;\n    }\n\n    constructor(\n        address _userProfileContract,\n        address _zkProofContract,\n        address _nftContract,\n        address _datasetContract\n    ) Ownable(msg.sender) {\n        userProfileContract = UserProfile(_userProfileContract);\n        zkProofContract = ZKProof(_zkProofContract);\n        nftContract = DeSciNFTSimple(_nftContract);\n        datasetContract = Dataset(_datasetContract);\n        nextResearchId = 1;\n    }\n\n    /**\n     * @dev Publish research with integrated dataset and ZK proofs\n     * @param _title Title of the research\n     * @param _description Description of the research\n     * @param _datasetName Name of the dataset\n     * @param _datasetDescription Description of the dataset\n     * @param _datasetHash Hash of the dataset\n     * @param _metadataHash IPFS hash for research metadata\n     * @param _zkProofIds Array of ZK proof IDs that validate this research\n     * @param _isDatasetPublic Whether the dataset should be public\n     * @param _datasetAccessPrice Price to access the dataset\n     */\n    function publishResearch(\n        string memory _title,\n        string memory _description,\n        string memory _datasetName,\n        string memory _datasetDescription,\n        string memory _datasetHash,\n        string memory _metadataHash,\n        uint256[] memory _zkProofIds,\n        bool _isDatasetPublic,\n        uint256 _datasetAccessPrice\n    ) external onlyRegisteredUser nonReentrant returns (uint256) {\n        require(bytes(_title).length > 0, \"Title cannot be empty\");\n        require(userProfileContract.isUserVerified(msg.sender), \"User must be verified\");\n\n        // Verify all ZK proofs are valid and belong to the user\n        for (uint256 i = 0; i < _zkProofIds.length; i++) {\n            require(zkProofContract.isProofVerified(_zkProofIds[i]), \"Invalid ZK proof\");\n            ZKProof.Proof memory proof = zkProofContract.getProof(_zkProofIds[i]);\n            require(proof.submitter == msg.sender, \"ZK proof not owned by researcher\");\n        }\n\n        // Register dataset\n        string[] memory tags = new string[](1);\n        tags[0] = \"research\";\n        \n        uint256 datasetId = datasetContract.registerDataset(\n            _datasetName,\n            _datasetDescription,\n            _datasetHash,\n            _metadataHash,\n            _isDatasetPublic,\n            _datasetAccessPrice,\n            tags\n        );\n\n        // Create research entry\n        uint256 researchId = nextResearchId++;\n        \n        researches[researchId] = Research({\n            id: researchId,\n            title: _title,\n            description: _description,\n            researcher: msg.sender,\n            datasetId: datasetId,\n            nftTokenId: 0, // Will be set when published\n            zkProofIds: _zkProofIds,\n            metadataHash: _metadataHash,\n            publishedAt: 0, // Will be set when published\n            status: ResearchStatus.Submitted,\n            peerReviewCount: 0,\n            averageRating: 0\n        });\n\n        researcherPublications[msg.sender].push(researchId);\n        allResearches.push(researchId);\n\n        emit ResearchSubmitted(researchId, msg.sender, _title, datasetId);\n        \n        return researchId;\n    }\n\n    /**\n     * @dev Submit a peer review for research\n     * @param _researchId ID of the research to review\n     * @param _rating Rating from 1-10\n     * @param _comments Review comments\n     * @param _ipfsHash IPFS hash for detailed review\n     */\n    function submitPeerReview(\n        uint256 _researchId,\n        uint256 _rating,\n        string memory _comments,\n        string memory _ipfsHash\n    ) external onlyRegisteredUser researchExists(_researchId) nonReentrant {\n        Research storage research = researches[_researchId];\n        require(research.status == ResearchStatus.Submitted || research.status == ResearchStatus.UnderReview, \"Research not available for review\");\n        require(research.researcher != msg.sender, \"Cannot review own research\");\n        require(!hasReviewed[_researchId][msg.sender], \"Already reviewed this research\");\n        require(_rating >= 1 && _rating <= 10, \"Rating must be between 1-10\");\n        \n        // Check reviewer reputation\n        uint256 reviewerReputation = userProfileContract.getUserReputation(msg.sender);\n        require(reviewerReputation >= minimumReputationToReview, \"Insufficient reputation to review\");\n\n        // Add peer review\n        peerReviews[_researchId].push(PeerReview({\n            researchId: _researchId,\n            reviewer: msg.sender,\n            rating: _rating,\n            comments: _comments,\n            ipfsHash: _ipfsHash,\n            reviewedAt: block.timestamp,\n            isVerified: userProfileContract.isUserVerified(msg.sender)\n        }));\n\n        hasReviewed[_researchId][msg.sender] = true;\n        research.peerReviewCount++;\n\n        // Update research status\n        if (research.status == ResearchStatus.Submitted) {\n            research.status = ResearchStatus.UnderReview;\n            emit ResearchStatusChanged(_researchId, ResearchStatus.Submitted, ResearchStatus.UnderReview);\n        }\n\n        // Calculate new average rating\n        _updateAverageRating(_researchId);\n\n        // Reward reviewer (if contract has funds)\n        if (address(this).balance >= reviewReward) {\n            payable(msg.sender).transfer(reviewReward);\n        }\n\n        emit PeerReviewSubmitted(_researchId, msg.sender, _rating);\n\n        // Auto-publish if minimum reviews reached and average rating is good\n        if (research.peerReviewCount >= minimumReviewsToPublish && research.averageRating >= 7) {\n            _publishResearch(_researchId);\n        }\n    }\n\n    /**\n     * @dev Internal function to publish research as NFT\n     * @param _researchId ID of the research to publish\n     */\n    function _publishResearch(uint256 _researchId) internal {\n        Research storage research = researches[_researchId];\n        require(research.status == ResearchStatus.UnderReview, \"Research not ready for publishing\");\n\n        // Mint NFT for the research\n        uint256 nftTokenId = nftContract.mintResearchNFT(\n            research.researcher,\n            research.title,\n            research.description,\n            research.metadataHash,\n            \"paper\"\n        );\n\n        // Update research status\n        research.nftTokenId = nftTokenId;\n        research.publishedAt = block.timestamp;\n        research.status = ResearchStatus.Published;\n\n        // Update researcher reputation\n        uint256 currentReputation = userProfileContract.getUserReputation(research.researcher);\n        uint256 bonusReputation = research.averageRating * 10; // Bonus based on review quality\n        userProfileContract.updateReputation(research.researcher, currentReputation + bonusReputation);\n\n        emit ResearchPublished(_researchId, nftTokenId, research.researcher);\n        emit ResearchStatusChanged(_researchId, ResearchStatus.UnderReview, ResearchStatus.Published);\n    }\n\n    /**\n     * @dev Manually publish research (owner only)\n     * @param _researchId ID of the research to publish\n     */\n    function manuallyPublishResearch(uint256 _researchId) external onlyOwner researchExists(_researchId) {\n        _publishResearch(_researchId);\n    }\n\n    /**\n     * @dev Update average rating for research\n     * @param _researchId ID of the research\n     */\n    function _updateAverageRating(uint256 _researchId) internal {\n        PeerReview[] storage reviews = peerReviews[_researchId];\n        if (reviews.length == 0) return;\n\n        uint256 totalRating = 0;\n        uint256 verifiedReviews = 0;\n\n        for (uint256 i = 0; i < reviews.length; i++) {\n            totalRating += reviews[i].rating;\n            if (reviews[i].isVerified) {\n                verifiedReviews++;\n                totalRating += reviews[i].rating; // Double weight for verified reviewers\n            }\n        }\n\n        researches[_researchId].averageRating = totalRating / (reviews.length + verifiedReviews);\n    }\n\n    /**\n     * @dev Get research details\n     * @param _researchId ID of the research\n     * @return Research struct\n     */\n    function getResearch(uint256 _researchId) external view researchExists(_researchId) returns (Research memory) {\n        return researches[_researchId];\n    }\n\n    /**\n     * @dev Get peer reviews for research\n     * @param _researchId ID of the research\n     * @return Array of PeerReview structs\n     */\n    function getPeerReviews(uint256 _researchId) external view researchExists(_researchId) returns (PeerReview[] memory) {\n        return peerReviews[_researchId];\n    }\n\n    /**\n     * @dev Get all research IDs by a researcher\n     * @param _researcher Address of the researcher\n     * @return Array of research IDs\n     */\n    function getResearcherPublications(address _researcher) external view returns (uint256[] memory) {\n        return researcherPublications[_researcher];\n    }\n\n    /**\n     * @dev Get all research IDs\n     * @return Array of all research IDs\n     */\n    function getAllResearches() external view returns (uint256[] memory) {\n        return allResearches;\n    }\n\n    /**\n     * @dev Update platform settings (owner only)\n     */\n    function updatePlatformSettings(\n        uint256 _minimumReputationToReview,\n        uint256 _minimumReviewsToPublish,\n        uint256 _reviewReward\n    ) external onlyOwner {\n        minimumReputationToReview = _minimumReputationToReview;\n        minimumReviewsToPublish = _minimumReviewsToPublish;\n        reviewReward = _reviewReward;\n    }\n\n    /**\n     * @dev Fund the contract for review rewards\n     */\n    function fundReviewRewards() external payable onlyOwner {}\n\n    /**\n     * @dev Withdraw funds (owner only)\n     */\n    function withdraw() external onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n\n    /**\n     * @dev Get total number of researches\n     * @return Total research count\n     */\n    function getTotalResearches() external view returns (uint256) {\n        return nextResearchId - 1;\n    }\n\n    /**\n     * @dev Update contract addresses (owner only)\n     */\n    function updateContractAddresses(\n        address _userProfileContract,\n        address _zkProofContract,\n        address _nftContract,\n        address _datasetContract\n    ) external onlyOwner {\n        userProfileContract = UserProfile(_userProfileContract);\n        zkProofContract = ZKProof(_zkProofContract);\n        nftContract = DeSciNFTSimple(_nftContract);\n        datasetContract = Dataset(_datasetContract);\n    }\n}\n"},"contracts/Greeter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ncontract Greeter {\n    string private greeting;\n\n    constructor(string memory _greeting) {\n        greeting = _greeting;\n    }\n\n    function greet() public view returns (string memory) {\n        return greeting;\n    }\n\n    function setGreeting(string memory _greeting) public {\n        greeting = _greeting;\n    }\n}\n"},"contracts/UserProfile.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract UserProfile is Ownable, ReentrancyGuard {\n    struct Profile {\n        string fullName;\n        uint256 age;\n        string email;\n        string ipfsHash;\n        bool isVerified;\n        uint256 createdAt;\n        uint256 updatedAt;\n        uint256 reputation;\n    }\n\n    mapping(address => Profile) public profiles;\n    mapping(string => address) public emailToAddress;\n    mapping(address => bool) public hasProfile;\n    \n    address[] public allUsers;\n    \n    event ProfileCreated(address indexed user, string email, string ipfsHash);\n    event ProfileUpdated(address indexed user, string ipfsHash);\n    event ProfileVerified(address indexed user, bool verified);\n    event ReputationUpdated(address indexed user, uint256 newReputation);\n\n    modifier onlyProfileOwner() {\n        require(hasProfile[msg.sender], \"Profile does not exist\");\n        _;\n    }\n\n    modifier emailNotTaken(string memory _email) {\n        require(emailToAddress[_email] == address(0), \"Email already registered\");\n        _;\n    }\n\n    constructor() Ownable(msg.sender) {}\n\n    /**\n     * @dev Create a new user profile\n     * @param _fullName Full name of the user\n     * @param _age Age of the user\n     * @param _email Email address (must be unique)\n     * @param _ipfsHash IPFS hash for additional profile data\n     */\n    function createProfile(\n        string memory _fullName,\n        uint256 _age,\n        string memory _email,\n        string memory _ipfsHash\n    ) external emailNotTaken(_email) nonReentrant {\n        require(!hasProfile[msg.sender], \"Profile already exists\");\n        require(bytes(_fullName).length > 0, \"Full name cannot be empty\");\n        require(_age > 0 && _age < 150, \"Invalid age\");\n        require(bytes(_email).length > 0, \"Email cannot be empty\");\n\n        profiles[msg.sender] = Profile({\n            fullName: _fullName,\n            age: _age,\n            email: _email,\n            ipfsHash: _ipfsHash,\n            isVerified: false,\n            createdAt: block.timestamp,\n            updatedAt: block.timestamp,\n            reputation: 0\n        });\n\n        emailToAddress[_email] = msg.sender;\n        hasProfile[msg.sender] = true;\n        allUsers.push(msg.sender);\n\n        emit ProfileCreated(msg.sender, _email, _ipfsHash);\n    }\n\n    /**\n     * @dev Update existing profile\n     * @param _fullName New full name\n     * @param _age New age\n     * @param _ipfsHash New IPFS hash\n     */\n    function updateProfile(\n        string memory _fullName,\n        uint256 _age,\n        string memory _ipfsHash\n    ) external onlyProfileOwner nonReentrant {\n        require(bytes(_fullName).length > 0, \"Full name cannot be empty\");\n        require(_age > 0 && _age < 150, \"Invalid age\");\n\n        Profile storage profile = profiles[msg.sender];\n        profile.fullName = _fullName;\n        profile.age = _age;\n        profile.ipfsHash = _ipfsHash;\n        profile.updatedAt = block.timestamp;\n\n        emit ProfileUpdated(msg.sender, _ipfsHash);\n    }\n\n    /**\n     * @dev Get profile information\n     * @param _user Address of the user\n     * @return Profile struct\n     */\n    function getProfile(address _user) external view returns (Profile memory) {\n        require(hasProfile[_user], \"Profile does not exist\");\n        return profiles[_user];\n    }\n\n    /**\n     * @dev Verify a user profile (only owner)\n     * @param _user Address of the user to verify\n     * @param _verified Verification status\n     */\n    function verifyProfile(address _user, bool _verified) external onlyOwner {\n        require(hasProfile[_user], \"Profile does not exist\");\n        profiles[_user].isVerified = _verified;\n        emit ProfileVerified(_user, _verified);\n    }\n\n    /**\n     * @dev Update user reputation (only owner or authorized contracts)\n     * @param _user Address of the user\n     * @param _reputation New reputation score\n     */\n    function updateReputation(address _user, uint256 _reputation) external onlyOwner {\n        require(hasProfile[_user], \"Profile does not exist\");\n        profiles[_user].reputation = _reputation;\n        emit ReputationUpdated(_user, _reputation);\n    }\n\n    /**\n     * @dev Get total number of users\n     * @return Number of registered users\n     */\n    function getTotalUsers() external view returns (uint256) {\n        return allUsers.length;\n    }\n\n    /**\n     * @dev Get user address by email\n     * @param _email Email address\n     * @return User address\n     */\n    function getUserByEmail(string memory _email) external view returns (address) {\n        return emailToAddress[_email];\n    }\n\n    /**\n     * @dev Check if user is verified\n     * @param _user Address of the user\n     * @return Verification status\n     */\n    function isUserVerified(address _user) external view returns (bool) {\n        if (!hasProfile[_user]) return false;\n        return profiles[_user].isVerified;\n    }\n\n    /**\n     * @dev Get user reputation\n     * @param _user Address of the user\n     * @return Reputation score\n     */\n    function getUserReputation(address _user) external view returns (uint256) {\n        if (!hasProfile[_user]) return 0;\n        return profiles[_user].reputation;\n    }\n}\n"},"contracts/ZKProof.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract ZKProof is Ownable, ReentrancyGuard {\n    struct Proof {\n        address submitter;\n        string proofType;\n        uint256[8] proof;\n        uint256[2] publicInputs;\n        bool isVerified;\n        uint256 submittedAt;\n        uint256 verifiedAt;\n        string metadataHash; // IPFS hash for additional proof metadata\n    }\n\n    struct ProofType {\n        string name;\n        bool isActive;\n        address verifierContract; // Address of the specific verifier contract\n        uint256 minReputation; // Minimum reputation required to submit this type\n    }\n\n    mapping(uint256 => Proof) public proofs;\n    mapping(string => ProofType) public proofTypes;\n    mapping(address => uint256[]) public userProofs;\n    \n    uint256 public nextProofId;\n    string[] public supportedProofTypes;\n    \n    event ProofSubmitted(\n        uint256 indexed proofId,\n        address indexed submitter,\n        string proofType,\n        string metadataHash\n    );\n    \n    event ProofVerified(\n        uint256 indexed proofId,\n        bool isValid,\n        address indexed verifier\n    );\n    \n    event ProofTypeAdded(string proofType, address verifierContract);\n    event ProofTypeUpdated(string proofType, bool isActive);\n\n    modifier validProofType(string memory _proofType) {\n        require(proofTypes[_proofType].isActive, \"Invalid or inactive proof type\");\n        _;\n    }\n\n    modifier onlyVerifier(string memory _proofType) {\n        require(\n            msg.sender == owner() || msg.sender == proofTypes[_proofType].verifierContract,\n            \"Not authorized to verify this proof type\"\n        );\n        _;\n    }\n\n    constructor() Ownable(msg.sender) {\n        nextProofId = 1;\n        \n        // Initialize default proof types\n        _addProofType(\"identity_verification\", address(0), 0);\n        _addProofType(\"research_authenticity\", address(0), 50);\n        _addProofType(\"data_integrity\", address(0), 25);\n        _addProofType(\"peer_review\", address(0), 100);\n    }\n\n    /**\n     * @dev Submit a zero-knowledge proof\n     * @param _proofType Type of proof being submitted\n     * @param _proof The ZK proof (8 field elements)\n     * @param _publicInputs Public inputs for the proof (2 field elements)\n     * @param _metadataHash IPFS hash containing proof metadata\n     */\n    function submitProof(\n        string memory _proofType,\n        uint256[8] memory _proof,\n        uint256[2] memory _publicInputs,\n        string memory _metadataHash\n    ) external validProofType(_proofType) nonReentrant returns (uint256) {\n        // Check if user meets minimum reputation requirement\n        ProofType storage pType = proofTypes[_proofType];\n        // Note: In a real implementation, you'd check user reputation from UserProfile contract\n        \n        uint256 proofId = nextProofId++;\n        \n        proofs[proofId] = Proof({\n            submitter: msg.sender,\n            proofType: _proofType,\n            proof: _proof,\n            publicInputs: _publicInputs,\n            isVerified: false,\n            submittedAt: block.timestamp,\n            verifiedAt: 0,\n            metadataHash: _metadataHash\n        });\n\n        userProofs[msg.sender].push(proofId);\n\n        emit ProofSubmitted(proofId, msg.sender, _proofType, _metadataHash);\n        \n        return proofId;\n    }\n\n    /**\n     * @dev Verify a submitted proof\n     * @param _proofId ID of the proof to verify\n     * @param _isValid Whether the proof is valid\n     */\n    function verifyProof(\n        uint256 _proofId,\n        bool _isValid\n    ) external onlyVerifier(proofs[_proofId].proofType) {\n        require(_proofId < nextProofId, \"Proof does not exist\");\n        require(!proofs[_proofId].isVerified, \"Proof already verified\");\n\n        Proof storage proof = proofs[_proofId];\n        proof.isVerified = true;\n        proof.verifiedAt = block.timestamp;\n\n        // In a real implementation, you would:\n        // 1. Call the specific verifier contract for this proof type\n        // 2. Verify the ZK proof using the verifier contract\n        // For demo purposes, we'll use the _isValid parameter\n\n        emit ProofVerified(_proofId, _isValid, msg.sender);\n    }\n\n    /**\n     * @dev Add a new proof type\n     * @param _proofType Name of the proof type\n     * @param _verifierContract Address of the verifier contract\n     * @param _minReputation Minimum reputation required\n     */\n    function addProofType(\n        string memory _proofType,\n        address _verifierContract,\n        uint256 _minReputation\n    ) external onlyOwner {\n        _addProofType(_proofType, _verifierContract, _minReputation);\n    }\n\n    function _addProofType(\n        string memory _proofType,\n        address _verifierContract,\n        uint256 _minReputation\n    ) internal {\n        require(bytes(_proofType).length > 0, \"Proof type cannot be empty\");\n        require(!proofTypes[_proofType].isActive, \"Proof type already exists\");\n\n        proofTypes[_proofType] = ProofType({\n            name: _proofType,\n            isActive: true,\n            verifierContract: _verifierContract,\n            minReputation: _minReputation\n        });\n\n        supportedProofTypes.push(_proofType);\n        emit ProofTypeAdded(_proofType, _verifierContract);\n    }\n\n    /**\n     * @dev Update proof type status\n     * @param _proofType Name of the proof type\n     * @param _isActive Whether the proof type is active\n     */\n    function updateProofType(\n        string memory _proofType,\n        bool _isActive\n    ) external onlyOwner {\n        require(bytes(proofTypes[_proofType].name).length > 0, \"Proof type does not exist\");\n        \n        proofTypes[_proofType].isActive = _isActive;\n        emit ProofTypeUpdated(_proofType, _isActive);\n    }\n\n    /**\n     * @dev Get proof details\n     * @param _proofId ID of the proof\n     * @return Proof struct\n     */\n    function getProof(uint256 _proofId) external view returns (Proof memory) {\n        require(_proofId < nextProofId, \"Proof does not exist\");\n        return proofs[_proofId];\n    }\n\n    /**\n     * @dev Get all proof IDs submitted by a user\n     * @param _user Address of the user\n     * @return Array of proof IDs\n     */\n    function getUserProofs(address _user) external view returns (uint256[] memory) {\n        return userProofs[_user];\n    }\n\n    /**\n     * @dev Get all supported proof types\n     * @return Array of proof type names\n     */\n    function getSupportedProofTypes() external view returns (string[] memory) {\n        return supportedProofTypes;\n    }\n\n    /**\n     * @dev Check if a proof is verified\n     * @param _proofId ID of the proof\n     * @return Whether the proof is verified\n     */\n    function isProofVerified(uint256 _proofId) external view returns (bool) {\n        if (_proofId >= nextProofId) return false;\n        return proofs[_proofId].isVerified;\n    }\n\n    /**\n     * @dev Get proof type details\n     * @param _proofType Name of the proof type\n     * @return ProofType struct\n     */\n    function getProofType(string memory _proofType) external view returns (ProofType memory) {\n        return proofTypes[_proofType];\n    }\n\n    /**\n     * @dev Get total number of proofs submitted\n     * @return Total proof count\n     */\n    function getTotalProofs() external view returns (uint256) {\n        return nextProofId - 1;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/ZKProof.sol:86:9:\n   |\n86 |         ProofType storage pType = proofTypes[_proofType];\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":2807,"file":"contracts/ZKProof.sol","start":2784},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[296],"Context":[2051],"ERC165":[3598],"IAccessControl":[379],"IERC165":[3610]},"id":297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":380,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":2052,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":3599,"src":"233:66:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"241:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"250:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10,"name":"Context","nameLocations":["1997:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"1997:7:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1997:7:0"},{"baseName":{"id":12,"name":"IAccessControl","nameLocations":["2006:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"2006:14:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2006:14:0"},{"baseName":{"id":14,"name":"ERC165","nameLocations":["2022:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3598,"src":"2022:6:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2022:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"301:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":296,"linearizedBaseContracts":[296,3598,3610,379,2051],"name":"AccessControl","nameLocation":"1980:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":22,"members":[{"constant":false,"id":19,"mutability":"mutable","name":"hasRole","nameLocation":"2094:7:0","nodeType":"VariableDeclaration","scope":22,"src":"2061:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":18,"keyName":"account","keyNameLocation":"2077:7:0","keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2061:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"2088:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"adminRole","nameLocation":"2119:9:0","nodeType":"VariableDeclaration","scope":22,"src":"2111:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2042:8:0","nodeType":"StructDefinition","scope":296,"src":"2035:100:0","visibility":"public"},{"constant":false,"id":27,"mutability":"mutable","name":"_roles","nameLocation":"2183:6:0","nodeType":"VariableDeclaration","scope":296,"src":"2141:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":26,"keyName":"role","keyNameLocation":"2157:4:0","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2141:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"RoleData","nameLocations":["2165:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"2165:8:0"},"referencedDeclaration":22,"src":"2165:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2220:18:0","nodeType":"VariableDeclaration","scope":296,"src":"2196:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":40,"nodeType":"Block","src":"2463:44:0","statements":[{"expression":{"arguments":[{"id":36,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":35,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":94,"src":"2473:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2473:16:0"},{"id":39,"nodeType":"PlaceholderStatement","src":"2499:1:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2252:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":41,"name":"onlyRole","nameLocation":"2440:8:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"role","nameLocation":"2457:4:0","nodeType":"VariableDeclaration","scope":41,"src":"2449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:14:0"},"src":"2431:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3597],"body":{"id":62,"nodeType":"Block","src":"2632:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2649:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":52,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2669:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}],"id":51,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$379","typeString":"type(contract IAccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2685:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2664:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2649:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":58,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2724:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":56,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2700:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$296_$","typeString":"type(contract super AccessControl)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2706:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3597,"src":"2700:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2649:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49,"id":61,"nodeType":"Return","src":"2642:94:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2513:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":63,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2550:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"2608:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"interfaceId","nameLocation":"2575:11:0","nodeType":"VariableDeclaration","scope":63,"src":"2568:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":43,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2568:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2567:20:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"2626:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47,"name":"bool","nodeType":"ElementaryTypeName","src":"2626:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2625:6:0"},"scope":296,"src":"2541:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[346],"body":{"id":80,"nodeType":"Block","src":"2913:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":73,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2930:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":75,"indexExpression":{"id":74,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2937:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":76,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2943:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"2930:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":78,"indexExpression":{"id":77,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2951:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":72,"id":79,"nodeType":"Return","src":"2923:36:0"}]},"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"2749:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":81,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2839:7:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"role","nameLocation":"2855:4:0","nodeType":"VariableDeclaration","scope":81,"src":"2847:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"account","nameLocation":"2869:7:0","nodeType":"VariableDeclaration","scope":81,"src":"2861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"2861:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2846:31:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":81,"src":"2907:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":70,"name":"bool","nodeType":"ElementaryTypeName","src":"2907:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2906:6:0"},"scope":296,"src":"2830:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":93,"nodeType":"Block","src":"3231:47:0","statements":[{"expression":{"arguments":[{"id":88,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3252:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":89,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"3258:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":87,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":115,"src":"3241:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"3241:30:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2972:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":94,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3184:10:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"role","nameLocation":"3203:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3194:14:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"3231:0:0"},"scope":296,"src":"3175:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"3481:124:0","statements":[{"condition":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3495:23:0","subExpression":{"arguments":[{"id":103,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3504:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3510:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":102,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"3496:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":113,"nodeType":"IfStatement","src":"3491:108:0","trueBody":{"id":112,"nodeType":"Block","src":"3520:79:0","statements":[{"errorCall":{"arguments":[{"id":108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3574:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3583:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":107,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3541:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":111,"nodeType":"RevertStatement","src":"3534:54:0"}]}}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3284:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3417:10:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3436:4:0","nodeType":"VariableDeclaration","scope":115,"src":"3428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3428:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"account","nameLocation":"3450:7:0","nodeType":"VariableDeclaration","scope":115,"src":"3442:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3442:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:31:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[],"src":"3481:0:0"},"scope":296,"src":"3408:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[354],"body":{"id":128,"nodeType":"Block","src":"3860:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":123,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3877:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":125,"indexExpression":{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"3884:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3877:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3890:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"3877:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":122,"id":127,"nodeType":"Return","src":"3870:29:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3611:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":129,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3795:12:0","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"role","nameLocation":"3816:4:0","nodeType":"VariableDeclaration","scope":129,"src":"3808:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3808:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3807:14:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"3851:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3850:9:0"},"scope":296,"src":"3786:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[362],"body":{"id":147,"nodeType":"Block","src":"4296:42:0","statements":[{"expression":{"arguments":[{"id":143,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4317:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4323:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":142,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4306:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":146,"nodeType":"ExpressionStatement","src":"4306:25:0"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3912:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":148,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4289:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":137,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4276:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":140,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyRole","nameLocations":["4267:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4267:8:0"},"nodeType":"ModifierInvocation","src":"4267:28:0"}],"name":"grantRole","nameLocation":"4211:9:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4229:4:0","nodeType":"VariableDeclaration","scope":148,"src":"4221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4221:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4243:7:0","nodeType":"VariableDeclaration","scope":148,"src":"4235:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4235:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4220:31:0"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"4296:0:0"},"scope":296,"src":"4202:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[370],"body":{"id":166,"nodeType":"Block","src":"4713:43:0","statements":[{"expression":{"arguments":[{"id":162,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4735:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4741:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":161,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4723:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":165,"nodeType":"ExpressionStatement","src":"4723:26:0"}]},"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"4344:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":167,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":157,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4706:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":156,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4693:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4693:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":159,"kind":"modifierInvocation","modifierName":{"id":155,"name":"onlyRole","nameLocations":["4684:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4684:8:0"},"nodeType":"ModifierInvocation","src":"4684:28:0"}],"name":"revokeRole","nameLocation":"4627:10:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"role","nameLocation":"4646:4:0","nodeType":"VariableDeclaration","scope":167,"src":"4638:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4638:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"account","nameLocation":"4660:7:0","nodeType":"VariableDeclaration","scope":167,"src":"4652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4637:31:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"4713:0:0"},"scope":296,"src":"4618:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[378],"body":{"id":189,"nodeType":"Block","src":"5383:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":175,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5397:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":176,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"5419:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5419:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5397:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":183,"nodeType":"IfStatement","src":"5393:102:0","trueBody":{"id":182,"nodeType":"Block","src":"5433:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":179,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5454:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":181,"nodeType":"RevertStatement","src":"5447:37:0"}]}},{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"5517:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5523:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5505:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5505:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5505:37:0"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"4762:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":190,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5313:12:0","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"role","nameLocation":"5334:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5326:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5348:18:0","nodeType":"VariableDeclaration","scope":190,"src":"5340:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"5340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5325:42:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5383:0:0"},"scope":296,"src":"5304:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":217,"nodeType":"Block","src":"5747:174:0","statements":[{"assignments":[199],"declarations":[{"constant":false,"id":199,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5765:17:0","nodeType":"VariableDeclaration","scope":217,"src":"5757:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5757:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":203,"initialValue":{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5757:46:0"},{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":204,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5813:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":206,"indexExpression":{"id":205,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5820:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5813:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"5813:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5838:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5813:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":210,"nodeType":"ExpressionStatement","src":"5813:34:0"},{"eventCall":{"arguments":[{"id":212,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5879:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"5885:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":214,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5904:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":211,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5862:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"EmitStatement","src":"5857:57:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5555:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5683:13:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5705:4:0","nodeType":"VariableDeclaration","scope":218,"src":"5697:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5697:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"adminRole","nameLocation":"5719:9:0","nodeType":"VariableDeclaration","scope":218,"src":"5711:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5711:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5696:33:0"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"5747:0:0"},"scope":296,"src":"5674:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"6238:233:0","statements":[{"condition":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6252:23:0","subExpression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6261:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6267:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6253:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6253:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":254,"nodeType":"Block","src":"6428:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":227,"id":253,"nodeType":"Return","src":"6442:12:0"}]},"id":255,"nodeType":"IfStatement","src":"6248:217:0","trueBody":{"id":251,"nodeType":"Block","src":"6277:145:0","statements":[{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":233,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6291:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6298:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6291:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6304:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6291:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":238,"indexExpression":{"id":237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6312:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6291:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6323:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6291:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":241,"nodeType":"ExpressionStatement","src":"6291:36:0"},{"eventCall":{"arguments":[{"id":243,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6364:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"6373:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":242,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6346:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"EmitStatement","src":"6341:45:0"},{"expression":{"hexValue":"74727565","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6407:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":227,"id":250,"nodeType":"Return","src":"6400:11:0"}]}}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"5927:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":257,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6164:10:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"role","nameLocation":"6183:4:0","nodeType":"VariableDeclaration","scope":257,"src":"6175:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"account","nameLocation":"6197:7:0","nodeType":"VariableDeclaration","scope":257,"src":"6189:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"6189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6174:31:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"6232:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"6232:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6231:6:0"},"scope":296,"src":"6155:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"6792:233:0","statements":[{"condition":{"arguments":[{"id":268,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":269,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":267,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":292,"nodeType":"Block","src":"6982:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7003:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":266,"id":291,"nodeType":"Return","src":"6996:12:0"}]},"id":293,"nodeType":"IfStatement","src":"6802:217:0","trueBody":{"id":289,"nodeType":"Block","src":"6830:146:0","statements":[{"expression":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":271,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6844:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":273,"indexExpression":{"id":272,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6851:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6844:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6857:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6844:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":276,"indexExpression":{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6865:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6844:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6876:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6844:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"ExpressionStatement","src":"6844:37:0"},{"eventCall":{"arguments":[{"id":281,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"6927:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"6900:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6900:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"EmitStatement","src":"6895:45:0"},{"expression":{"hexValue":"74727565","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6961:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":266,"id":288,"nodeType":"Return","src":"6954:11:0"}]}}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"6477:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6717:11:0","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"role","nameLocation":"6737:4:0","nodeType":"VariableDeclaration","scope":295,"src":"6729:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"account","nameLocation":"6751:7:0","nodeType":"VariableDeclaration","scope":295,"src":"6743:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"6743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6728:31:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"6786:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"6786:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6785:6:0"},"scope":296,"src":"6708:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":297,"src":"1962:5065:0","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"108:6920:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[379]},"id":380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":298,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":379,"linearizedBaseContracts":[379],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":306,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":306,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":306,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":309,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":318,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":318,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":318,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":318,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":327,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":327,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":327,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":327,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":336,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":336,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":336,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":336,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":346,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":346,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":379,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":354,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":354,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":379,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":362,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":362,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":362,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":379,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":370,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":370,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":379,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":378,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":378,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":379,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":380,"src":"226:3116:1","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2051],"Ownable":[527]},"id":528,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":381,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":528,"sourceUnit":2052,"src":"128:45:2","symbolAliases":[{"foreign":{"id":382,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":385,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"692:7:2"},"id":386,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":527,"linearizedBaseContracts":[527,2051],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":388,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":527,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":393,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":393,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":398,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":398,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":404,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":404,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":402,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":404,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":429,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":410,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":424,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":423,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":416,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":426,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":425,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":430,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":430,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":527,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":436,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":438,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":444,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":443,"id":445,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":447,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":527,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":463,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":451,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":453,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":461,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":457,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":456,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":464,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":527,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":477,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":470,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":465,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":478,"implemented":true,"kind":"function","modifiers":[{"id":468,"kind":"modifierInvocation","modifierName":{"id":467,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":527,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":505,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":500,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":499,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":492,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":502,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":501,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":506,"implemented":true,"kind":"function","modifiers":[{"id":484,"kind":"modifierInvocation","modifierName":{"id":483,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":506,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":527,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":525,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[513],"declarations":[{"constant":false,"id":513,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":515,"initialValue":{"id":514,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":516,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":517,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":519,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":521,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":522,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":520,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":526,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":526,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":527,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":528,"src":"663:2438:2","usedErrors":[393,398],"usedEvents":[404]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3610]},"id":532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":529,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":532,"sourceUnit":3611,"src":"133:59:3","symbolAliases":[{"foreign":{"id":530,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[3610],"IERC4906":[555],"IERC721":[1770]},"id":556,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":533,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:4"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":556,"sourceUnit":532,"src":"133:38:4","symbolAliases":[{"foreign":{"id":534,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"141:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":556,"sourceUnit":560,"src":"172:38:4","symbolAliases":[{"foreign":{"id":536,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"180:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":539,"name":"IERC165","nameLocations":["279:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"279:7:4"},"id":540,"nodeType":"InheritanceSpecifier","src":"279:7:4"},{"baseName":{"id":541,"name":"IERC721","nameLocations":["288:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1770,"src":"288:7:4"},"id":542,"nodeType":"InheritanceSpecifier","src":"288:7:4"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"212:45:4","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":555,"linearizedBaseContracts":[555,1770,3610],"name":"IERC4906","nameLocation":"267:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"302:201:4","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":547,"name":"MetadataUpdate","nameLocation":"514:14:4","nodeType":"EventDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:4","nodeType":"VariableDeclaration","scope":547,"src":"529:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:4"},"src":"508:39:4"},{"anonymous":false,"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"553:212:4","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":554,"name":"BatchMetadataUpdate","nameLocation":"776:19:4","nodeType":"EventDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:4","nodeType":"VariableDeclaration","scope":554,"src":"796:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":552,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:4","nodeType":"VariableDeclaration","scope":554,"src":"818:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:4"},"src":"770:68:4"}],"scope":556,"src":"257:583:4","usedErrors":[],"usedEvents":[547,554,1669,1678,1687]}],"src":"107:734:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[1770]},"id":560,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":557,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"106:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":560,"sourceUnit":1771,"src":"132:52:5","symbolAliases":[{"foreign":{"id":558,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"140:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[696],"IERC20Errors":[601],"IERC721Errors":[649]},"id":697,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":561,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"138:141:6","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":601,"linearizedBaseContracts":[601],"name":"IERC20Errors","nameLocation":"290:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"309:309:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":571,"name":"ERC20InsufficientBalance","nameLocation":"629:24:6","nodeType":"ErrorDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"sender","nameLocation":"662:6:6","nodeType":"VariableDeclaration","scope":571,"src":"654:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"balance","nameLocation":"678:7:6","nodeType":"VariableDeclaration","scope":571,"src":"670:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"needed","nameLocation":"695:6:6","nodeType":"VariableDeclaration","scope":571,"src":"687:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:6"},"src":"623:80:6"},{"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"709:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":576,"name":"ERC20InvalidSender","nameLocation":"872:18:6","nodeType":"ErrorDefinition","parameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"sender","nameLocation":"899:6:6","nodeType":"VariableDeclaration","scope":576,"src":"891:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:6"},"src":"866:41:6"},{"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"913:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":581,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:6","nodeType":"ErrorDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:6","nodeType":"VariableDeclaration","scope":581,"src":"1104:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:6"},"src":"1077:45:6"},{"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"1128:345:6","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":590,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:6","nodeType":"ErrorDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"spender","nameLocation":"1519:7:6","nodeType":"VariableDeclaration","scope":590,"src":"1511:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:6","nodeType":"VariableDeclaration","scope":590,"src":"1528:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"needed","nameLocation":"1555:6:6","nodeType":"VariableDeclaration","scope":590,"src":"1547:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:6"},"src":"1478:85:6"},{"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"1569:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":595,"name":"ERC20InvalidApprover","nameLocation":"1754:20:6","nodeType":"ErrorDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"approver","nameLocation":"1783:8:6","nodeType":"VariableDeclaration","scope":595,"src":"1775:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:6"},"src":"1748:45:6"},{"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"1799:195:6","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":600,"name":"ERC20InvalidSpender","nameLocation":"2005:19:6","nodeType":"ErrorDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"spender","nameLocation":"2033:7:6","nodeType":"VariableDeclaration","scope":600,"src":"2025:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:6"},"src":"1999:43:6"}],"scope":697,"src":"280:1764:6","usedErrors":[571,576,581,590,595,600],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"2046:143:6","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":649,"linearizedBaseContracts":[649],"name":"IERC721Errors","nameLocation":"2200:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"2220:219:6","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":607,"name":"ERC721InvalidOwner","nameLocation":"2450:18:6","nodeType":"ErrorDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"2477:5:6","nodeType":"VariableDeclaration","scope":607,"src":"2469:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:6"},"src":"2444:40:6"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"2490:132:6","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":612,"name":"ERC721NonexistentToken","nameLocation":"2633:22:6","nodeType":"ErrorDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:6","nodeType":"VariableDeclaration","scope":612,"src":"2656:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:6"},"src":"2627:46:6"},{"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"2679:289:6","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":621,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:6","nodeType":"ErrorDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"sender","nameLocation":"3008:6:6","nodeType":"VariableDeclaration","scope":621,"src":"3000:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:6","nodeType":"VariableDeclaration","scope":621,"src":"3016:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"owner","nameLocation":"3041:5:6","nodeType":"VariableDeclaration","scope":621,"src":"3033:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:6"},"src":"2973:75:6"},{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"3054:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":626,"name":"ERC721InvalidSender","nameLocation":"3217:19:6","nodeType":"ErrorDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"sender","nameLocation":"3245:6:6","nodeType":"VariableDeclaration","scope":626,"src":"3237:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:6"},"src":"3211:42:6"},{"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"3259:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":631,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:6","nodeType":"ErrorDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:6","nodeType":"VariableDeclaration","scope":631,"src":"3451:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:6"},"src":"3423:46:6"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"3475:247:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":638,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:6","nodeType":"ErrorDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"operator","nameLocation":"3768:8:6","nodeType":"VariableDeclaration","scope":638,"src":"3760:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:6","nodeType":"VariableDeclaration","scope":638,"src":"3778:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:6"},"src":"3727:68:6"},{"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"3801:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":643,"name":"ERC721InvalidApprover","nameLocation":"3986:21:6","nodeType":"ErrorDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"approver","nameLocation":"4016:8:6","nodeType":"VariableDeclaration","scope":643,"src":"4008:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:6"},"src":"3980:46:6"},{"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"4032:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":648,"name":"ERC721InvalidOperator","nameLocation":"4240:21:6","nodeType":"ErrorDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"operator","nameLocation":"4270:8:6","nodeType":"VariableDeclaration","scope":648,"src":"4262:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:6"},"src":"4234:46:6"}],"scope":697,"src":"2190:2092:6","usedErrors":[607,612,621,626,631,638,643,648],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"4284:145:6","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":696,"linearizedBaseContracts":[696],"name":"IERC1155Errors","nameLocation":"4440:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"4461:361:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":661,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:6","nodeType":"ErrorDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"sender","nameLocation":"4868:6:6","nodeType":"VariableDeclaration","scope":661,"src":"4860:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"balance","nameLocation":"4884:7:6","nodeType":"VariableDeclaration","scope":661,"src":"4876:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"needed","nameLocation":"4901:6:6","nodeType":"VariableDeclaration","scope":661,"src":"4893:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:6","nodeType":"VariableDeclaration","scope":661,"src":"4909:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:6"},"src":"4827:99:6"},{"documentation":{"id":662,"nodeType":"StructuredDocumentation","src":"4932:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":666,"name":"ERC1155InvalidSender","nameLocation":"5095:20:6","nodeType":"ErrorDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"sender","nameLocation":"5124:6:6","nodeType":"VariableDeclaration","scope":666,"src":"5116:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:6"},"src":"5089:43:6"},{"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"5138:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":671,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:6","nodeType":"ErrorDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:6","nodeType":"VariableDeclaration","scope":671,"src":"5331:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:6"},"src":"5302:47:6"},{"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"5355:256:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":678,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:6","nodeType":"ErrorDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"operator","nameLocation":"5659:8:6","nodeType":"VariableDeclaration","scope":678,"src":"5651:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"owner","nameLocation":"5677:5:6","nodeType":"VariableDeclaration","scope":678,"src":"5669:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:6"},"src":"5616:68:6"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"5690:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":683,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:6","nodeType":"ErrorDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"approver","nameLocation":"5906:8:6","nodeType":"VariableDeclaration","scope":683,"src":"5898:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:6"},"src":"5869:47:6"},{"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"5922:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":688,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:6","nodeType":"ErrorDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"operator","nameLocation":"6161:8:6","nodeType":"VariableDeclaration","scope":688,"src":"6153:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:6"},"src":"6124:47:6"},{"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"6177:280:6","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":695,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:6","nodeType":"ErrorDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:6","nodeType":"VariableDeclaration","scope":695,"src":"6494:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:6","nodeType":"VariableDeclaration","scope":695,"src":"6513:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:6"},"src":"6462:73:6"}],"scope":697,"src":"4430:2107:6","usedErrors":[661,666,671,678,683,688,695],"usedEvents":[]}],"src":"112:6426:6"},"id":6},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2051],"ERC165":[3598],"ERC721":[1653],"ERC721Utils":[2021],"IERC165":[3610],"IERC721":[1770],"IERC721Errors":[649],"IERC721Metadata":[1944],"Strings":[3574]},"id":1654,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":698,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":700,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":1771,"src":"133:38:7","symbolAliases":[{"foreign":{"id":699,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"141:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":702,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":1945,"src":"172:65:7","symbolAliases":[{"foreign":{"id":701,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"180:15:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":704,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":2022,"src":"238:52:7","symbolAliases":[{"foreign":{"id":703,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"246:11:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":706,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":2052,"src":"291:48:7","symbolAliases":[{"foreign":{"id":705,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"299:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":708,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":3575,"src":"340:48:7","symbolAliases":[{"foreign":{"id":707,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"348:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":711,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":3599,"src":"389:69:7","symbolAliases":[{"foreign":{"id":709,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"397:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":710,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"406:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":713,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":697,"src":"459:66:7","symbolAliases":[{"foreign":{"id":712,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"467:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":715,"name":"Context","nameLocations":["803:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"803:7:7"},"id":716,"nodeType":"InheritanceSpecifier","src":"803:7:7"},{"baseName":{"id":717,"name":"ERC165","nameLocations":["812:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3598,"src":"812:6:7"},"id":718,"nodeType":"InheritanceSpecifier","src":"812:6:7"},{"baseName":{"id":719,"name":"IERC721","nameLocations":["820:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1770,"src":"820:7:7"},"id":720,"nodeType":"InheritanceSpecifier","src":"820:7:7"},{"baseName":{"id":721,"name":"IERC721Metadata","nameLocations":["829:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1944,"src":"829:15:7"},"id":722,"nodeType":"InheritanceSpecifier","src":"829:15:7"},{"baseName":{"id":723,"name":"IERC721Errors","nameLocations":["846:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"846:13:7"},"id":724,"nodeType":"InheritanceSpecifier","src":"846:13:7"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"527:247:7","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1653,"linearizedBaseContracts":[1653,649,1944,1770,3598,3610,2051],"name":"ERC721","nameLocation":"793:6:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":727,"libraryName":{"id":725,"name":"Strings","nameLocations":["872:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3574,"src":"872:7:7"},"nodeType":"UsingForDirective","src":"866:26:7","typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":729,"mutability":"mutable","name":"_name","nameLocation":"931:5:7","nodeType":"VariableDeclaration","scope":1653,"src":"916:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":728,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":731,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:7","nodeType":"VariableDeclaration","scope":1653,"src":"963:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":730,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":735,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:7","nodeType":"VariableDeclaration","scope":1653,"src":"992:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":734,"keyName":"tokenId","keyNameLocation":"1008:7:7","keyType":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":739,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:7","nodeType":"VariableDeclaration","scope":1653,"src":"1050:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":738,"keyName":"owner","keyNameLocation":"1066:5:7","keyType":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":743,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:7","nodeType":"VariableDeclaration","scope":1653,"src":"1108:59:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":742,"keyName":"tokenId","keyNameLocation":"1124:7:7","keyType":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":749,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:7","nodeType":"VariableDeclaration","scope":1653,"src":"1174:86:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":748,"keyName":"owner","keyNameLocation":"1190:5:7","keyType":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":747,"keyName":"operator","keyNameLocation":"1215:8:7","keyType":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":746,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":765,"nodeType":"Block","src":"1436:57:7","statements":[{"expression":{"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":757,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1446:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":758,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"1454:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":760,"nodeType":"ExpressionStatement","src":"1446:13:7"},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":761,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"1469:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":762,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"1479:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":764,"nodeType":"ExpressionStatement","src":"1469:17:7"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"1267:108:7","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":766,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"name_","nameLocation":"1406:5:7","nodeType":"VariableDeclaration","scope":766,"src":"1392:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":751,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:7","nodeType":"VariableDeclaration","scope":766,"src":"1413:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":753,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:7"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[],"src":"1436:0:7"},"scope":1653,"src":"1380:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3597,3609],"body":{"id":796,"nodeType":"Block","src":"1635:192:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":777,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"1664:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":779,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"1684:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1770_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1770_$","typeString":"type(contract IERC721)"}],"id":778,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1770","typeString":"type(contract IERC721)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":783,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"1720:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":785,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"1740:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1944_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1944_$","typeString":"type(contract IERC721Metadata)"}],"id":784,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1944","typeString":"type(contract IERC721Metadata)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":792,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"1808:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":790,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1653_$","typeString":"type(contract super ERC721)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:7","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3597,"src":"1784:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":776,"id":795,"nodeType":"Return","src":"1645:175:7"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"1499:23:7","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":797,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:7","nodeType":"FunctionDefinition","overrides":{"id":773,"nodeType":"OverrideSpecifier","overrides":[{"id":771,"name":"ERC165","nameLocations":["1603:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3598,"src":"1603:6:7"},{"id":772,"name":"IERC165","nameLocations":["1611:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"1611:7:7"}],"src":"1594:25:7"},"parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:7","nodeType":"VariableDeclaration","scope":797,"src":"1554:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":768,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:7"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":797,"src":"1629:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":774,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:7"},"scope":1653,"src":"1527:300:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1695],"body":{"id":824,"nodeType":"Block","src":"1933:136:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":805,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1947:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:7","typeDescriptions":{}}},"id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":819,"nodeType":"IfStatement","src":"1943:87:7","trueBody":{"id":818,"nodeType":"Block","src":"1968:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:7","typeDescriptions":{}}},"id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":811,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1989:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"RevertStatement","src":"1982:37:7"}]}},{"expression":{"baseExpression":{"id":820,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"2046:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":822,"indexExpression":{"id":821,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"2056:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":804,"id":823,"nodeType":"Return","src":"2039:23:7"}]},"documentation":{"id":798,"nodeType":"StructuredDocumentation","src":"1833:23:7","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":825,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:7","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"owner","nameLocation":"1888:5:7","nodeType":"VariableDeclaration","scope":825,"src":"1880:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:7"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":825,"src":"1924:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:7"},"scope":1653,"src":"1861:208:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1703],"body":{"id":837,"nodeType":"Block","src":"2175:46:7","statements":[{"expression":{"arguments":[{"id":834,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"2206:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":833,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2192:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":832,"id":836,"nodeType":"Return","src":"2185:29:7"}]},"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"2075:23:7","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":838,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:7","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:7","nodeType":"VariableDeclaration","scope":838,"src":"2120:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:7"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":838,"src":"2166:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:7"},"scope":1653,"src":"2103:118:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1929],"body":{"id":846,"nodeType":"Block","src":"2323:29:7","statements":[{"expression":{"id":844,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"2340:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":843,"id":845,"nodeType":"Return","src":"2333:12:7"}]},"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"2227:31:7","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":847,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:7","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[],"src":"2276:2:7"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":847,"src":"2308:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":841,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:7"},"scope":1653,"src":"2263:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1935],"body":{"id":855,"nodeType":"Block","src":"2456:31:7","statements":[{"expression":{"id":853,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"2473:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":852,"id":854,"nodeType":"Return","src":"2466:14:7"}]},"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"2358:31:7","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":856,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:7","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"2409:2:7"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":856,"src":"2441:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":850,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:7"},"scope":1653,"src":"2394:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1943],"body":{"id":891,"nodeType":"Block","src":"2608:176:7","statements":[{"expression":{"arguments":[{"id":865,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"2632:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":864,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2618:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":867,"nodeType":"ExpressionStatement","src":"2618:22:7"},{"assignments":[869],"declarations":[{"constant":false,"id":869,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:7","nodeType":"VariableDeclaration","scope":891,"src":"2651:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":868,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":872,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":870,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"2675:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:7"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":875,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2708:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":873,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:7","typeDescriptions":{}}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:7","memberName":"length","nodeType":"MemberAccess","src":"2702:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:7","trueExpression":{"arguments":[{"id":883,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2744:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":884,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"2753:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:7","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2286,"src":"2753:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":880,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:7","typeDescriptions":{}}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:7","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:7","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":863,"id":890,"nodeType":"Return","src":"2695:82:7"}]},"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"2493:31:7","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":892,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:7","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:7","nodeType":"VariableDeclaration","scope":892,"src":"2547:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:7"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":892,"src":"2593:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":861,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:7"},"scope":1653,"src":"2529:255:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":900,"nodeType":"Block","src":"3092:26:7","statements":[{"expression":{"hexValue":"","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":897,"id":899,"nodeType":"Return","src":"3102:9:7"}]},"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"2790:231:7","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":901,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:7","nodeType":"FunctionDefinition","parameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"3043:2:7"},"returnParameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"3077:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":895,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:7"},"scope":1653,"src":"3026:92:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1743],"body":{"id":916,"nodeType":"Block","src":"3213:52:7","statements":[{"expression":{"arguments":[{"id":910,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"3232:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"3236:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":912,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"3245:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":909,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1520,1586],"referencedDeclaration":1520,"src":"3223:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"ExpressionStatement","src":"3223:35:7"}]},"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"3124:23:7","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":917,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:7","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"to","nameLocation":"3177:2:7","nodeType":"VariableDeclaration","scope":917,"src":"3169:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:7","nodeType":"VariableDeclaration","scope":917,"src":"3181:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:7"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"3213:0:7"},"scope":1653,"src":"3152:113:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1759],"body":{"id":933,"nodeType":"Block","src":"3375:78:7","statements":[{"expression":{"arguments":[{"id":926,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3399:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":925,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"3385:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":928,"nodeType":"ExpressionStatement","src":"3385:22:7"},{"expression":{"arguments":[{"id":930,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3438:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":929,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"3425:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":924,"id":932,"nodeType":"Return","src":"3418:28:7"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"3271:23:7","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":934,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:7","nodeType":"FunctionDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:7","nodeType":"VariableDeclaration","scope":934,"src":"3320:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:7"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":934,"src":"3366:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:7"},"scope":1653,"src":"3299:154:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1751],"body":{"id":949,"nodeType":"Block","src":"3562:69:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":943,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"3591:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"3605:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3615:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":942,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"3572:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"ExpressionStatement","src":"3572:52:7"}]},"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"3459:23:7","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":950,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:7","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"operator","nameLocation":"3522:8:7","nodeType":"VariableDeclaration","scope":950,"src":"3514:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"approved","nameLocation":"3537:8:7","nodeType":"VariableDeclaration","scope":950,"src":"3532:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":938,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:7"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[],"src":"3562:0:7"},"scope":1653,"src":"3487:144:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1769],"body":{"id":966,"nodeType":"Block","src":"3759:59:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":960,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3776:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":962,"indexExpression":{"id":961,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"3795:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":964,"indexExpression":{"id":963,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"3802:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":959,"id":965,"nodeType":"Return","src":"3769:42:7"}]},"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"3637:23:7","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":967,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:7","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"owner","nameLocation":"3699:5:7","nodeType":"VariableDeclaration","scope":967,"src":"3691:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"operator","nameLocation":"3714:8:7","nodeType":"VariableDeclaration","scope":967,"src":"3706:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:7"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"3753:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":957,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:7"},"scope":1653,"src":"3665:153:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1735],"body":{"id":1012,"nodeType":"Block","src":"3932:498:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":977,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"3946:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:7","typeDescriptions":{}}},"id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":991,"nodeType":"IfStatement","src":"3942:87:7","trueBody":{"id":990,"nodeType":"Block","src":"3964:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:7","typeDescriptions":{}}},"id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":983,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"3985:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"RevertStatement","src":"3978:40:7"}]}},{"assignments":[993],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:7","nodeType":"VariableDeclaration","scope":1012,"src":"4247:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1000,"initialValue":{"arguments":[{"id":995,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"4279:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":996,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"4283:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":997,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"4292:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":994,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"4271:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4319:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1002,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"4336:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1011,"nodeType":"IfStatement","src":"4315:109:7","trueBody":{"id":1010,"nodeType":"Block","src":"4342:82:7","statements":[{"errorCall":{"arguments":[{"id":1005,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"4384:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1006,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"4390:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1007,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4399:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1004,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"4363:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1009,"nodeType":"RevertStatement","src":"4356:57:7"}]}}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"3824:23:7","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":1013,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:7","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"from","nameLocation":"3882:4:7","nodeType":"VariableDeclaration","scope":1013,"src":"3874:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"to","nameLocation":"3896:2:7","nodeType":"VariableDeclaration","scope":1013,"src":"3888:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:7","nodeType":"VariableDeclaration","scope":1013,"src":"3900:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:7"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"3932:0:7"},"scope":1653,"src":"3852:578:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1725],"body":{"id":1030,"nodeType":"Block","src":"4540:56:7","statements":[{"expression":{"arguments":[{"id":1024,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4567:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1025,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"4573:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1026,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4577:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1023,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1031,1061],"referencedDeclaration":1061,"src":"4550:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1029,"nodeType":"ExpressionStatement","src":"4550:39:7"}]},"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"4436:23:7","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:7","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"from","nameLocation":"4498:4:7","nodeType":"VariableDeclaration","scope":1031,"src":"4490:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"to","nameLocation":"4512:2:7","nodeType":"VariableDeclaration","scope":1031,"src":"4504:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:7","nodeType":"VariableDeclaration","scope":1031,"src":"4516:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:7"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"4540:0:7"},"scope":1653,"src":"4464:132:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1715],"body":{"id":1060,"nodeType":"Block","src":"4733:130:7","statements":[{"expression":{"arguments":[{"id":1044,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"4756:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1045,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4762:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1046,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"4766:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1043,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"4743:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1048,"nodeType":"ExpressionStatement","src":"4743:31:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1052,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"4818:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"4832:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4838:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1056,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"4842:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1057,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"4851:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1049,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4784:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2021_$","typeString":"type(library ERC721Utils)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"4784:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1059,"nodeType":"ExpressionStatement","src":"4784:72:7"}]},"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"4602:23:7","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":1061,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:7","nodeType":"FunctionDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"from","nameLocation":"4664:4:7","nodeType":"VariableDeclaration","scope":1061,"src":"4656:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"to","nameLocation":"4678:2:7","nodeType":"VariableDeclaration","scope":1061,"src":"4670:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:7","nodeType":"VariableDeclaration","scope":1061,"src":"4682:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"data","nameLocation":"4712:4:7","nodeType":"VariableDeclaration","scope":1061,"src":"4699:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1039,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:7"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"4733:0:7"},"scope":1653,"src":"4630:233:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1073,"nodeType":"Block","src":"5453:40:7","statements":[{"expression":{"baseExpression":{"id":1069,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"5470:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1071,"indexExpression":{"id":1070,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"5478:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1068,"id":1072,"nodeType":"Return","src":"5463:23:7"}]},"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"4869:504:7","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1074,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:7","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:7","nodeType":"VariableDeclaration","scope":1074,"src":"5396:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:7"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1074,"src":"5444:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:7"},"scope":1653,"src":"5378:115:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1086,"nodeType":"Block","src":"5688:48:7","statements":[{"expression":{"baseExpression":{"id":1082,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"5705:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1084,"indexExpression":{"id":1083,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"5721:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1081,"id":1085,"nodeType":"Return","src":"5698:31:7"}]},"documentation":{"id":1075,"nodeType":"StructuredDocumentation","src":"5499:105:7","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1087,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:7","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:7","nodeType":"VariableDeclaration","scope":1087,"src":"5631:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:7"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1087,"src":"5679:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:7"},"scope":1653,"src":"5609:127:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1122,"nodeType":"Block","src":"6156:163:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1099,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"6185:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:7","typeDescriptions":{}}},"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1105,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"6223:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1106,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"6232:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"6260:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1110,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"6267:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1108,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"6243:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1114,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6292:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1113,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"6279:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1116,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"6304:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1098,"id":1121,"nodeType":"Return","src":"6166:146:7"}]},"documentation":{"id":1088,"nodeType":"StructuredDocumentation","src":"5742:300:7","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1123,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:7","nodeType":"FunctionDefinition","parameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"owner","nameLocation":"6078:5:7","nodeType":"VariableDeclaration","scope":1123,"src":"6070:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"spender","nameLocation":"6093:7:7","nodeType":"VariableDeclaration","scope":1123,"src":"6085:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:7","nodeType":"VariableDeclaration","scope":1123,"src":"6102:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:7"},"returnParameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1123,"src":"6150:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1096,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:7"},"scope":1653,"src":"6047:272:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1159,"nodeType":"Block","src":"6848:271:7","statements":[{"condition":{"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:7","subExpression":{"arguments":[{"id":1134,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6877:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1135,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"6884:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1136,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6893:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1133,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6863:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1158,"nodeType":"IfStatement","src":"6858:255:7","trueBody":{"id":1157,"nodeType":"Block","src":"6903:210:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1139,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6921:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:7","typeDescriptions":{}}},"id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1155,"nodeType":"Block","src":"7019:84:7","statements":[{"errorCall":{"arguments":[{"id":1151,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"7071:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1152,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"7080:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1150,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"7044:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"RevertStatement","src":"7037:51:7"}]},"id":1156,"nodeType":"IfStatement","src":"6917:186:7","trueBody":{"id":1149,"nodeType":"Block","src":"6942:71:7","statements":[{"errorCall":{"arguments":[{"id":1146,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6990:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1145,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6967:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1148,"nodeType":"RevertStatement","src":"6960:38:7"}]}}]}}]},"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"6325:421:7","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1160,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:7","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"owner","nameLocation":"6785:5:7","nodeType":"VariableDeclaration","scope":1160,"src":"6777:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"spender","nameLocation":"6800:7:7","nodeType":"VariableDeclaration","scope":1160,"src":"6792:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:7","nodeType":"VariableDeclaration","scope":1160,"src":"6809:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:7"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[],"src":"6848:0:7"},"scope":1653,"src":"6751:368:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1175,"nodeType":"Block","src":"7836:78:7","statements":[{"id":1174,"nodeType":"UncheckedBlock","src":"7846:62:7","statements":[{"expression":{"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1168,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"7870:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1170,"indexExpression":{"id":1169,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"7880:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"7892:5:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1173,"nodeType":"ExpressionStatement","src":"7870:27:7"}]}]},"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"7125:631:7","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1176,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:7","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"account","nameLocation":"7795:7:7","nodeType":"VariableDeclaration","scope":1176,"src":"7787:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"value","nameLocation":"7812:5:7","nodeType":"VariableDeclaration","scope":1176,"src":"7804:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1164,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:7"},"returnParameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"7836:0:7"},"scope":1653,"src":"7761:153:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"8602:700:7","statements":[{"assignments":[1189],"declarations":[{"constant":false,"id":1189,"mutability":"mutable","name":"from","nameLocation":"8620:4:7","nodeType":"VariableDeclaration","scope":1265,"src":"8612:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1193,"initialValue":{"arguments":[{"id":1191,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"8636:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1190,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"8627:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"8704:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:7","typeDescriptions":{}}},"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1207,"nodeType":"IfStatement","src":"8700:86:7","trueBody":{"id":1206,"nodeType":"Block","src":"8724:62:7","statements":[{"expression":{"arguments":[{"id":1201,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"8755:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1202,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"8761:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1203,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"8767:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1200,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"8738:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1205,"nodeType":"ExpressionStatement","src":"8738:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"8830:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1209,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:7","typeDescriptions":{}}},"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1235,"nodeType":"IfStatement","src":"8826:256:7","trueBody":{"id":1234,"nodeType":"Block","src":"8850:232:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:7","typeDescriptions":{}}},"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1219,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"8967:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:7","typeDescriptions":{}}},"id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1214,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1520,1586],"referencedDeclaration":1586,"src":"8946:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1226,"nodeType":"ExpressionStatement","src":"8946:48:7"},{"id":1233,"nodeType":"UncheckedBlock","src":"9009:63:7","statements":[{"expression":{"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1227,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"9037:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1229,"indexExpression":{"id":1228,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"9047:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1232,"nodeType":"ExpressionStatement","src":"9037:20:7"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"9096:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:7","typeDescriptions":{}}},"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1250,"nodeType":"IfStatement","src":"9092:107:7","trueBody":{"id":1249,"nodeType":"Block","src":"9114:85:7","statements":[{"id":1248,"nodeType":"UncheckedBlock","src":"9128:61:7","statements":[{"expression":{"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1242,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"9156:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1244,"indexExpression":{"id":1243,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"9166:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1247,"nodeType":"ExpressionStatement","src":"9156:18:7"}]}]}},{"expression":{"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1251,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"9209:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1253,"indexExpression":{"id":1252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"9217:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"9228:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1256,"nodeType":"ExpressionStatement","src":"9209:21:7"},{"eventCall":{"arguments":[{"id":1258,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"9255:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1259,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"9261:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1260,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"9265:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1257,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"9246:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1262,"nodeType":"EmitStatement","src":"9241:32:7"},{"expression":{"id":1263,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"9291:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1187,"id":1264,"nodeType":"Return","src":"9284:11:7"}]},"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"7920:582:7","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:7","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"to","nameLocation":"8532:2:7","nodeType":"VariableDeclaration","scope":1266,"src":"8524:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:7","nodeType":"VariableDeclaration","scope":1266,"src":"8536:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"auth","nameLocation":"8561:4:7","nodeType":"VariableDeclaration","scope":1266,"src":"8553:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:7"},"returnParameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"8593:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:7"},"scope":1653,"src":"8507:795:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1315,"nodeType":"Block","src":"9677:274:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1274,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"9691:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:7","typeDescriptions":{}}},"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1288,"nodeType":"IfStatement","src":"9687:87:7","trueBody":{"id":1287,"nodeType":"Block","src":"9709:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:7","typeDescriptions":{}}},"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1280,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"9730:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"RevertStatement","src":"9723:40:7"}]}},{"assignments":[1290],"declarations":[{"constant":false,"id":1290,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:7","nodeType":"VariableDeclaration","scope":1315,"src":"9783:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1299,"initialValue":{"arguments":[{"id":1292,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"9815:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1293,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"9819:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1294,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:7","typeDescriptions":{}}},"id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1291,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9807:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1300,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"9853:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1301,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:7","typeDescriptions":{}}},"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1314,"nodeType":"IfStatement","src":"9849:96:7","trueBody":{"id":1313,"nodeType":"Block","src":"9882:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:7","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1306,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"9903:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1312,"nodeType":"RevertStatement","src":"9896:38:7"}]}}]},"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"9308:311:7","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1316,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:7","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"to","nameLocation":"9647:2:7","nodeType":"VariableDeclaration","scope":1316,"src":"9639:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:7","nodeType":"VariableDeclaration","scope":1316,"src":"9651:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:7"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[],"src":"9677:0:7"},"scope":1653,"src":"9624:327:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1330,"nodeType":"Block","src":"10359:43:7","statements":[{"expression":{"arguments":[{"id":1325,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"10379:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1326,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"10383:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1324,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1331,1361],"referencedDeclaration":1361,"src":"10369:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"ExpressionStatement","src":"10369:26:7"}]},"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"9957:340:7","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1331,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:7","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"to","nameLocation":"10329:2:7","nodeType":"VariableDeclaration","scope":1331,"src":"10321:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:7","nodeType":"VariableDeclaration","scope":1331,"src":"10333:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:7"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"10359:0:7"},"scope":1653,"src":"10302:100:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1360,"nodeType":"Block","src":"10707:123:7","statements":[{"expression":{"arguments":[{"id":1342,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"10723:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1343,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"10727:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1341,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"10717:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1345,"nodeType":"ExpressionStatement","src":"10717:18:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"10779:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:7","typeDescriptions":{}}},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1355,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"10805:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1356,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"10809:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1357,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"10818:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1346,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"10745:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2021_$","typeString":"type(library ERC721Utils)"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"10745:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1359,"nodeType":"ExpressionStatement","src":"10745:78:7"}]},"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"10408:210:7","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:7","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"to","nameLocation":"10650:2:7","nodeType":"VariableDeclaration","scope":1361,"src":"10642:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:7","nodeType":"VariableDeclaration","scope":1361,"src":"10654:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"data","nameLocation":"10684:4:7","nodeType":"VariableDeclaration","scope":1361,"src":"10671:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1337,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:7"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[],"src":"10707:0:7"},"scope":1653,"src":"10623:207:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1393,"nodeType":"Block","src":"11197:186:7","statements":[{"assignments":[1368],"declarations":[{"constant":false,"id":1368,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:7","nodeType":"VariableDeclaration","scope":1393,"src":"11207:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1380,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:7","typeDescriptions":{}}},"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1374,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"11251:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:7","typeDescriptions":{}}},"id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1369,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11231:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"11285:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:7","typeDescriptions":{}}},"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1392,"nodeType":"IfStatement","src":"11281:96:7","trueBody":{"id":1391,"nodeType":"Block","src":"11314:63:7","statements":[{"errorCall":{"arguments":[{"id":1388,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"11358:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1387,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"11335:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1390,"nodeType":"RevertStatement","src":"11328:38:7"}]}}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"10836:315:7","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:7","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:7","nodeType":"VariableDeclaration","scope":1394,"src":"11171:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:7"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[],"src":"11197:0:7"},"scope":1653,"src":"11156:227:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1453,"nodeType":"Block","src":"11778:389:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"11792:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:7","typeDescriptions":{}}},"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"11788:87:7","trueBody":{"id":1417,"nodeType":"Block","src":"11810:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:7","typeDescriptions":{}}},"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1410,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"11831:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"11824:40:7"}]}},{"assignments":[1420],"declarations":[{"constant":false,"id":1420,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:7","nodeType":"VariableDeclaration","scope":1453,"src":"11884:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1429,"initialValue":{"arguments":[{"id":1422,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"11916:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1423,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"11920:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:7","typeDescriptions":{}}},"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1421,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11908:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"11954:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:7","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"12056:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1442,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"12073:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1451,"nodeType":"IfStatement","src":"12052:109:7","trueBody":{"id":1450,"nodeType":"Block","src":"12079:82:7","statements":[{"errorCall":{"arguments":[{"id":1445,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"12121:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1446,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"12127:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1447,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"12136:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1444,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"12100:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1449,"nodeType":"RevertStatement","src":"12093:57:7"}]}},"id":1452,"nodeType":"IfStatement","src":"11950:211:7","trueBody":{"id":1440,"nodeType":"Block","src":"11983:63:7","statements":[{"errorCall":{"arguments":[{"id":1437,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"12027:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1436,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"12004:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"RevertStatement","src":"11997:38:7"}]}}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"11389:313:7","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1454,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:7","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"from","nameLocation":"11734:4:7","nodeType":"VariableDeclaration","scope":1454,"src":"11726:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"to","nameLocation":"11748:2:7","nodeType":"VariableDeclaration","scope":1454,"src":"11740:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:7","nodeType":"VariableDeclaration","scope":1454,"src":"11752:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:7"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[],"src":"11778:0:7"},"scope":1653,"src":"11707:460:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1471,"nodeType":"Block","src":"13176:53:7","statements":[{"expression":{"arguments":[{"id":1465,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"13200:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1466,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"13206:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1467,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"13210:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1464,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1472,1502],"referencedDeclaration":1502,"src":"13186:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"13186:36:7"}]},"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"12173:923:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1472,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:7","nodeType":"FunctionDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"from","nameLocation":"13132:4:7","nodeType":"VariableDeclaration","scope":1472,"src":"13124:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"to","nameLocation":"13146:2:7","nodeType":"VariableDeclaration","scope":1472,"src":"13138:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:7","nodeType":"VariableDeclaration","scope":1472,"src":"13150:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:7"},"returnParameters":{"id":1463,"nodeType":"ParameterList","parameters":[],"src":"13176:0:7"},"scope":1653,"src":"13101:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1501,"nodeType":"Block","src":"13568:127:7","statements":[{"expression":{"arguments":[{"id":1485,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"13588:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"13594:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"13598:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1484,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"13578:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"13578:28:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1493,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"13650:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1495,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"13664:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1496,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"13670:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1497,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"13674:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1498,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"13683:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1490,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"13616:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2021_$","typeString":"type(library ERC721Utils)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"13616:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1500,"nodeType":"ExpressionStatement","src":"13616:72:7"}]},"documentation":{"id":1473,"nodeType":"StructuredDocumentation","src":"13235:226:7","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1502,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:7","nodeType":"FunctionDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"from","nameLocation":"13497:4:7","nodeType":"VariableDeclaration","scope":1502,"src":"13489:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1474,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1477,"mutability":"mutable","name":"to","nameLocation":"13511:2:7","nodeType":"VariableDeclaration","scope":1502,"src":"13503:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:7","nodeType":"VariableDeclaration","scope":1502,"src":"13515:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1481,"mutability":"mutable","name":"data","nameLocation":"13545:4:7","nodeType":"VariableDeclaration","scope":1502,"src":"13532:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1480,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:7"},"returnParameters":{"id":1483,"nodeType":"ParameterList","parameters":[],"src":"13568:0:7"},"scope":1653,"src":"13466:229:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1519,"nodeType":"Block","src":"14208:50:7","statements":[{"expression":{"arguments":[{"id":1513,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"14227:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"14231:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1515,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"14240:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1512,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1520,1586],"referencedDeclaration":1586,"src":"14218:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1518,"nodeType":"ExpressionStatement","src":"14218:33:7"}]},"documentation":{"id":1503,"nodeType":"StructuredDocumentation","src":"13701:432:7","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1520,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:7","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"to","nameLocation":"14164:2:7","nodeType":"VariableDeclaration","scope":1520,"src":"14156:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:7","nodeType":"VariableDeclaration","scope":1520,"src":"14168:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"auth","nameLocation":"14193:4:7","nodeType":"VariableDeclaration","scope":1520,"src":"14185:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1508,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:7"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[],"src":"14208:0:7"},"scope":1653,"src":"14138:120:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1585,"nodeType":"Block","src":"14534:568:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1532,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"14600:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"14613:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:7","typeDescriptions":{}}},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1578,"nodeType":"IfStatement","src":"14596:460:7","trueBody":{"id":1577,"nodeType":"Block","src":"14633:423:7","statements":[{"assignments":[1541],"declarations":[{"constant":false,"id":1541,"mutability":"mutable","name":"owner","nameLocation":"14655:5:7","nodeType":"VariableDeclaration","scope":1577,"src":"14647:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1545,"initialValue":{"arguments":[{"id":1543,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"14677:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1542,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"14663:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1546,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"14813:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:7","typeDescriptions":{}}},"id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"14835:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1553,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"14844:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:7","subExpression":{"arguments":[{"id":1557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"14870:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1558,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"14877:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1556,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"14853:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1567,"nodeType":"IfStatement","src":"14809:142:7","trueBody":{"id":1566,"nodeType":"Block","src":"14884:67:7","statements":[{"errorCall":{"arguments":[{"id":1563,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"14931:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1562,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"14909:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"RevertStatement","src":"14902:34:7"}]}},{"condition":{"id":1568,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"14969:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1576,"nodeType":"IfStatement","src":"14965:81:7","trueBody":{"id":1575,"nodeType":"Block","src":"14980:66:7","statements":[{"eventCall":{"arguments":[{"id":1570,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"15012:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1571,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"15019:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1572,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"15023:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1569,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"15003:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1574,"nodeType":"EmitStatement","src":"14998:33:7"}]}}]}},{"expression":{"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1579,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"15066:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1581,"indexExpression":{"id":1580,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"15082:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1582,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"15093:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1584,"nodeType":"ExpressionStatement","src":"15066:29:7"}]},"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"14264:171:7","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1586,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:7","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"to","nameLocation":"14466:2:7","nodeType":"VariableDeclaration","scope":1586,"src":"14458:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1525,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:7","nodeType":"VariableDeclaration","scope":1586,"src":"14470:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"auth","nameLocation":"14495:4:7","nodeType":"VariableDeclaration","scope":1586,"src":"14487:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:7","nodeType":"VariableDeclaration","scope":1586,"src":"14501:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1528,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:7"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[],"src":"14534:0:7"},"scope":1653,"src":"14440:662:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1622,"nodeType":"Block","src":"15404:219:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1596,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"15418:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:7","typeDescriptions":{}}},"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1607,"nodeType":"IfStatement","src":"15414:91:7","trueBody":{"id":1606,"nodeType":"Block","src":"15442:63:7","statements":[{"errorCall":{"arguments":[{"id":1603,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"15485:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1602,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"15463:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1605,"nodeType":"RevertStatement","src":"15456:38:7"}]}},{"expression":{"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1608,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"15514:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1611,"indexExpression":{"id":1609,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"15533:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1612,"indexExpression":{"id":1610,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"15540:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1613,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"15552:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1615,"nodeType":"ExpressionStatement","src":"15514:46:7"},{"eventCall":{"arguments":[{"id":1617,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"15590:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1618,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"15597:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1619,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"15607:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1616,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"15575:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1621,"nodeType":"EmitStatement","src":"15570:46:7"}]},"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"15108:198:7","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1623,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:7","nodeType":"FunctionDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"owner","nameLocation":"15347:5:7","nodeType":"VariableDeclaration","scope":1623,"src":"15339:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"operator","nameLocation":"15362:8:7","nodeType":"VariableDeclaration","scope":1623,"src":"15354:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"approved","nameLocation":"15377:8:7","nodeType":"VariableDeclaration","scope":1623,"src":"15372:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1592,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:7"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[],"src":"15404:0:7"},"scope":1653,"src":"15311:312:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1651,"nodeType":"Block","src":"15930:169:7","statements":[{"assignments":[1632],"declarations":[{"constant":false,"id":1632,"mutability":"mutable","name":"owner","nameLocation":"15948:5:7","nodeType":"VariableDeclaration","scope":1651,"src":"15940:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1636,"initialValue":{"arguments":[{"id":1634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"15965:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1633,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"15956:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"15987:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:7","typeDescriptions":{}}},"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"15983:88:7","trueBody":{"id":1647,"nodeType":"Block","src":"16008:63:7","statements":[{"errorCall":{"arguments":[{"id":1644,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"16052:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1643,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"16029:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1646,"nodeType":"RevertStatement","src":"16022:38:7"}]}},{"expression":{"id":1649,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"16087:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1630,"id":1650,"nodeType":"Return","src":"16080:12:7"}]},"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"15629:224:7","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1652,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:7","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:7","nodeType":"VariableDeclaration","scope":1652,"src":"15881:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:7"},"returnParameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1652,"src":"15921:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:7"},"scope":1653,"src":"15858:241:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1654,"src":"775:15326:7","usedErrors":[607,612,621,626,631,638,643,648],"usedEvents":[1669,1678,1687]}],"src":"107:15995:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3610],"IERC721":[1770]},"id":1771,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1655,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1657,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1771,"sourceUnit":3611,"src":"134:62:8","symbolAliases":[{"foreign":{"id":1656,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"142:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1659,"name":"IERC165","nameLocations":["288:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"288:7:8"},"id":1660,"nodeType":"InheritanceSpecifier","src":"288:7:8"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"198:68:8","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1770,"linearizedBaseContracts":[1770,3610],"name":"IERC721","nameLocation":"277:7:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1661,"nodeType":"StructuredDocumentation","src":"302:88:8","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1669,"name":"Transfer","nameLocation":"401:8:8","nodeType":"EventDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:8","nodeType":"VariableDeclaration","scope":1669,"src":"410:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1662,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1665,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:8","nodeType":"VariableDeclaration","scope":1669,"src":"432:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1664,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1667,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:8","nodeType":"VariableDeclaration","scope":1669,"src":"452:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:8"},"src":"395:82:8"},{"anonymous":false,"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"483:94:8","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1678,"name":"Approval","nameLocation":"588:8:8","nodeType":"EventDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:8","nodeType":"VariableDeclaration","scope":1678,"src":"597:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1674,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:8","nodeType":"VariableDeclaration","scope":1678,"src":"620:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1673,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1676,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:8","nodeType":"VariableDeclaration","scope":1678,"src":"646:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:8"},"src":"582:89:8"},{"anonymous":false,"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"677:117:8","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1687,"name":"ApprovalForAll","nameLocation":"805:14:8","nodeType":"EventDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:8","nodeType":"VariableDeclaration","scope":1687,"src":"820:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1683,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:8","nodeType":"VariableDeclaration","scope":1687,"src":"843:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1685,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:8","nodeType":"VariableDeclaration","scope":1687,"src":"869:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1684,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:8"},"src":"799:85:8"},{"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"890:76:8","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1695,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:8","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"owner","nameLocation":"998:5:8","nodeType":"VariableDeclaration","scope":1695,"src":"990:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:8"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"balance","nameLocation":"1036:7:8","nodeType":"VariableDeclaration","scope":1695,"src":"1028:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:8"},"scope":1770,"src":"971:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"1051:131:8","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1703,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:8","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:8","nodeType":"VariableDeclaration","scope":1703,"src":"1204:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:8"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"owner","nameLocation":"1252:5:8","nodeType":"VariableDeclaration","scope":1703,"src":"1244:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:8"},"scope":1770,"src":"1187:72:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"1265:565:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1715,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:8","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"from","nameLocation":"1869:4:8","nodeType":"VariableDeclaration","scope":1715,"src":"1861:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1705,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"to","nameLocation":"1883:2:8","nodeType":"VariableDeclaration","scope":1715,"src":"1875:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:8","nodeType":"VariableDeclaration","scope":1715,"src":"1887:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"data","nameLocation":"1919:4:8","nodeType":"VariableDeclaration","scope":1715,"src":"1904:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1711,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:8"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[],"src":"1933:0:8"},"scope":1770,"src":"1835:99:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"1940:706:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1725,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:8","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"from","nameLocation":"2685:4:8","nodeType":"VariableDeclaration","scope":1725,"src":"2677:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"to","nameLocation":"2699:2:8","nodeType":"VariableDeclaration","scope":1725,"src":"2691:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:8","nodeType":"VariableDeclaration","scope":1725,"src":"2703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:8"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"2728:0:8"},"scope":1770,"src":"2651:78:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"2735:733:8","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1735,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:8","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"from","nameLocation":"3503:4:8","nodeType":"VariableDeclaration","scope":1735,"src":"3495:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"to","nameLocation":"3517:2:8","nodeType":"VariableDeclaration","scope":1735,"src":"3509:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:8","nodeType":"VariableDeclaration","scope":1735,"src":"3521:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:8"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"3546:0:8"},"scope":1770,"src":"3473:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"3553:452:8","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1743,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:8","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"to","nameLocation":"4035:2:8","nodeType":"VariableDeclaration","scope":1743,"src":"4027:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:8","nodeType":"VariableDeclaration","scope":1743,"src":"4039:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:8"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"4064:0:8"},"scope":1770,"src":"4010:55:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"4071:315:8","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1751,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:8","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"operator","nameLocation":"4426:8:8","nodeType":"VariableDeclaration","scope":1751,"src":"4418:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"approved","nameLocation":"4441:8:8","nodeType":"VariableDeclaration","scope":1751,"src":"4436:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1747,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:8"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"4459:0:8"},"scope":1770,"src":"4391:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"4466:139:8","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1759,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:8","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:8","nodeType":"VariableDeclaration","scope":1759,"src":"4631:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:8"},"returnParameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"operator","nameLocation":"4679:8:8","nodeType":"VariableDeclaration","scope":1759,"src":"4671:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:8"},"scope":1770,"src":"4610:79:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"4695:138:8","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1769,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:8","nodeType":"FunctionDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"owner","nameLocation":"4872:5:8","nodeType":"VariableDeclaration","scope":1769,"src":"4864:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"operator","nameLocation":"4887:8:8","nodeType":"VariableDeclaration","scope":1769,"src":"4879:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:8"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1769,"src":"4920:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1766,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:8"},"scope":1770,"src":"4838:88:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1771,"src":"267:4661:8","usedErrors":[],"usedEvents":[1669,1678,1687]}],"src":"108:4821:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1788]},"id":1789,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1772,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"142:154:9","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1788,"linearizedBaseContracts":[1788],"name":"IERC721Receiver","nameLocation":"307:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"329:500:9","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1787,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:9","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"operator","nameLocation":"877:8:9","nodeType":"VariableDeclaration","scope":1787,"src":"869:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"from","nameLocation":"903:4:9","nodeType":"VariableDeclaration","scope":1787,"src":"895:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:9","nodeType":"VariableDeclaration","scope":1787,"src":"917:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"data","nameLocation":"957:4:9","nodeType":"VariableDeclaration","scope":1787,"src":"942:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1781,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:9"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1787,"src":"986:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1784,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:9"},"scope":1788,"src":"834:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1789,"src":"297:699:9","usedErrors":[],"usedEvents":[]}],"src":"116:881:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1653],"ERC721URIStorage":[1916],"IERC165":[3610],"IERC4906":[555],"IERC721Metadata":[1944],"Strings":[3574]},"id":1917,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1790,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1792,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":1654,"src":"154:37:10","symbolAliases":[{"foreign":{"id":1791,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"162:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./IERC721Metadata.sol","id":1794,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":1945,"src":"192:54:10","symbolAliases":[{"foreign":{"id":1793,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"200:15:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":3575,"src":"247:51:10","symbolAliases":[{"foreign":{"id":1795,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"255:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":556,"src":"299:58:10","symbolAliases":[{"foreign":{"id":1797,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"307:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":1800,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":532,"src":"358:56:10","symbolAliases":[{"foreign":{"id":1799,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"366:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1802,"name":"IERC4906","nameLocations":["525:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":555,"src":"525:8:10"},"id":1803,"nodeType":"InheritanceSpecifier","src":"525:8:10"},{"baseName":{"id":1804,"name":"ERC721","nameLocations":["535:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"535:6:10"},"id":1805,"nodeType":"InheritanceSpecifier","src":"535:6:10"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"416:70:10","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":1916,"linearizedBaseContracts":[1916,1653,649,1944,555,1770,3598,3610,2051],"name":"ERC721URIStorage","nameLocation":"505:16:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1808,"libraryName":{"id":1806,"name":"Strings","nameLocations":["554:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3574,"src":"554:7:10"},"nodeType":"UsingForDirective","src":"548:26:10","typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":1814,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"786:20:10","nodeType":"VariableDeclaration","scope":1916,"src":"762:65:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1809,"name":"bytes4","nodeType":"ElementaryTypeName","src":"762:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"816:10:10","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"809:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1810,"name":"bytes4","nodeType":"ElementaryTypeName","src":"809:6:10","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"809:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":1818,"mutability":"mutable","name":"_tokenURIs","nameLocation":"916:10:10","nodeType":"VariableDeclaration","scope":1916,"src":"873:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1817,"keyName":"tokenId","keyNameLocation":"889:7:10","keyType":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"873:34:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1816,"name":"string","nodeType":"ElementaryTypeName","src":"900:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[797,3609],"body":{"id":1838,"nodeType":"Block","src":"1069:99:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1829,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"1086:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1830,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"1101:20:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1086:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1834,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"1149:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1832,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1125:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1916_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1131:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":797,"src":"1125:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1086:75:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1828,"id":1837,"nodeType":"Return","src":"1079:82:10"}]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"933:23:10","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"970:17:10","nodeType":"FunctionDefinition","overrides":{"id":1825,"nodeType":"OverrideSpecifier","overrides":[{"id":1823,"name":"ERC721","nameLocations":["1037:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"1037:6:10"},{"id":1824,"name":"IERC165","nameLocations":["1045:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"1045:7:10"}],"src":"1028:25:10"},"parameters":{"id":1822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"interfaceId","nameLocation":"995:11:10","nodeType":"VariableDeclaration","scope":1839,"src":"988:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1820,"name":"bytes4","nodeType":"ElementaryTypeName","src":"988:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"987:20:10"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"1063:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1826,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1062:6:10"},"scope":1916,"src":"961:207:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[892],"body":{"id":1895,"nodeType":"Block","src":"1298:505:10","statements":[{"expression":{"arguments":[{"id":1849,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1322:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1848,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"1308:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1851,"nodeType":"ExpressionStatement","src":"1308:22:10"},{"assignments":[1853],"declarations":[{"constant":false,"id":1853,"mutability":"mutable","name":"_tokenURI","nameLocation":"1355:9:10","nodeType":"VariableDeclaration","scope":1895,"src":"1341:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1852,"name":"string","nodeType":"ElementaryTypeName","src":"1341:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1857,"initialValue":{"baseExpression":{"id":1854,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"1367:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1856,"indexExpression":{"id":1855,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1367:19:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1341:45:10"},{"assignments":[1859],"declarations":[{"constant":false,"id":1859,"mutability":"mutable","name":"base","nameLocation":"1410:4:10","nodeType":"VariableDeclaration","scope":1895,"src":"1396:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1858,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1862,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1860,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"1417:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1417:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1396:31:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1865,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"1506:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1500:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1863,"name":"bytes","nodeType":"ElementaryTypeName","src":"1500:5:10","typeDescriptions":{}}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1512:6:10","memberName":"length","nodeType":"MemberAccess","src":"1500:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1522:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1500:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1873,"nodeType":"IfStatement","src":"1496:70:10","trueBody":{"id":1872,"nodeType":"Block","src":"1525:41:10","statements":[{"expression":{"id":1870,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"1546:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1847,"id":1871,"nodeType":"Return","src":"1539:16:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1876,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"1671:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1665:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1874,"name":"bytes","nodeType":"ElementaryTypeName","src":"1665:5:10","typeDescriptions":{}}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1665:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1682:6:10","memberName":"length","nodeType":"MemberAccess","src":"1665:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1691:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1665:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1889,"nodeType":"IfStatement","src":"1661:95:10","trueBody":{"id":1888,"nodeType":"Block","src":"1694:62:10","statements":[{"expression":{"arguments":[{"id":1884,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"1729:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1885,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"1735:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1715:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1881,"name":"string","nodeType":"ElementaryTypeName","src":"1715:6:10","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1722:6:10","memberName":"concat","nodeType":"MemberAccess","src":"1715:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1847,"id":1887,"nodeType":"Return","src":"1708:37:10"}]}},{"expression":{"arguments":[{"id":1892,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1788:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1890,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1773:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1916_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1779:8:10","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":892,"src":"1773:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1847,"id":1894,"nodeType":"Return","src":"1766:30:10"}]},"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"1174:31:10","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":1896,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1219:8:10","nodeType":"FunctionDefinition","overrides":{"id":1844,"nodeType":"OverrideSpecifier","overrides":[],"src":"1265:8:10"},"parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"tokenId","nameLocation":"1236:7:10","nodeType":"VariableDeclaration","scope":1896,"src":"1228:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1227:17:10"},"returnParameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1896,"src":"1283:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1845,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:10"},"scope":1916,"src":"1210:593:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1914,"nodeType":"Block","src":"2012:86:10","statements":[{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1904,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2022:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1906,"indexExpression":{"id":1905,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"2033:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2022:19:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1907,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"2044:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2022:31:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1909,"nodeType":"ExpressionStatement","src":"2022:31:10"},{"eventCall":{"arguments":[{"id":1911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"2083:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1910,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"2068:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1913,"nodeType":"EmitStatement","src":"2063:28:10"}]},"documentation":{"id":1897,"nodeType":"StructuredDocumentation","src":"1809:117:10","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {IERC4906-MetadataUpdate}."},"id":1915,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1940:12:10","nodeType":"FunctionDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"tokenId","nameLocation":"1961:7:10","nodeType":"VariableDeclaration","scope":1915,"src":"1953:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"_tokenURI","nameLocation":"1984:9:10","nodeType":"VariableDeclaration","scope":1915,"src":"1970:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1900,"name":"string","nodeType":"ElementaryTypeName","src":"1970:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1952:42:10"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[],"src":"2012:0:10"},"scope":1916,"src":"1931:167:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1917,"src":"487:1613:10","usedErrors":[607,612,621,626,631,638,643,648],"usedEvents":[547,554,1669,1678,1687]}],"src":"128:1973:10"},"id":10},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1770],"IERC721Metadata":[1944]},"id":1945,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1918,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1920,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1945,"sourceUnit":1771,"src":"153:39:11","symbolAliases":[{"foreign":{"id":1919,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"161:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1922,"name":"IERC721","nameLocations":["357:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1770,"src":"357:7:11"},"id":1923,"nodeType":"InheritanceSpecifier","src":"357:7:11"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"194:133:11","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1944,"linearizedBaseContracts":[1944,1770,3610],"name":"IERC721Metadata","nameLocation":"338:15:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1924,"nodeType":"StructuredDocumentation","src":"371:58:11","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1929,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:11","nodeType":"FunctionDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[],"src":"447:2:11"},"returnParameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1929,"src":"473:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1926,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:11"},"scope":1944,"src":"434:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"494:60:11","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1935,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:11","nodeType":"FunctionDefinition","parameters":{"id":1931,"nodeType":"ParameterList","parameters":[],"src":"574:2:11"},"returnParameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1935,"src":"600:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1932,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:11"},"scope":1944,"src":"559:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"621:90:11","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1943,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:11","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:11","nodeType":"VariableDeclaration","scope":1943,"src":"734:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:11"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1943,"src":"774:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1940,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:11"},"scope":1944,"src":"716:73:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1945,"src":"328:463:11","usedErrors":[],"usedEvents":[1669,1678,1687]}],"src":"127:665:11"},"id":11},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2021],"IERC721Errors":[649],"IERC721Receiver":[1788]},"id":2022,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1946,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2022,"sourceUnit":1789,"src":"144:55:12","symbolAliases":[{"foreign":{"id":1947,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"152:15:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2022,"sourceUnit":697,"src":"200:69:12","symbolAliases":[{"foreign":{"id":1949,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"208:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1951,"nodeType":"StructuredDocumentation","src":"271:159:12","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2021,"linearizedBaseContracts":[2021],"name":"ERC721Utils","nameLocation":"439:11:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2019,"nodeType":"Block","src":"1159:760:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1965,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1173:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:12","memberName":"code","nodeType":"MemberAccess","src":"1173:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:12","memberName":"length","nodeType":"MemberAccess","src":"1173:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2018,"nodeType":"IfStatement","src":"1169:744:12","trueBody":{"id":2017,"nodeType":"Block","src":"1193:720:12","statements":[{"clauses":[{"block":{"id":1995,"nodeType":"Block","src":"1303:214:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1982,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"1325:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1983,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"1335:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1788_$","typeString":"type(contract IERC721Receiver)"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:12","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"1335:32:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:12","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1994,"nodeType":"IfStatement","src":"1321:182:12","trueBody":{"id":1993,"nodeType":"Block","src":"1378:125:12","statements":[{"errorCall":{"arguments":[{"id":1990,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1481:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1987,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"1445:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$649_$","typeString":"type(contract IERC721Errors)"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:12","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":631,"src":"1445:35:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1992,"nodeType":"RevertStatement","src":"1438:46:12"}]}}]},"errorName":"","id":1996,"nodeType":"TryCatchClause","parameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"retval","nameLocation":"1295:6:12","nodeType":"VariableDeclaration","scope":1996,"src":"1288:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1979,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:12"},"src":"1279:238:12"},{"block":{"id":2014,"nodeType":"Block","src":"1546:357:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2000,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"1568:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:12","memberName":"length","nodeType":"MemberAccess","src":"1568:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2012,"nodeType":"Block","src":"1736:153:12","statements":[{"AST":{"nodeType":"YulBlock","src":"1783:88:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1820:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1828:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:12"},"nodeType":"YulFunctionCall","src":"1816:17:12"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1841:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1835:5:12"},"nodeType":"YulFunctionCall","src":"1835:13:12"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1809:6:12"},"nodeType":"YulFunctionCall","src":"1809:40:12"},"nodeType":"YulExpressionStatement","src":"1809:40:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1998,"isOffset":false,"isSlot":false,"src":"1820:6:12","valueSize":1},{"declaration":1998,"isOffset":false,"isSlot":false,"src":"1841:6:12","valueSize":1}],"flags":["memory-safe"],"id":2011,"nodeType":"InlineAssembly","src":"1758:113:12"}]},"id":2013,"nodeType":"IfStatement","src":"1564:325:12","trueBody":{"id":2010,"nodeType":"Block","src":"1588:142:12","statements":[{"errorCall":{"arguments":[{"id":2007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1708:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2004,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"1672:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$649_$","typeString":"type(contract IERC721Errors)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:12","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":631,"src":"1672:35:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"RevertStatement","src":"1665:46:12"}]}}]},"errorName":"","id":2015,"nodeType":"TryCatchClause","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"reason","nameLocation":"1538:6:12","nodeType":"VariableDeclaration","scope":2015,"src":"1525:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1997,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:12"},"src":"1518:385:12"}],"externalCall":{"arguments":[{"id":1974,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"1248:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1975,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"1258:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"1264:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1977,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1273:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1971,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1227:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1970,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"1211:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1788_$","typeString":"type(contract IERC721Receiver)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1788","typeString":"contract IERC721Receiver"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:12","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"1211:36:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:12","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2016,"nodeType":"TryStatement","src":"1207:696:12"}]}}]},"documentation":{"id":1952,"nodeType":"StructuredDocumentation","src":"457:531:12","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:12","nodeType":"FunctionDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"operator","nameLocation":"1041:8:12","nodeType":"VariableDeclaration","scope":2020,"src":"1033:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1953,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1956,"mutability":"mutable","name":"from","nameLocation":"1067:4:12","nodeType":"VariableDeclaration","scope":2020,"src":"1059:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"to","nameLocation":"1089:2:12","nodeType":"VariableDeclaration","scope":2020,"src":"1081:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:12","nodeType":"VariableDeclaration","scope":2020,"src":"1101:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"data","nameLocation":"1139:4:12","nodeType":"VariableDeclaration","scope":2020,"src":"1126:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1961,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:12"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[],"src":"1159:0:12"},"scope":2021,"src":"993:926:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2022,"src":"431:1490:12","usedErrors":[],"usedEvents":[]}],"src":"118:1804:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2051]},"id":2052,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2023,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2024,"nodeType":"StructuredDocumentation","src":"127:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2051,"linearizedBaseContracts":[2051],"name":"Context","nameLocation":"642:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2032,"nodeType":"Block","src":"718:34:13","statements":[{"expression":{"expression":{"id":2029,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:13","memberName":"sender","nodeType":"MemberAccess","src":"735:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2028,"id":2031,"nodeType":"Return","src":"728:17:13"}]},"id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:13","nodeType":"FunctionDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[],"src":"675:2:13"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2033,"src":"709:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2026,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:13"},"scope":2051,"src":"656:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2041,"nodeType":"Block","src":"825:32:13","statements":[{"expression":{"expression":{"id":2038,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:13","memberName":"data","nodeType":"MemberAccess","src":"842:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2037,"id":2040,"nodeType":"Return","src":"835:15:13"}]},"id":2042,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:13","nodeType":"FunctionDefinition","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[],"src":"775:2:13"},"returnParameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2042,"src":"809:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2035,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:13"},"scope":2051,"src":"758:99:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2049,"nodeType":"Block","src":"935:25:13","statements":[{"expression":{"hexValue":"30","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2046,"id":2048,"nodeType":"Return","src":"945:8:13"}]},"id":2050,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:13","nodeType":"FunctionDefinition","parameters":{"id":2043,"nodeType":"ParameterList","parameters":[],"src":"892:2:13"},"returnParameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2050,"src":"926:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:13"},"scope":2051,"src":"863:97:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2052,"src":"624:338:13","usedErrors":[],"usedEvents":[]}],"src":"101:862:13"},"id":13},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2103]},"id":2104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2053,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"125:489:14","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2103,"linearizedBaseContracts":[2103],"name":"Panic","nameLocation":"665:5:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2055,"nodeType":"StructuredDocumentation","src":"677:36:14","text":"@dev generic / unspecified error"},"id":2058,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:14","nodeType":"VariableDeclaration","scope":2103,"src":"718:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"764:37:14","text":"@dev used by the assert() builtin"},"id":2062,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:14","nodeType":"VariableDeclaration","scope":2103,"src":"806:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"851:41:14","text":"@dev arithmetic underflow or overflow"},"id":2066,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:14","nodeType":"VariableDeclaration","scope":2103,"src":"897:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:14","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2067,"nodeType":"StructuredDocumentation","src":"950:35:14","text":"@dev division or modulo by zero"},"id":2070,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:14","nodeType":"VariableDeclaration","scope":2103,"src":"990:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"1045:30:14","text":"@dev enum conversion error"},"id":2074,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:14","nodeType":"VariableDeclaration","scope":2103,"src":"1080:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:14","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2075,"nodeType":"StructuredDocumentation","src":"1140:36:14","text":"@dev invalid encoding in storage"},"id":2078,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:14","nodeType":"VariableDeclaration","scope":2103,"src":"1181:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2079,"nodeType":"StructuredDocumentation","src":"1242:24:14","text":"@dev empty array pop"},"id":2082,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:14","nodeType":"VariableDeclaration","scope":2103,"src":"1271:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2080,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:14","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"1325:35:14","text":"@dev array out of bounds access"},"id":2086,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:14","nodeType":"VariableDeclaration","scope":2103,"src":"1365:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"1423:65:14","text":"@dev resource error (too large allocation or too large array)"},"id":2090,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:14","nodeType":"VariableDeclaration","scope":2103,"src":"1493:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"1546:42:14","text":"@dev calling invalid internal function"},"id":2094,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:14","nodeType":"VariableDeclaration","scope":2103,"src":"1593:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:14","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2101,"nodeType":"Block","src":"1819:151:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:14","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:14"},"nodeType":"YulFunctionCall","src":"1868:24:14"},"nodeType":"YulExpressionStatement","src":"1868:24:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:14","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:14"},"nodeType":"YulFunctionCall","src":"1905:18:14"},"nodeType":"YulExpressionStatement","src":"1905:18:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:14","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:14"},"nodeType":"YulFunctionCall","src":"1936:18:14"},"nodeType":"YulExpressionStatement","src":"1936:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2097,"isOffset":false,"isSlot":false,"src":"1918:4:14","valueSize":1}],"flags":["memory-safe"],"id":2100,"nodeType":"InlineAssembly","src":"1829:135:14"}]},"documentation":{"id":2095,"nodeType":"StructuredDocumentation","src":"1658:113:14","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2102,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:14","nodeType":"FunctionDefinition","parameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2097,"mutability":"mutable","name":"code","nameLocation":"1799:4:14","nodeType":"VariableDeclaration","scope":2102,"src":"1791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:14"},"returnParameters":{"id":2099,"nodeType":"ParameterList","parameters":[],"src":"1819:0:14"},"scope":2103,"src":"1776:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2104,"src":"657:1315:14","usedErrors":[],"usedEvents":[]}],"src":"99:1874:14"},"id":14},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2172]},"id":2173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2105,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:15"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"135:894:15","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2172,"linearizedBaseContracts":[2172],"name":"ReentrancyGuard","nameLocation":"1048:15:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2109,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:15","nodeType":"VariableDeclaration","scope":2172,"src":"1818:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2112,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:15","nodeType":"VariableDeclaration","scope":2172,"src":"1864:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2114,"mutability":"mutable","name":"_status","nameLocation":"1923:7:15","nodeType":"VariableDeclaration","scope":2172,"src":"1907:23:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"1937:52:15","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2117,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:15","nodeType":"ErrorDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[],"src":"2028:2:15"},"src":"1994:37:15"},{"body":{"id":2124,"nodeType":"Block","src":"2051:38:15","statements":[{"expression":{"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2120,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2121,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2071:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2123,"nodeType":"ExpressionStatement","src":"2061:21:15"}]},"id":2125,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[],"src":"2048:2:15"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[],"src":"2051:0:15"},"scope":2172,"src":"2037:52:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2135,"nodeType":"Block","src":"2490:79:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2128,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"2500:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2130,"nodeType":"ExpressionStatement","src":"2500:21:15"},{"id":2131,"nodeType":"PlaceholderStatement","src":"2531:1:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2132,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"2542:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"ExpressionStatement","src":"2542:20:15"}]},"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"2095:366:15","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2136,"name":"nonReentrant","nameLocation":"2475:12:15","nodeType":"ModifierDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"2487:2:15"},"src":"2466:103:15","virtual":false,"visibility":"internal"},{"body":{"id":2151,"nodeType":"Block","src":"2614:268:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2139,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2702:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2140,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2146,"nodeType":"IfStatement","src":"2698:86:15","trueBody":{"id":2145,"nodeType":"Block","src":"2722:62:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2142,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"2743:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2144,"nodeType":"RevertStatement","src":"2736:37:15"}]}},{"expression":{"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2147,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2148,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2868:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2150,"nodeType":"ExpressionStatement","src":"2858:17:15"}]},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:15","nodeType":"FunctionDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[],"src":"2603:2:15"},"returnParameters":{"id":2138,"nodeType":"ParameterList","parameters":[],"src":"2614:0:15"},"scope":2172,"src":"2575:307:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2159,"nodeType":"Block","src":"2926:170:15","statements":[{"expression":{"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2155,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3068:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2156,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"3078:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2158,"nodeType":"ExpressionStatement","src":"3068:21:15"}]},"id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:15","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[],"src":"2915:2:15"},"returnParameters":{"id":2154,"nodeType":"ParameterList","parameters":[],"src":"2926:0:15"},"scope":2172,"src":"2888:208:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2170,"nodeType":"Block","src":"3339:42:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2166,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3356:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2167,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"3367:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2165,"id":2169,"nodeType":"Return","src":"3349:25:15"}]},"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"3102:168:15","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2171,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:15","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[],"src":"3307:2:15"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2171,"src":"3333:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2163,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:15"},"scope":2172,"src":"3275:106:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2173,"src":"1030:2353:15","usedErrors":[2117],"usedEvents":[]}],"src":"109:3275:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5231],"SafeCast":[6996],"SignedMath":[7140],"Strings":[3574]},"id":3575,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3575,"sourceUnit":5232,"src":"127:37:16","symbolAliases":[{"foreign":{"id":2175,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"135:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2178,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3575,"sourceUnit":6997,"src":"165:45:16","symbolAliases":[{"foreign":{"id":2177,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3575,"sourceUnit":7141,"src":"211:49:16","symbolAliases":[{"foreign":{"id":2179,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"219:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"262:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":3574,"linearizedBaseContracts":[3574],"name":"Strings","nameLocation":"305:7:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2183,"libraryName":{"id":2182,"name":"SafeCast","nameLocations":["325:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":6996,"src":"325:8:16"},"nodeType":"UsingForDirective","src":"319:21:16"},{"constant":true,"id":2186,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:16","nodeType":"VariableDeclaration","scope":3574,"src":"346:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2184,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2189,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:16","nodeType":"VariableDeclaration","scope":3574,"src":"408:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2187,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2225,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:16","nodeType":"VariableDeclaration","scope":3574,"src":"456:302:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:16","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:16","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:16","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:16","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2203,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:16","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:16","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:16","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:16","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:16","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:16","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:16","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:16","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:16","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:16","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:16","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:16","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"778:81:16","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2232,"name":"StringsInsufficientHexLength","nameLocation":"870:28:16","nodeType":"ErrorDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"value","nameLocation":"907:5:16","nodeType":"VariableDeclaration","scope":2232,"src":"899:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2230,"mutability":"mutable","name":"length","nameLocation":"922:6:16","nodeType":"VariableDeclaration","scope":2232,"src":"914:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:16"},"src":"864:66:16"},{"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"936:108:16","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2235,"name":"StringsInvalidChar","nameLocation":"1055:18:16","nodeType":"ErrorDefinition","parameters":{"id":2234,"nodeType":"ParameterList","parameters":[],"src":"1073:2:16"},"src":"1049:27:16"},{"documentation":{"id":2236,"nodeType":"StructuredDocumentation","src":"1082:84:16","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2238,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:16","nodeType":"ErrorDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[],"src":"1204:2:16"},"src":"1171:36:16"},{"body":{"id":2285,"nodeType":"Block","src":"1379:563:16","statements":[{"id":2284,"nodeType":"UncheckedBlock","src":"1389:547:16","statements":[{"assignments":[2247],"declarations":[{"constant":false,"id":2247,"mutability":"mutable","name":"length","nameLocation":"1421:6:16","nodeType":"VariableDeclaration","scope":2284,"src":"1413:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2254,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1441:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2248,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"1430:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5231_$","typeString":"type(library Math)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5063,"src":"1430:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:16"},{"assignments":[2256],"declarations":[{"constant":false,"id":2256,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:16","nodeType":"VariableDeclaration","scope":2284,"src":"1465:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2255,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2261,"initialValue":{"arguments":[{"id":2259,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"1499:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2257,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:16"},{"assignments":[2263],"declarations":[{"constant":false,"id":2263,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:16","nodeType":"VariableDeclaration","scope":2284,"src":"1520:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2264,"nodeType":"VariableDeclarationStatement","src":"1520:11:16"},{"AST":{"nodeType":"YulBlock","src":"1570:69:16","statements":[{"nodeType":"YulAssignment","src":"1588:37:16","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:16"},"nodeType":"YulFunctionCall","src":"1599:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:16"},"nodeType":"YulFunctionCall","src":"1595:30:16"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2256,"isOffset":false,"isSlot":false,"src":"1603:6:16","valueSize":1},{"declaration":2247,"isOffset":false,"isSlot":false,"src":"1618:6:16","valueSize":1},{"declaration":2263,"isOffset":false,"isSlot":false,"src":"1588:3:16","valueSize":1}],"flags":["memory-safe"],"id":2265,"nodeType":"InlineAssembly","src":"1545:94:16"},{"body":{"id":2280,"nodeType":"Block","src":"1665:234:16","statements":[{"expression":{"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:16","subExpression":{"id":2267,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"1683:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2269,"nodeType":"ExpressionStatement","src":"1683:5:16"},{"AST":{"nodeType":"YulBlock","src":"1731:86:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:16"},"nodeType":"YulFunctionCall","src":"1771:14:16"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:16"},"nodeType":"YulFunctionCall","src":"1766:32:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:16"},"nodeType":"YulFunctionCall","src":"1753:46:16"},"nodeType":"YulExpressionStatement","src":"1753:46:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2186,"isOffset":false,"isSlot":false,"src":"1787:10:16","valueSize":1},{"declaration":2263,"isOffset":false,"isSlot":false,"src":"1761:3:16","valueSize":1},{"declaration":2241,"isOffset":false,"isSlot":false,"src":"1775:5:16","valueSize":1}],"flags":["memory-safe"],"id":2270,"nodeType":"InlineAssembly","src":"1706:111:16"},{"expression":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1834:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2274,"nodeType":"ExpressionStatement","src":"1834:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1867:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2279,"nodeType":"IfStatement","src":"1863:21:16","trueBody":{"id":2278,"nodeType":"Break","src":"1879:5:16"}}]},"condition":{"hexValue":"74727565","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2281,"nodeType":"WhileStatement","src":"1652:247:16"},{"expression":{"id":2282,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"1919:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2245,"id":2283,"nodeType":"Return","src":"1912:13:16"}]}]},"documentation":{"id":2239,"nodeType":"StructuredDocumentation","src":"1213:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2286,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:16","nodeType":"FunctionDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"value","nameLocation":"1334:5:16","nodeType":"VariableDeclaration","scope":2286,"src":"1326:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:16"},"returnParameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2286,"src":"1364:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2243,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:16"},"scope":3574,"src":"1308:634:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2311,"nodeType":"Block","src":"2118:92:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"2149:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:16","trueExpression":{"hexValue":"2d","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"2195:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2304,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"2180:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7140_$","typeString":"type(library SignedMath)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"2180:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2303,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"2171:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2294,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:16","typeDescriptions":{}}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:16","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2293,"id":2310,"nodeType":"Return","src":"2128:75:16"}]},"documentation":{"id":2287,"nodeType":"StructuredDocumentation","src":"1948:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2312,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:16","nodeType":"FunctionDefinition","parameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"value","nameLocation":"2073:5:16","nodeType":"VariableDeclaration","scope":2312,"src":"2066:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2288,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:16"},"returnParameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2312,"src":"2103:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2291,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:16"},"scope":3574,"src":"2042:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2331,"nodeType":"Block","src":"2389:100:16","statements":[{"id":2330,"nodeType":"UncheckedBlock","src":"2399:84:16","statements":[{"expression":{"arguments":[{"id":2321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"2442:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"2461:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2322,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"2449:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5231_$","typeString":"type(library Math)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5174,"src":"2449:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2320,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2332,2415,2435],"referencedDeclaration":2415,"src":"2430:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2319,"id":2329,"nodeType":"Return","src":"2423:49:16"}]}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"2216:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:16","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"value","nameLocation":"2344:5:16","nodeType":"VariableDeclaration","scope":2332,"src":"2336:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:16"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2332,"src":"2374:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2317,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:16"},"scope":3574,"src":"2315:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2414,"nodeType":"Block","src":"2702:435:16","statements":[{"assignments":[2343],"declarations":[{"constant":false,"id":2343,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:16","nodeType":"VariableDeclaration","scope":2414,"src":"2712:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2345,"initialValue":{"id":2344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"2733:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:16"},{"assignments":[2347],"declarations":[{"constant":false,"id":2347,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:16","nodeType":"VariableDeclaration","scope":2414,"src":"2748:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2346,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2356,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2351,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"2784:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2348,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:16"},{"expression":{"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2357,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2805:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2359,"indexExpression":{"hexValue":"30","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2362,"nodeType":"ExpressionStatement","src":"2805:15:16"},{"expression":{"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2363,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2830:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2365,"indexExpression":{"hexValue":"31","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2368,"nodeType":"ExpressionStatement","src":"2830:15:16"},{"body":{"id":2397,"nodeType":"Block","src":"2900:95:16","statements":[{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2383,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2914:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2385,"indexExpression":{"id":2384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2921:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2386,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"2926:10:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2390,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2387,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"2937:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2392,"nodeType":"ExpressionStatement","src":"2914:40:16"},{"expression":{"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2393,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"2968:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2396,"nodeType":"ExpressionStatement","src":"2968:16:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2377,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2888:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2398,"initializationExpression":{"assignments":[2370],"declarations":[{"constant":false,"id":2370,"mutability":"mutable","name":"i","nameLocation":"2868:1:16","nodeType":"VariableDeclaration","scope":2398,"src":"2860:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2376,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2372,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"2876:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:16"},"loopExpression":{"expression":{"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:16","subExpression":{"id":2380,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2897:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2382,"nodeType":"ExpressionStatement","src":"2895:3:16"},"nodeType":"ForStatement","src":"2855:140:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2399,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"3008:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2408,"nodeType":"IfStatement","src":"3004:96:16","trueBody":{"id":2407,"nodeType":"Block","src":"3025:75:16","statements":[{"errorCall":{"arguments":[{"id":2403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"3075:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2404,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"3082:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2402,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"3046:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2406,"nodeType":"RevertStatement","src":"3039:50:16"}]}},{"expression":{"arguments":[{"id":2411,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"3123:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2409,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:16","typeDescriptions":{}}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2341,"id":2413,"nodeType":"Return","src":"3109:21:16"}]},"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"2495:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2415,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:16","nodeType":"FunctionDefinition","parameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"value","nameLocation":"2641:5:16","nodeType":"VariableDeclaration","scope":2415,"src":"2633:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"length","nameLocation":"2656:6:16","nodeType":"VariableDeclaration","scope":2415,"src":"2648:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:16"},"returnParameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2415,"src":"2687:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2339,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:16"},"scope":3574,"src":"2612:525:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2434,"nodeType":"Block","src":"3369:75:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2428,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"3414:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2426,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:16","typeDescriptions":{}}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:16","typeDescriptions":{}}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2431,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"3422:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2423,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2332,2415,2435],"referencedDeclaration":2415,"src":"3386:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2422,"id":2433,"nodeType":"Return","src":"3379:58:16"}]},"documentation":{"id":2416,"nodeType":"StructuredDocumentation","src":"3143:148:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2435,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:16","nodeType":"FunctionDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"addr","nameLocation":"3325:4:16","nodeType":"VariableDeclaration","scope":2435,"src":"3317:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2417,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:16"},"returnParameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2435,"src":"3354:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2420,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:16"},"scope":3574,"src":"3296:148:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2499,"nodeType":"Block","src":"3701:642:16","statements":[{"assignments":[2444],"declarations":[{"constant":false,"id":2444,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:16","nodeType":"VariableDeclaration","scope":2499,"src":"3711:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2443,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2451,"initialValue":{"arguments":[{"arguments":[{"id":2448,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"3751:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2447,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2332,2415,2435],"referencedDeclaration":2435,"src":"3739:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2445,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:16","typeDescriptions":{}}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:16"},{"assignments":[2453],"declarations":[{"constant":false,"id":2453,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:16","nodeType":"VariableDeclaration","scope":2499,"src":"3842:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2454,"nodeType":"VariableDeclarationStatement","src":"3842:17:16"},{"AST":{"nodeType":"YulBlock","src":"3894:78:16","statements":[{"nodeType":"YulAssignment","src":"3908:54:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:16","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:16"},"nodeType":"YulFunctionCall","src":"3939:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:16","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:16"},"nodeType":"YulFunctionCall","src":"3929:32:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:16"},"nodeType":"YulFunctionCall","src":"3921:41:16"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2444,"isOffset":false,"isSlot":false,"src":"3943:6:16","valueSize":1},{"declaration":2453,"isOffset":false,"isSlot":false,"src":"3908:9:16","valueSize":1}],"flags":["memory-safe"],"id":2455,"nodeType":"InlineAssembly","src":"3869:103:16"},{"body":{"id":2492,"nodeType":"Block","src":"4015:291:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2466,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"4121:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2473,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4150:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2475,"indexExpression":{"id":2474,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4157:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2471,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:16","typeDescriptions":{}}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2487,"nodeType":"IfStatement","src":"4117:150:16","trueBody":{"id":2486,"nodeType":"Block","src":"4167:100:16","statements":[{"expression":{"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2480,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4235:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2482,"indexExpression":{"id":2481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4242:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2485,"nodeType":"ExpressionStatement","src":"4235:17:16"}]}},{"expression":{"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2488,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"4280:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2491,"nodeType":"ExpressionStatement","src":"4280:15:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4003:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2493,"initializationExpression":{"assignments":[2457],"declarations":[{"constant":false,"id":2457,"mutability":"mutable","name":"i","nameLocation":"3995:1:16","nodeType":"VariableDeclaration","scope":2493,"src":"3987:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2459,"initialValue":{"hexValue":"3431","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:16","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:16"},"loopExpression":{"expression":{"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:16","subExpression":{"id":2463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4012:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2465,"nodeType":"ExpressionStatement","src":"4010:3:16"},"nodeType":"ForStatement","src":"3982:324:16"},{"expression":{"arguments":[{"id":2496,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4329:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2494,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:16","typeDescriptions":{}}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2442,"id":2498,"nodeType":"Return","src":"4315:21:16"}]},"documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"3450:165:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:16","nodeType":"FunctionDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"addr","nameLocation":"3657:4:16","nodeType":"VariableDeclaration","scope":2500,"src":"3649:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2437,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:16"},"returnParameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"3686:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2440,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:16"},"scope":3574,"src":"3620:723:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2536,"nodeType":"Block","src":"4498:104:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2512,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"4521:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2510,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:16","typeDescriptions":{}}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:16","memberName":"length","nodeType":"MemberAccess","src":"4515:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2517,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"4540:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2515,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:16","typeDescriptions":{}}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:16","memberName":"length","nodeType":"MemberAccess","src":"4534:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"4569:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2522,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:16","typeDescriptions":{}}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2521,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2530,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"4592:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2528,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:16","typeDescriptions":{}}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2527,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2509,"id":2535,"nodeType":"Return","src":"4508:87:16"}]},"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"4349:66:16","text":" @dev Returns true if the two strings are equal."},"id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:16","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"a","nameLocation":"4449:1:16","nodeType":"VariableDeclaration","scope":2537,"src":"4435:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2502,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"b","nameLocation":"4466:1:16","nodeType":"VariableDeclaration","scope":2537,"src":"4452:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2504,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:16"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"4492:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2507,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:16"},"scope":3574,"src":"4420:182:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2555,"nodeType":"Block","src":"4899:64:16","statements":[{"expression":{"arguments":[{"id":2546,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"4926:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2550,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"4942:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2548,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:16","typeDescriptions":{}}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:16","memberName":"length","nodeType":"MemberAccess","src":"4936:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2545,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2556,2587],"referencedDeclaration":2587,"src":"4916:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2544,"id":2554,"nodeType":"Return","src":"4909:47:16"}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"4608:214:16","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2556,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:16","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"input","nameLocation":"4860:5:16","nodeType":"VariableDeclaration","scope":2556,"src":"4846:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2539,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:16"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2556,"src":"4890:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:16"},"scope":3574,"src":"4827:136:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2586,"nodeType":"Block","src":"5368:153:16","statements":[{"assignments":[2569,2571],"declarations":[{"constant":false,"id":2569,"mutability":"mutable","name":"success","nameLocation":"5384:7:16","nodeType":"VariableDeclaration","scope":2586,"src":"5379:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2568,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"value","nameLocation":"5401:5:16","nodeType":"VariableDeclaration","scope":2586,"src":"5393:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2577,"initialValue":{"arguments":[{"id":2573,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"5423:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2574,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"5430:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2575,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"5437:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2572,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2608,2645],"referencedDeclaration":2645,"src":"5410:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:16"},{"condition":{"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:16","subExpression":{"id":2578,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"5456:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2583,"nodeType":"IfStatement","src":"5451:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2580,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"5472:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2582,"nodeType":"RevertStatement","src":"5465:27:16"}},{"expression":{"id":2584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"5509:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2567,"id":2585,"nodeType":"Return","src":"5502:12:16"}]},"documentation":{"id":2557,"nodeType":"StructuredDocumentation","src":"4969:294:16","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2587,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:16","nodeType":"FunctionDefinition","parameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"input","nameLocation":"5301:5:16","nodeType":"VariableDeclaration","scope":2587,"src":"5287:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2558,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2561,"mutability":"mutable","name":"begin","nameLocation":"5316:5:16","nodeType":"VariableDeclaration","scope":2587,"src":"5308:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2560,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2563,"mutability":"mutable","name":"end","nameLocation":"5331:3:16","nodeType":"VariableDeclaration","scope":2587,"src":"5323:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:16"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2587,"src":"5359:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:16"},"scope":3574,"src":"5268:253:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2607,"nodeType":"Block","src":"5842:83:16","statements":[{"expression":{"arguments":[{"id":2598,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"5888:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2602,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"5904:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2600,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:16","typeDescriptions":{}}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:16","memberName":"length","nodeType":"MemberAccess","src":"5898:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2597,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"5859:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2596,"id":2606,"nodeType":"Return","src":"5852:66:16"}]},"documentation":{"id":2588,"nodeType":"StructuredDocumentation","src":"5527:215:16","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2608,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:16","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"input","nameLocation":"5783:5:16","nodeType":"VariableDeclaration","scope":2608,"src":"5769:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2589,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:16"},"returnParameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"success","nameLocation":"5818:7:16","nodeType":"VariableDeclaration","scope":2608,"src":"5813:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2592,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"value","nameLocation":"5835:5:16","nodeType":"VariableDeclaration","scope":2608,"src":"5827:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:16"},"scope":3574,"src":"5747:178:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2644,"nodeType":"Block","src":"6327:144:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2622,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"6341:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2625,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"6353:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2623,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:16","typeDescriptions":{}}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:16","memberName":"length","nodeType":"MemberAccess","src":"6347:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2629,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"6370:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2630,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"6378:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2637,"nodeType":"IfStatement","src":"6337:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2621,"id":2636,"nodeType":"Return","src":"6383:17:16"}},{"expression":{"arguments":[{"id":2639,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"6446:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2640,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"6453:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2641,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"6460:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2638,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"6417:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2621,"id":2643,"nodeType":"Return","src":"6410:54:16"}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"5931:238:16","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2645,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:16","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"input","nameLocation":"6219:5:16","nodeType":"VariableDeclaration","scope":2645,"src":"6205:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2610,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"begin","nameLocation":"6242:5:16","nodeType":"VariableDeclaration","scope":2645,"src":"6234:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"end","nameLocation":"6265:3:16","nodeType":"VariableDeclaration","scope":2645,"src":"6257:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:16"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"success","nameLocation":"6303:7:16","nodeType":"VariableDeclaration","scope":2645,"src":"6298:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2617,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"value","nameLocation":"6320:5:16","nodeType":"VariableDeclaration","scope":2645,"src":"6312:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:16"},"scope":3574,"src":"6174:297:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2714,"nodeType":"Block","src":"6874:347:16","statements":[{"assignments":[2660],"declarations":[{"constant":false,"id":2660,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:16","nodeType":"VariableDeclaration","scope":2714,"src":"6884:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2659,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2665,"initialValue":{"arguments":[{"id":2663,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"6912:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2661,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:16","typeDescriptions":{}}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:16"},{"assignments":[2667],"declarations":[{"constant":false,"id":2667,"mutability":"mutable","name":"result","nameLocation":"6937:6:16","nodeType":"VariableDeclaration","scope":2714,"src":"6929:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2669,"initialValue":{"hexValue":"30","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:16"},{"body":{"id":2708,"nodeType":"Block","src":"6995:189:16","statements":[{"assignments":[2681],"declarations":[{"constant":false,"id":2681,"mutability":"mutable","name":"chr","nameLocation":"7015:3:16","nodeType":"VariableDeclaration","scope":2708,"src":"7009:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2680,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2691,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2686,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7064:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"7072:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2685,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"7041:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2683,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:16","typeDescriptions":{}}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2682,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"7021:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2692,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"7094:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2699,"nodeType":"IfStatement","src":"7090:30:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2658,"id":2698,"nodeType":"Return","src":"7103:17:16"}},{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"7134:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2703,"nodeType":"ExpressionStatement","src":"7134:12:16"},{"expression":{"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2704,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"7160:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2705,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"7170:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2707,"nodeType":"ExpressionStatement","src":"7160:13:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"6981:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2675,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"6985:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2709,"initializationExpression":{"assignments":[2671],"declarations":[{"constant":false,"id":2671,"mutability":"mutable","name":"i","nameLocation":"6970:1:16","nodeType":"VariableDeclaration","scope":2709,"src":"6962:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2673,"initialValue":{"id":2672,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"6974:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:16"},"loopExpression":{"expression":{"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:16","subExpression":{"id":2677,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"6992:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2679,"nodeType":"ExpressionStatement","src":"6990:3:16"},"nodeType":"ForStatement","src":"6957:227:16"},{"expression":{"components":[{"hexValue":"74727565","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"7207:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2658,"id":2713,"nodeType":"Return","src":"7193:21:16"}]},"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"6477:224:16","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2715,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:16","nodeType":"FunctionDefinition","parameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"input","nameLocation":"6767:5:16","nodeType":"VariableDeclaration","scope":2715,"src":"6753:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2647,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"begin","nameLocation":"6790:5:16","nodeType":"VariableDeclaration","scope":2715,"src":"6782:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"end","nameLocation":"6813:3:16","nodeType":"VariableDeclaration","scope":2715,"src":"6805:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:16"},"returnParameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"success","nameLocation":"6850:7:16","nodeType":"VariableDeclaration","scope":2715,"src":"6845:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2654,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"value","nameLocation":"6867:5:16","nodeType":"VariableDeclaration","scope":2715,"src":"6859:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2656,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:16"},"scope":3574,"src":"6706:515:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2733,"nodeType":"Block","src":"7518:63:16","statements":[{"expression":{"arguments":[{"id":2724,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"7544:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2728,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"7560:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2726,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:16","typeDescriptions":{}}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:16","memberName":"length","nodeType":"MemberAccess","src":"7554:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2723,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2734,2765],"referencedDeclaration":2765,"src":"7535:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2722,"id":2732,"nodeType":"Return","src":"7528:46:16"}]},"documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"7227:216:16","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:16","nodeType":"FunctionDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"input","nameLocation":"7480:5:16","nodeType":"VariableDeclaration","scope":2734,"src":"7466:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2717,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:16"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2734,"src":"7510:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2720,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:16"},"scope":3574,"src":"7448:133:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2764,"nodeType":"Block","src":"7986:151:16","statements":[{"assignments":[2747,2749],"declarations":[{"constant":false,"id":2747,"mutability":"mutable","name":"success","nameLocation":"8002:7:16","nodeType":"VariableDeclaration","scope":2764,"src":"7997:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2746,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"value","nameLocation":"8018:5:16","nodeType":"VariableDeclaration","scope":2764,"src":"8011:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2748,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2755,"initialValue":{"arguments":[{"id":2751,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"8039:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2752,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"8046:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2753,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"8053:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2750,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2786,2828],"referencedDeclaration":2828,"src":"8027:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:16"},{"condition":{"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:16","subExpression":{"id":2756,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"8072:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2761,"nodeType":"IfStatement","src":"8067:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2758,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"8088:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2760,"nodeType":"RevertStatement","src":"8081:27:16"}},{"expression":{"id":2762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"8125:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2745,"id":2763,"nodeType":"Return","src":"8118:12:16"}]},"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"7587:296:16","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2765,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:16","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"input","nameLocation":"7920:5:16","nodeType":"VariableDeclaration","scope":2765,"src":"7906:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2736,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"begin","nameLocation":"7935:5:16","nodeType":"VariableDeclaration","scope":2765,"src":"7927:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"end","nameLocation":"7950:3:16","nodeType":"VariableDeclaration","scope":2765,"src":"7942:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:16"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2765,"src":"7978:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2743,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:16"},"scope":3574,"src":"7888:249:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2785,"nodeType":"Block","src":"8528:82:16","statements":[{"expression":{"arguments":[{"id":2776,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"8573:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2780,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"8589:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2778,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:16","typeDescriptions":{}}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:16","memberName":"length","nodeType":"MemberAccess","src":"8583:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2775,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"8545:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2774,"id":2784,"nodeType":"Return","src":"8538:65:16"}]},"documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"8143:287:16","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:16","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"input","nameLocation":"8470:5:16","nodeType":"VariableDeclaration","scope":2786,"src":"8456:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2767,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:16"},"returnParameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"success","nameLocation":"8505:7:16","nodeType":"VariableDeclaration","scope":2786,"src":"8500:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2770,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"value","nameLocation":"8521:5:16","nodeType":"VariableDeclaration","scope":2786,"src":"8514:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2772,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:16"},"scope":3574,"src":"8435:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2791,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:16","nodeType":"VariableDeclaration","scope":3574,"src":"8616:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2827,"nodeType":"Block","src":"9132:143:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2805,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"9146:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2808,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"9158:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2806,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:16","typeDescriptions":{}}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:16","memberName":"length","nodeType":"MemberAccess","src":"9152:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2812,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"9175:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2813,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"9183:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2820,"nodeType":"IfStatement","src":"9142:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2804,"id":2819,"nodeType":"Return","src":"9188:17:16"}},{"expression":{"arguments":[{"id":2822,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"9250:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2823,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"9257:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2824,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"9264:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2821,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"9222:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2804,"id":2826,"nodeType":"Return","src":"9215:53:16"}]},"documentation":{"id":2792,"nodeType":"StructuredDocumentation","src":"8673:303:16","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2828,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:16","nodeType":"FunctionDefinition","parameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2794,"mutability":"mutable","name":"input","nameLocation":"9025:5:16","nodeType":"VariableDeclaration","scope":2828,"src":"9011:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2793,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2796,"mutability":"mutable","name":"begin","nameLocation":"9048:5:16","nodeType":"VariableDeclaration","scope":2828,"src":"9040:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2798,"mutability":"mutable","name":"end","nameLocation":"9071:3:16","nodeType":"VariableDeclaration","scope":2828,"src":"9063:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:16"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"success","nameLocation":"9109:7:16","nodeType":"VariableDeclaration","scope":2828,"src":"9104:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2800,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2803,"mutability":"mutable","name":"value","nameLocation":"9125:5:16","nodeType":"VariableDeclaration","scope":2828,"src":"9118:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2802,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:16"},"scope":3574,"src":"8981:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2948,"nodeType":"Block","src":"9675:812:16","statements":[{"assignments":[2843],"declarations":[{"constant":false,"id":2843,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:16","nodeType":"VariableDeclaration","scope":2948,"src":"9685:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2842,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2848,"initialValue":{"arguments":[{"id":2846,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"9713:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2844,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:16","typeDescriptions":{}}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:16"},{"assignments":[2850],"declarations":[{"constant":false,"id":2850,"mutability":"mutable","name":"sign","nameLocation":"9783:4:16","nodeType":"VariableDeclaration","scope":2948,"src":"9776:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2849,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2866,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2851,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9790:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2852,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"9799:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2861,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"9847:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2862,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9855:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2860,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"9824:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2858,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:16","typeDescriptions":{}}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:16","trueExpression":{"arguments":[{"hexValue":"30","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2854,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:16","typeDescriptions":{}}},"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:16"},{"assignments":[2868],"declarations":[{"constant":false,"id":2868,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:16","nodeType":"VariableDeclaration","scope":2948,"src":"9943:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2867,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2875,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2869,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9963:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2870,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:16","typeDescriptions":{}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:16"},{"assignments":[2877],"declarations":[{"constant":false,"id":2877,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:16","nodeType":"VariableDeclaration","scope":2948,"src":"9992:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2876,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2884,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"10012:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2879,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:16","typeDescriptions":{}}},"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:16"},{"assignments":[2886],"declarations":[{"constant":false,"id":2886,"mutability":"mutable","name":"offset","nameLocation":"10049:6:16","nodeType":"VariableDeclaration","scope":2948,"src":"10041:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2893,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2887,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"10059:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2888,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"10075:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"10058:37:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:16"},{"assignments":[2895,2897],"declarations":[{"constant":false,"id":2895,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:16","nodeType":"VariableDeclaration","scope":2948,"src":"10109:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2894,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:16","nodeType":"VariableDeclaration","scope":2948,"src":"10126:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2905,"initialValue":{"arguments":[{"id":2899,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"10159:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"10166:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2901,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"10174:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2903,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"10182:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2898,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2608,2645],"referencedDeclaration":2645,"src":"10146:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"10201:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2907,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"10215:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2908,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"10226:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"10343:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2927,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"10357:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2929,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"10373:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2930,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"10385:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2841,"id":2945,"nodeType":"Return","src":"10463:17:16"},"id":2946,"nodeType":"IfStatement","src":"10339:141:16","trueBody":{"id":2941,"nodeType":"Block","src":"10401:56:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2935,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2934,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:16","memberName":"min","nodeType":"MemberAccess","src":"10429:16:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2841,"id":2940,"nodeType":"Return","src":"10415:31:16"}]}},"id":2947,"nodeType":"IfStatement","src":"10197:283:16","trueBody":{"id":2925,"nodeType":"Block","src":"10242:91:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2912,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"10270:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2920,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"10312:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2918,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:16","typeDescriptions":{}}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:16","trueExpression":{"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:16","subExpression":{"arguments":[{"id":2915,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"10293:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2913,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:16","typeDescriptions":{}}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2923,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2841,"id":2924,"nodeType":"Return","src":"10256:66:16"}]}}]},"documentation":{"id":2829,"nodeType":"StructuredDocumentation","src":"9281:223:16","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2949,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:16","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"input","nameLocation":"9569:5:16","nodeType":"VariableDeclaration","scope":2949,"src":"9555:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2830,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"begin","nameLocation":"9592:5:16","nodeType":"VariableDeclaration","scope":2949,"src":"9584:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"end","nameLocation":"9615:3:16","nodeType":"VariableDeclaration","scope":2949,"src":"9607:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:16"},"returnParameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"success","nameLocation":"9652:7:16","nodeType":"VariableDeclaration","scope":2949,"src":"9647:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2837,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"value","nameLocation":"9668:5:16","nodeType":"VariableDeclaration","scope":2949,"src":"9661:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2839,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:16"},"scope":3574,"src":"9509:978:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2967,"nodeType":"Block","src":"10832:67:16","statements":[{"expression":{"arguments":[{"id":2958,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"10862:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2962,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"10878:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2960,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:16","typeDescriptions":{}}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:16","memberName":"length","nodeType":"MemberAccess","src":"10872:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2957,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2968,2999],"referencedDeclaration":2999,"src":"10849:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2956,"id":2966,"nodeType":"Return","src":"10842:50:16"}]},"documentation":{"id":2950,"nodeType":"StructuredDocumentation","src":"10493:259:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2968,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:16","nodeType":"FunctionDefinition","parameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"input","nameLocation":"10793:5:16","nodeType":"VariableDeclaration","scope":2968,"src":"10779:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2951,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:16"},"returnParameters":{"id":2956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2968,"src":"10823:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2954,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:16"},"scope":3574,"src":"10757:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2998,"nodeType":"Block","src":"11320:156:16","statements":[{"assignments":[2981,2983],"declarations":[{"constant":false,"id":2981,"mutability":"mutable","name":"success","nameLocation":"11336:7:16","nodeType":"VariableDeclaration","scope":2998,"src":"11331:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2980,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2983,"mutability":"mutable","name":"value","nameLocation":"11353:5:16","nodeType":"VariableDeclaration","scope":2998,"src":"11345:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2989,"initialValue":{"arguments":[{"id":2985,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"11378:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2986,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"11385:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2987,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"11392:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2984,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3020,3057],"referencedDeclaration":3057,"src":"11362:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:16"},{"condition":{"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:16","subExpression":{"id":2990,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"11411:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2995,"nodeType":"IfStatement","src":"11406:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2992,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"11427:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2994,"nodeType":"RevertStatement","src":"11420:27:16"}},{"expression":{"id":2996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"11464:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2979,"id":2997,"nodeType":"Return","src":"11457:12:16"}]},"documentation":{"id":2969,"nodeType":"StructuredDocumentation","src":"10905:307:16","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2999,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:16","nodeType":"FunctionDefinition","parameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"input","nameLocation":"11253:5:16","nodeType":"VariableDeclaration","scope":2999,"src":"11239:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2970,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2973,"mutability":"mutable","name":"begin","nameLocation":"11268:5:16","nodeType":"VariableDeclaration","scope":2999,"src":"11260:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2975,"mutability":"mutable","name":"end","nameLocation":"11283:3:16","nodeType":"VariableDeclaration","scope":2999,"src":"11275:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2974,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:16"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2999,"src":"11311:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:16"},"scope":3574,"src":"11217:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3019,"nodeType":"Block","src":"11803:86:16","statements":[{"expression":{"arguments":[{"id":3010,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"11852:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3014,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"11868:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3012,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:16","typeDescriptions":{}}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:16","memberName":"length","nodeType":"MemberAccess","src":"11862:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3009,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"11820:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3008,"id":3018,"nodeType":"Return","src":"11813:69:16"}]},"documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"11482:218:16","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3020,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:16","nodeType":"FunctionDefinition","parameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"input","nameLocation":"11744:5:16","nodeType":"VariableDeclaration","scope":3020,"src":"11730:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3001,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:16"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"success","nameLocation":"11779:7:16","nodeType":"VariableDeclaration","scope":3020,"src":"11774:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3004,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3007,"mutability":"mutable","name":"value","nameLocation":"11796:5:16","nodeType":"VariableDeclaration","scope":3020,"src":"11788:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:16"},"scope":3574,"src":"11705:184:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3056,"nodeType":"Block","src":"12297:147:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"12311:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3037,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"12323:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3035,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:16","typeDescriptions":{}}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:16","memberName":"length","nodeType":"MemberAccess","src":"12317:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3041,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"12340:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3042,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"12348:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3049,"nodeType":"IfStatement","src":"12307:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3033,"id":3048,"nodeType":"Return","src":"12353:17:16"}},{"expression":{"arguments":[{"id":3051,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"12419:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3052,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"12426:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3053,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"12433:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3050,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"12387:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3033,"id":3055,"nodeType":"Return","src":"12380:57:16"}]},"documentation":{"id":3021,"nodeType":"StructuredDocumentation","src":"11895:241:16","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3057,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:16","nodeType":"FunctionDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3023,"mutability":"mutable","name":"input","nameLocation":"12189:5:16","nodeType":"VariableDeclaration","scope":3057,"src":"12175:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3022,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3025,"mutability":"mutable","name":"begin","nameLocation":"12212:5:16","nodeType":"VariableDeclaration","scope":3057,"src":"12204:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3027,"mutability":"mutable","name":"end","nameLocation":"12235:3:16","nodeType":"VariableDeclaration","scope":3057,"src":"12227:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:16"},"returnParameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"success","nameLocation":"12273:7:16","nodeType":"VariableDeclaration","scope":3057,"src":"12268:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3029,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"value","nameLocation":"12290:5:16","nodeType":"VariableDeclaration","scope":3057,"src":"12282:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:16"},"scope":3574,"src":"12141:303:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"12853:881:16","statements":[{"assignments":[3072],"declarations":[{"constant":false,"id":3072,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:16","nodeType":"VariableDeclaration","scope":3159,"src":"12863:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3071,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3077,"initialValue":{"arguments":[{"id":3075,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"12891:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3073,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:16","typeDescriptions":{}}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:16"},{"assignments":[3079],"declarations":[{"constant":false,"id":3079,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:16","nodeType":"VariableDeclaration","scope":3159,"src":"12945:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3078,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3099,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3080,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"12963:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3081,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"12969:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3089,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"13013:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3090,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"13021:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3088,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"12990:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3086,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:16","typeDescriptions":{}}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3093,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:16","typeDescriptions":{}}},"id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:16"},{"assignments":[3101],"declarations":[{"constant":false,"id":3101,"mutability":"mutable","name":"offset","nameLocation":"13133:6:16","nodeType":"VariableDeclaration","scope":3159,"src":"13125:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3107,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3102,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"13142:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"13142:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:16"},{"assignments":[3109],"declarations":[{"constant":false,"id":3109,"mutability":"mutable","name":"result","nameLocation":"13183:6:16","nodeType":"VariableDeclaration","scope":3159,"src":"13175:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3108,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3111,"initialValue":{"hexValue":"30","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:16"},{"body":{"id":3153,"nodeType":"Block","src":"13250:447:16","statements":[{"assignments":[3125],"declarations":[{"constant":false,"id":3125,"mutability":"mutable","name":"chr","nameLocation":"13270:3:16","nodeType":"VariableDeclaration","scope":3153,"src":"13264:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3124,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3135,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3130,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"13319:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3131,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"13327:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3129,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"13296:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3127,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:16","typeDescriptions":{}}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3126,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"13276:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3136,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13349:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3143,"nodeType":"IfStatement","src":"13345:31:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3070,"id":3142,"nodeType":"Return","src":"13359:17:16"}},{"expression":{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"13390:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3147,"nodeType":"ExpressionStatement","src":"13390:12:16"},{"id":3152,"nodeType":"UncheckedBlock","src":"13416:271:16","statements":[{"expression":{"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"13659:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3149,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13669:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3151,"nodeType":"ExpressionStatement","src":"13659:13:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"13236:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3119,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"13240:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3154,"initializationExpression":{"assignments":[3113],"declarations":[{"constant":false,"id":3113,"mutability":"mutable","name":"i","nameLocation":"13216:1:16","nodeType":"VariableDeclaration","scope":3154,"src":"13208:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3117,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"13220:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3115,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"13228:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:16"},"loopExpression":{"expression":{"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:16","subExpression":{"id":3121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"13247:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3123,"nodeType":"ExpressionStatement","src":"13245:3:16"},"nodeType":"ForStatement","src":"13203:494:16"},{"expression":{"components":[{"hexValue":"74727565","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"13720:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3070,"id":3158,"nodeType":"Return","src":"13706:21:16"}]},"documentation":{"id":3058,"nodeType":"StructuredDocumentation","src":"12450:227:16","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:16","nodeType":"FunctionDefinition","parameters":{"id":3065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"input","nameLocation":"12746:5:16","nodeType":"VariableDeclaration","scope":3160,"src":"12732:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3059,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"begin","nameLocation":"12769:5:16","nodeType":"VariableDeclaration","scope":3160,"src":"12761:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3061,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3064,"mutability":"mutable","name":"end","nameLocation":"12792:3:16","nodeType":"VariableDeclaration","scope":3160,"src":"12784:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:16"},"returnParameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3067,"mutability":"mutable","name":"success","nameLocation":"12829:7:16","nodeType":"VariableDeclaration","scope":3160,"src":"12824:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3066,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3069,"mutability":"mutable","name":"value","nameLocation":"12846:5:16","nodeType":"VariableDeclaration","scope":3160,"src":"12838:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:16"},"scope":3574,"src":"12682:1052:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3178,"nodeType":"Block","src":"14032:67:16","statements":[{"expression":{"arguments":[{"id":3169,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"14062:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3173,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"14078:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3171,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:16","typeDescriptions":{}}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:16","memberName":"length","nodeType":"MemberAccess","src":"14072:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3168,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3179,3210],"referencedDeclaration":3210,"src":"14049:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3167,"id":3177,"nodeType":"Return","src":"14042:50:16"}]},"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"13740:212:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3179,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:16","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"input","nameLocation":"13993:5:16","nodeType":"VariableDeclaration","scope":3179,"src":"13979:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3162,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:16"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3179,"src":"14023:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3165,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:16"},"scope":3574,"src":"13957:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3209,"nodeType":"Block","src":"14472:165:16","statements":[{"assignments":[3192,3194],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"success","nameLocation":"14488:7:16","nodeType":"VariableDeclaration","scope":3209,"src":"14483:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3191,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"value","nameLocation":"14505:5:16","nodeType":"VariableDeclaration","scope":3209,"src":"14497:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3200,"initialValue":{"arguments":[{"id":3196,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"14530:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3197,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"14537:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3198,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"14544:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3195,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3231,3335],"referencedDeclaration":3335,"src":"14514:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:16"},{"condition":{"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:16","subExpression":{"id":3201,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"14563:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3206,"nodeType":"IfStatement","src":"14558:50:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3203,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"14579:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3205,"nodeType":"RevertStatement","src":"14572:36:16"}},{"expression":{"id":3207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"14625:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3190,"id":3208,"nodeType":"Return","src":"14618:12:16"}]},"documentation":{"id":3180,"nodeType":"StructuredDocumentation","src":"14105:259:16","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3210,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:16","nodeType":"FunctionDefinition","parameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"input","nameLocation":"14405:5:16","nodeType":"VariableDeclaration","scope":3210,"src":"14391:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3181,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3184,"mutability":"mutable","name":"begin","nameLocation":"14420:5:16","nodeType":"VariableDeclaration","scope":3210,"src":"14412:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3183,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3186,"mutability":"mutable","name":"end","nameLocation":"14435:3:16","nodeType":"VariableDeclaration","scope":3210,"src":"14427:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:16"},"returnParameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3210,"src":"14463:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3188,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:16"},"scope":3574,"src":"14369:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3230,"nodeType":"Block","src":"14944:70:16","statements":[{"expression":{"arguments":[{"id":3221,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"14977:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3225,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"14993:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3223,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:16","typeDescriptions":{}}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:16","memberName":"length","nodeType":"MemberAccess","src":"14987:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3220,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3231,3335],"referencedDeclaration":3335,"src":"14961:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3219,"id":3229,"nodeType":"Return","src":"14954:53:16"}]},"documentation":{"id":3211,"nodeType":"StructuredDocumentation","src":"14643:198:16","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3231,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:16","nodeType":"FunctionDefinition","parameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"input","nameLocation":"14885:5:16","nodeType":"VariableDeclaration","scope":3231,"src":"14871:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3212,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:16"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"success","nameLocation":"14920:7:16","nodeType":"VariableDeclaration","scope":3231,"src":"14915:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3215,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3218,"mutability":"mutable","name":"value","nameLocation":"14937:5:16","nodeType":"VariableDeclaration","scope":3231,"src":"14929:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3217,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:16"},"scope":3574,"src":"14846:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3334,"nodeType":"Block","src":"15407:733:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3245,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"15421:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3248,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"15433:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3246,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:16","typeDescriptions":{}}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:16","memberName":"length","nodeType":"MemberAccess","src":"15427:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3252,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"15450:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3253,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"15458:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3263,"nodeType":"IfStatement","src":"15417:72:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3257,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:16","typeDescriptions":{}}},"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3244,"id":3262,"nodeType":"Return","src":"15463:26:16"}},{"assignments":[3265],"declarations":[{"constant":false,"id":3265,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:16","nodeType":"VariableDeclaration","scope":3334,"src":"15500:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3264,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3288,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3266,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"15518:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3267,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"15524:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3277,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"15574:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3275,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:16","typeDescriptions":{}}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3279,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"15582:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3274,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"15545:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3272,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:16","typeDescriptions":{}}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3282,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:16","typeDescriptions":{}}},"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:16"},{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:16","nodeType":"VariableDeclaration","scope":3334,"src":"15686:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3298,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3292,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"15716:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"15716:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"15803:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3300,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"15809:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3302,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"15818:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3332,"nodeType":"Block","src":"16083:51:16","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3326,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:16","typeDescriptions":{}}},"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3244,"id":3331,"nodeType":"Return","src":"16097:26:16"}]},"id":3333,"nodeType":"IfStatement","src":"15799:335:16","trueBody":{"id":3324,"nodeType":"Block","src":"15834:243:16","statements":[{"assignments":[3305,3307],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"s","nameLocation":"15955:1:16","nodeType":"VariableDeclaration","scope":3324,"src":"15950:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3304,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3307,"mutability":"mutable","name":"v","nameLocation":"15966:1:16","nodeType":"VariableDeclaration","scope":3324,"src":"15958:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3313,"initialValue":{"arguments":[{"id":3309,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"16003:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3310,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"16010:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3311,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"16017:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3308,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"15971:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:16"},{"expression":{"components":[{"id":3314,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"16043:1:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3319,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"16062:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3317,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:16","typeDescriptions":{}}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3315,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:16","typeDescriptions":{}}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3244,"id":3323,"nodeType":"Return","src":"16035:31:16"}]}}]},"documentation":{"id":3232,"nodeType":"StructuredDocumentation","src":"15020:226:16","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3335,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:16","nodeType":"FunctionDefinition","parameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3234,"mutability":"mutable","name":"input","nameLocation":"15299:5:16","nodeType":"VariableDeclaration","scope":3335,"src":"15285:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3233,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3236,"mutability":"mutable","name":"begin","nameLocation":"15322:5:16","nodeType":"VariableDeclaration","scope":3335,"src":"15314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3235,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3238,"mutability":"mutable","name":"end","nameLocation":"15345:3:16","nodeType":"VariableDeclaration","scope":3335,"src":"15337:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:16"},"returnParameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"success","nameLocation":"15383:7:16","nodeType":"VariableDeclaration","scope":3335,"src":"15378:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3240,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3243,"mutability":"mutable","name":"value","nameLocation":"15400:5:16","nodeType":"VariableDeclaration","scope":3335,"src":"15392:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3242,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:16"},"scope":3574,"src":"15251:889:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3394,"nodeType":"Block","src":"16209:461:16","statements":[{"assignments":[3343],"declarations":[{"constant":false,"id":3343,"mutability":"mutable","name":"value","nameLocation":"16225:5:16","nodeType":"VariableDeclaration","scope":3394,"src":"16219:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3342,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3348,"initialValue":{"arguments":[{"id":3346,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"16239:3:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3344,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:16","typeDescriptions":{}}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:16"},{"id":3391,"nodeType":"UncheckedBlock","src":"16403:238:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16431:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:16","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16445:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:16","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16491:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16505:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:16","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16552:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16566:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:16","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3383,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3382,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:16","memberName":"max","nodeType":"MemberAccess","src":"16615:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3341,"id":3387,"nodeType":"Return","src":"16608:22:16"},"id":3388,"nodeType":"IfStatement","src":"16548:82:16","trueBody":{"expression":{"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16578:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:16","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3381,"nodeType":"ExpressionStatement","src":"16578:11:16"}},"id":3389,"nodeType":"IfStatement","src":"16487:143:16","trueBody":{"expression":{"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16518:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:16","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3370,"nodeType":"ExpressionStatement","src":"16518:11:16"}},"id":3390,"nodeType":"IfStatement","src":"16427:203:16","trueBody":{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16457:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3359,"nodeType":"ExpressionStatement","src":"16457:11:16"}}]},{"expression":{"id":3392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16658:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3341,"id":3393,"nodeType":"Return","src":"16651:12:16"}]},"id":3395,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:16","nodeType":"FunctionDefinition","parameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"chr","nameLocation":"16175:3:16","nodeType":"VariableDeclaration","scope":3395,"src":"16168:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3336,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:16"},"returnParameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3395,"src":"16202:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3339,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:16"},"scope":3574,"src":"16146:524:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3560,"nodeType":"Block","src":"17336:1331:16","statements":[{"assignments":[3404],"declarations":[{"constant":false,"id":3404,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:16","nodeType":"VariableDeclaration","scope":3560,"src":"17346:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3403,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3409,"initialValue":{"arguments":[{"id":3407,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"17374:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3405,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:16","typeDescriptions":{}}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:16"},{"assignments":[3411],"declarations":[{"constant":false,"id":3411,"mutability":"mutable","name":"output","nameLocation":"17403:6:16","nodeType":"VariableDeclaration","scope":3560,"src":"17390:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3410,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3419,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3415,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"17426:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:16","memberName":"length","nodeType":"MemberAccess","src":"17426:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3412,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:16"},{"assignments":[3421],"declarations":[{"constant":false,"id":3421,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:16","nodeType":"VariableDeclaration","scope":3560,"src":"17473:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3423,"initialValue":{"hexValue":"30","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:16"},{"body":{"id":3552,"nodeType":"Block","src":"17548:854:16","statements":[{"assignments":[3435],"declarations":[{"constant":false,"id":3435,"mutability":"mutable","name":"char","nameLocation":"17569:4:16","nodeType":"VariableDeclaration","scope":3552,"src":"17562:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3434,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3443,"initialValue":{"arguments":[{"arguments":[{"id":3439,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"17606:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3440,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"17614:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3438,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"17583:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3436,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:16","typeDescriptions":{}}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:16"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3444,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"17637:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3448,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"17672:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3446,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:16","typeDescriptions":{}}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3550,"nodeType":"Block","src":"18330:62:16","statements":[{"expression":{"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3543,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"18348:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3546,"indexExpression":{"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:16","subExpression":{"id":3544,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"18355:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3547,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"18373:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3549,"nodeType":"ExpressionStatement","src":"18348:29:16"}]},"id":3551,"nodeType":"IfStatement","src":"17631:761:16","trueBody":{"id":3542,"nodeType":"Block","src":"17687:637:16","statements":[{"expression":{"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3457,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"17705:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3460,"indexExpression":{"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:16","subExpression":{"id":3458,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"17712:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3463,"nodeType":"ExpressionStatement","src":"17705:29:16"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3464,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"17756:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3474,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"17825:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"17894:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"17963:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3504,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"18032:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:16","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3514,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"18101:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:16","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3524,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"18171:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3535,"nodeType":"IfStatement","src":"18167:143:16","trueBody":{"id":3534,"nodeType":"Block","src":"18185:125:16","statements":[{"expression":{"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3527,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"18263:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3530,"indexExpression":{"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:16","subExpression":{"id":3528,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"18270:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3533,"nodeType":"ExpressionStatement","src":"18263:28:16"}]}},"id":3536,"nodeType":"IfStatement","src":"18097:213:16","trueBody":{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3517,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"18115:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3520,"indexExpression":{"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:16","subExpression":{"id":3518,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"18122:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3523,"nodeType":"ExpressionStatement","src":"18115:29:16"}},"id":3537,"nodeType":"IfStatement","src":"18028:282:16","trueBody":{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3507,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"18046:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3510,"indexExpression":{"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:16","subExpression":{"id":3508,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"18053:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3513,"nodeType":"ExpressionStatement","src":"18046:28:16"}},"id":3538,"nodeType":"IfStatement","src":"17959:351:16","trueBody":{"expression":{"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3497,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"17977:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3500,"indexExpression":{"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:16","subExpression":{"id":3498,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"17984:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3503,"nodeType":"ExpressionStatement","src":"17977:28:16"}},"id":3539,"nodeType":"IfStatement","src":"17890:420:16","trueBody":{"expression":{"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3487,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"17908:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3490,"indexExpression":{"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:16","subExpression":{"id":3488,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"17915:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3493,"nodeType":"ExpressionStatement","src":"17908:28:16"}},"id":3540,"nodeType":"IfStatement","src":"17821:489:16","trueBody":{"expression":{"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3477,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"17839:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3480,"indexExpression":{"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:16","subExpression":{"id":3478,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"17846:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3483,"nodeType":"ExpressionStatement","src":"17839:28:16"}},"id":3541,"nodeType":"IfStatement","src":"17752:558:16","trueBody":{"expression":{"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3467,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"17770:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3470,"indexExpression":{"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:16","subExpression":{"id":3468,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"17777:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3473,"nodeType":"ExpressionStatement","src":"17770:28:16"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3427,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"17524:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3428,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"17528:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:16","memberName":"length","nodeType":"MemberAccess","src":"17528:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3553,"initializationExpression":{"assignments":[3425],"declarations":[{"constant":false,"id":3425,"mutability":"mutable","name":"i","nameLocation":"17521:1:16","nodeType":"VariableDeclaration","scope":3553,"src":"17513:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3424,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3426,"nodeType":"VariableDeclarationStatement","src":"17513:9:16"},"loopExpression":{"expression":{"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:16","subExpression":{"id":3431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"17545:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3433,"nodeType":"ExpressionStatement","src":"17543:3:16"},"nodeType":"ForStatement","src":"17508:894:16"},{"AST":{"nodeType":"YulBlock","src":"18500:129:16","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:16"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:16"},"nodeType":"YulFunctionCall","src":"18514:28:16"},"nodeType":"YulExpressionStatement","src":"18514:28:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:16","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:16","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:16","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:16"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:16"},"nodeType":"YulFunctionCall","src":"18594:21:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:16"},"nodeType":"YulFunctionCall","src":"18587:29:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:16"},"nodeType":"YulFunctionCall","src":"18580:37:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:16"},"nodeType":"YulFunctionCall","src":"18568:50:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:16"},"nodeType":"YulFunctionCall","src":"18555:64:16"},"nodeType":"YulExpressionStatement","src":"18555:64:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3411,"isOffset":false,"isSlot":false,"src":"18521:6:16","valueSize":1},{"declaration":3411,"isOffset":false,"isSlot":false,"src":"18572:6:16","valueSize":1},{"declaration":3421,"isOffset":false,"isSlot":false,"src":"18529:12:16","valueSize":1},{"declaration":3421,"isOffset":false,"isSlot":false,"src":"18598:12:16","valueSize":1}],"flags":["memory-safe"],"id":3554,"nodeType":"InlineAssembly","src":"18475:154:16"},{"expression":{"arguments":[{"id":3557,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"18653:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3555,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:16","typeDescriptions":{}}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3402,"id":3559,"nodeType":"Return","src":"18639:21:16"}]},"documentation":{"id":3396,"nodeType":"StructuredDocumentation","src":"16676:576:16","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3561,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:16","nodeType":"FunctionDefinition","parameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"input","nameLocation":"17291:5:16","nodeType":"VariableDeclaration","scope":3561,"src":"17277:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3397,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:16"},"returnParameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3561,"src":"17321:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3400,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:16"},"scope":3574,"src":"17257:1410:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3572,"nodeType":"Block","src":"19052:225:16","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:16","statements":[{"nodeType":"YulAssignment","src":"19215:46:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:16"},"nodeType":"YulFunctionCall","src":"19234:17:16"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:16"},"nodeType":"YulFunctionCall","src":"19230:30:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:16"},"nodeType":"YulFunctionCall","src":"19224:37:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3564,"isOffset":false,"isSlot":false,"src":"19238:6:16","valueSize":1},{"declaration":3566,"isOffset":false,"isSlot":false,"src":"19253:6:16","valueSize":1},{"declaration":3569,"isOffset":false,"isSlot":false,"src":"19215:5:16","valueSize":1}],"flags":["memory-safe"],"id":3571,"nodeType":"InlineAssembly","src":"19176:95:16"}]},"documentation":{"id":3562,"nodeType":"StructuredDocumentation","src":"18673:268:16","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3573,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:16","nodeType":"FunctionDefinition","parameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:16","nodeType":"VariableDeclaration","scope":3573,"src":"18978:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3563,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3566,"mutability":"mutable","name":"offset","nameLocation":"19007:6:16","nodeType":"VariableDeclaration","scope":3573,"src":"18999:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:16"},"returnParameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"value","nameLocation":"19045:5:16","nodeType":"VariableDeclaration","scope":3573,"src":"19037:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:16"},"scope":3574,"src":"18946:331:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3575,"src":"297:18982:16","usedErrors":[2232,2235,2238],"usedEvents":[]}],"src":"101:19179:16"},"id":16},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3598],"IERC165":[3610]},"id":3599,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3576,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3578,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3599,"sourceUnit":3611,"src":"140:38:17","symbolAliases":[{"foreign":{"id":3577,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"148:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3580,"name":"IERC165","nameLocations":["688:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"688:7:17"},"id":3581,"nodeType":"InheritanceSpecifier","src":"688:7:17"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3579,"nodeType":"StructuredDocumentation","src":"180:479:17","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3598,"linearizedBaseContracts":[3598,3610],"name":"ERC165","nameLocation":"678:6:17","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3609],"body":{"id":3596,"nodeType":"Block","src":"812:64:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3589,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"829:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3591,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"849:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3610_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3610_$","typeString":"type(contract IERC165)"}],"id":3590,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3610","typeString":"type(contract IERC165)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:17","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3588,"id":3595,"nodeType":"Return","src":"822:47:17"}]},"documentation":{"id":3582,"nodeType":"StructuredDocumentation","src":"702:23:17","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":3597,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:17","nodeType":"FunctionDefinition","parameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:17","nodeType":"VariableDeclaration","scope":3597,"src":"757:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3583,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:17"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3597,"src":"806:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3586,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:17"},"scope":3598,"src":"730:146:17","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3599,"src":"660:218:17","usedErrors":[],"usedEvents":[]}],"src":"114:765:17"},"id":17},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3610]},"id":3611,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3600,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3601,"nodeType":"StructuredDocumentation","src":"142:280:18","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3610,"linearizedBaseContracts":[3610],"name":"IERC165","nameLocation":"433:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3602,"nodeType":"StructuredDocumentation","src":"447:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3609,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:18","nodeType":"FunctionDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:18","nodeType":"VariableDeclaration","scope":3609,"src":"819:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3603,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:18"},"returnParameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3609,"src":"862:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3606,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:18"},"scope":3610,"src":"792:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3611,"src":"423:447:18","usedErrors":[],"usedEvents":[]}],"src":"115:756:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5231],"Panic":[2103],"SafeCast":[6996]},"id":5232,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3612,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3614,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5232,"sourceUnit":2104,"src":"129:35:19","symbolAliases":[{"foreign":{"id":3613,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"137:5:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5232,"sourceUnit":6997,"src":"165:40:19","symbolAliases":[{"foreign":{"id":3615,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"173:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3617,"nodeType":"StructuredDocumentation","src":"207:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5231,"linearizedBaseContracts":[5231],"name":"Math","nameLocation":"289:4:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3622,"members":[{"id":3618,"name":"Floor","nameLocation":"324:5:19","nodeType":"EnumValue","src":"324:5:19"},{"id":3619,"name":"Ceil","nameLocation":"367:4:19","nodeType":"EnumValue","src":"367:4:19"},{"id":3620,"name":"Trunc","nameLocation":"409:5:19","nodeType":"EnumValue","src":"409:5:19"},{"id":3621,"name":"Expand","nameLocation":"439:6:19","nodeType":"EnumValue","src":"439:6:19"}],"name":"Rounding","nameLocation":"305:8:19","nodeType":"EnumDefinition","src":"300:169:19"},{"body":{"id":3635,"nodeType":"Block","src":"731:112:19","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:19","statements":[{"nodeType":"YulAssignment","src":"780:16:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:19"},"nodeType":"YulFunctionCall","src":"787:9:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:19"}]},{"nodeType":"YulAssignment","src":"809:18:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:19"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:19"},"nodeType":"YulFunctionCall","src":"817:10:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3625,"isOffset":false,"isSlot":false,"src":"791:1:19","valueSize":1},{"declaration":3625,"isOffset":false,"isSlot":false,"src":"825:1:19","valueSize":1},{"declaration":3627,"isOffset":false,"isSlot":false,"src":"794:1:19","valueSize":1},{"declaration":3630,"isOffset":false,"isSlot":false,"src":"809:4:19","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"780:3:19","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"820:3:19","valueSize":1}],"flags":["memory-safe"],"id":3634,"nodeType":"InlineAssembly","src":"741:96:19"}]},"documentation":{"id":3623,"nodeType":"StructuredDocumentation","src":"475:163:19","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3636,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:19","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"a","nameLocation":"667:1:19","nodeType":"VariableDeclaration","scope":3636,"src":"659:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"b","nameLocation":"678:1:19","nodeType":"VariableDeclaration","scope":3636,"src":"670:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:19"},"returnParameters":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"high","nameLocation":"712:4:19","nodeType":"VariableDeclaration","scope":3636,"src":"704:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"low","nameLocation":"726:3:19","nodeType":"VariableDeclaration","scope":3636,"src":"718:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:19"},"scope":5231,"src":"643:200:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3649,"nodeType":"Block","src":"1115:462:19","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:19"},"nodeType":"YulFunctionCall","src":"1474:6:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:19"},"nodeType":"YulFunctionCall","src":"1461:20:19"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:19","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:19"},"nodeType":"YulFunctionCall","src":"1501:9:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:19"}]},{"nodeType":"YulAssignment","src":"1523:38:19","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:19"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:19"},"nodeType":"YulFunctionCall","src":"1535:12:19"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:19"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:19"},"nodeType":"YulFunctionCall","src":"1549:11:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:19"},"nodeType":"YulFunctionCall","src":"1531:30:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3639,"isOffset":false,"isSlot":false,"src":"1468:1:19","valueSize":1},{"declaration":3639,"isOffset":false,"isSlot":false,"src":"1505:1:19","valueSize":1},{"declaration":3641,"isOffset":false,"isSlot":false,"src":"1471:1:19","valueSize":1},{"declaration":3641,"isOffset":false,"isSlot":false,"src":"1508:1:19","valueSize":1},{"declaration":3644,"isOffset":false,"isSlot":false,"src":"1523:4:19","valueSize":1},{"declaration":3646,"isOffset":false,"isSlot":false,"src":"1494:3:19","valueSize":1},{"declaration":3646,"isOffset":false,"isSlot":false,"src":"1543:3:19","valueSize":1},{"declaration":3646,"isOffset":false,"isSlot":false,"src":"1556:3:19","valueSize":1}],"flags":["memory-safe"],"id":3648,"nodeType":"InlineAssembly","src":"1412:159:19"}]},"documentation":{"id":3637,"nodeType":"StructuredDocumentation","src":"849:173:19","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3650,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:19","nodeType":"FunctionDefinition","parameters":{"id":3642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3639,"mutability":"mutable","name":"a","nameLocation":"1051:1:19","nodeType":"VariableDeclaration","scope":3650,"src":"1043:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3641,"mutability":"mutable","name":"b","nameLocation":"1062:1:19","nodeType":"VariableDeclaration","scope":3650,"src":"1054:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3640,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:19"},"returnParameters":{"id":3647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3644,"mutability":"mutable","name":"high","nameLocation":"1096:4:19","nodeType":"VariableDeclaration","scope":3650,"src":"1088:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3646,"mutability":"mutable","name":"low","nameLocation":"1110:3:19","nodeType":"VariableDeclaration","scope":3650,"src":"1102:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:19"},"scope":5231,"src":"1027:550:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3684,"nodeType":"Block","src":"1784:149:19","statements":[{"id":3683,"nodeType":"UncheckedBlock","src":"1794:133:19","statements":[{"assignments":[3663],"declarations":[{"constant":false,"id":3663,"mutability":"mutable","name":"c","nameLocation":"1826:1:19","nodeType":"VariableDeclaration","scope":3683,"src":"1818:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3667,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"1830:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"1834:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:19"},{"expression":{"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3668,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"1849:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3669,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"1859:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3670,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"1864:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3673,"nodeType":"ExpressionStatement","src":"1849:16:19"},{"expression":{"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"1879:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3675,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"1888:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3678,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"1908:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3676,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"1892:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"1892:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3682,"nodeType":"ExpressionStatement","src":"1879:37:19"}]}]},"documentation":{"id":3651,"nodeType":"StructuredDocumentation","src":"1583:105:19","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3685,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:19","nodeType":"FunctionDefinition","parameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"a","nameLocation":"1717:1:19","nodeType":"VariableDeclaration","scope":3685,"src":"1709:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3655,"mutability":"mutable","name":"b","nameLocation":"1728:1:19","nodeType":"VariableDeclaration","scope":3685,"src":"1720:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:19"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"success","nameLocation":"1759:7:19","nodeType":"VariableDeclaration","scope":3685,"src":"1754:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3657,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3660,"mutability":"mutable","name":"result","nameLocation":"1776:6:19","nodeType":"VariableDeclaration","scope":3685,"src":"1768:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:19"},"scope":5231,"src":"1693:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3719,"nodeType":"Block","src":"2143:149:19","statements":[{"id":3718,"nodeType":"UncheckedBlock","src":"2153:133:19","statements":[{"assignments":[3698],"declarations":[{"constant":false,"id":3698,"mutability":"mutable","name":"c","nameLocation":"2185:1:19","nodeType":"VariableDeclaration","scope":3718,"src":"2177:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3702,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3699,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"2189:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3700,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"2193:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:19"},{"expression":{"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3703,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"2208:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3704,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"2218:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3705,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"2223:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3708,"nodeType":"ExpressionStatement","src":"2208:16:19"},{"expression":{"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"2238:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"2247:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3713,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"2267:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3711,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"2251:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"2251:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3717,"nodeType":"ExpressionStatement","src":"2238:37:19"}]}]},"documentation":{"id":3686,"nodeType":"StructuredDocumentation","src":"1939:108:19","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3720,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:19","nodeType":"FunctionDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"a","nameLocation":"2076:1:19","nodeType":"VariableDeclaration","scope":3720,"src":"2068:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"b","nameLocation":"2087:1:19","nodeType":"VariableDeclaration","scope":3720,"src":"2079:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:19"},"returnParameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"success","nameLocation":"2118:7:19","nodeType":"VariableDeclaration","scope":3720,"src":"2113:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3692,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"result","nameLocation":"2135:6:19","nodeType":"VariableDeclaration","scope":3720,"src":"2127:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:19"},"scope":5231,"src":"2052:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3749,"nodeType":"Block","src":"2505:391:19","statements":[{"id":3748,"nodeType":"UncheckedBlock","src":"2515:375:19","statements":[{"assignments":[3733],"declarations":[{"constant":false,"id":3733,"mutability":"mutable","name":"c","nameLocation":"2547:1:19","nodeType":"VariableDeclaration","scope":3748,"src":"2539:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3737,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"2551:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3735,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"2555:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:19"},{"AST":{"nodeType":"YulBlock","src":"2595:188:19","statements":[{"nodeType":"YulAssignment","src":"2727:42:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:19"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:19"},"nodeType":"YulFunctionCall","src":"2744:9:19"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:19"},"nodeType":"YulFunctionCall","src":"2741:16:19"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:19"},"nodeType":"YulFunctionCall","src":"2759:9:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:19"},"nodeType":"YulFunctionCall","src":"2738:31:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3723,"isOffset":false,"isSlot":false,"src":"2751:1:19","valueSize":1},{"declaration":3723,"isOffset":false,"isSlot":false,"src":"2766:1:19","valueSize":1},{"declaration":3725,"isOffset":false,"isSlot":false,"src":"2755:1:19","valueSize":1},{"declaration":3733,"isOffset":false,"isSlot":false,"src":"2748:1:19","valueSize":1},{"declaration":3728,"isOffset":false,"isSlot":false,"src":"2727:7:19","valueSize":1}],"flags":["memory-safe"],"id":3738,"nodeType":"InlineAssembly","src":"2570:213:19"},{"expression":{"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"2842:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"2851:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3743,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"2871:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3741,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"2855:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"2855:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3747,"nodeType":"ExpressionStatement","src":"2842:37:19"}]}]},"documentation":{"id":3721,"nodeType":"StructuredDocumentation","src":"2298:111:19","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3750,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:19","nodeType":"FunctionDefinition","parameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"a","nameLocation":"2438:1:19","nodeType":"VariableDeclaration","scope":3750,"src":"2430:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"b","nameLocation":"2449:1:19","nodeType":"VariableDeclaration","scope":3750,"src":"2441:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:19"},"returnParameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"success","nameLocation":"2480:7:19","nodeType":"VariableDeclaration","scope":3750,"src":"2475:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3727,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3730,"mutability":"mutable","name":"result","nameLocation":"2497:6:19","nodeType":"VariableDeclaration","scope":3750,"src":"2489:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:19"},"scope":5231,"src":"2414:482:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3770,"nodeType":"Block","src":"3111:231:19","statements":[{"id":3769,"nodeType":"UncheckedBlock","src":"3121:215:19","statements":[{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3762,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"3145:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3763,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"3155:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3767,"nodeType":"ExpressionStatement","src":"3145:15:19"},{"AST":{"nodeType":"YulBlock","src":"3199:127:19","statements":[{"nodeType":"YulAssignment","src":"3293:19:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:19"},"nodeType":"YulFunctionCall","src":"3303:9:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3753,"isOffset":false,"isSlot":false,"src":"3307:1:19","valueSize":1},{"declaration":3755,"isOffset":false,"isSlot":false,"src":"3310:1:19","valueSize":1},{"declaration":3760,"isOffset":false,"isSlot":false,"src":"3293:6:19","valueSize":1}],"flags":["memory-safe"],"id":3768,"nodeType":"InlineAssembly","src":"3174:152:19"}]}]},"documentation":{"id":3751,"nodeType":"StructuredDocumentation","src":"2902:113:19","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3771,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:19","nodeType":"FunctionDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"a","nameLocation":"3044:1:19","nodeType":"VariableDeclaration","scope":3771,"src":"3036:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3755,"mutability":"mutable","name":"b","nameLocation":"3055:1:19","nodeType":"VariableDeclaration","scope":3771,"src":"3047:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:19"},"returnParameters":{"id":3761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"success","nameLocation":"3086:7:19","nodeType":"VariableDeclaration","scope":3771,"src":"3081:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3757,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"result","nameLocation":"3103:6:19","nodeType":"VariableDeclaration","scope":3771,"src":"3095:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:19"},"scope":5231,"src":"3020:322:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3791,"nodeType":"Block","src":"3567:231:19","statements":[{"id":3790,"nodeType":"UncheckedBlock","src":"3577:215:19","statements":[{"expression":{"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3783,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"3601:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3784,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"3611:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3788,"nodeType":"ExpressionStatement","src":"3601:15:19"},{"AST":{"nodeType":"YulBlock","src":"3655:127:19","statements":[{"nodeType":"YulAssignment","src":"3749:19:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:19"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:19"},"nodeType":"YulFunctionCall","src":"3759:9:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3774,"isOffset":false,"isSlot":false,"src":"3763:1:19","valueSize":1},{"declaration":3776,"isOffset":false,"isSlot":false,"src":"3766:1:19","valueSize":1},{"declaration":3781,"isOffset":false,"isSlot":false,"src":"3749:6:19","valueSize":1}],"flags":["memory-safe"],"id":3789,"nodeType":"InlineAssembly","src":"3630:152:19"}]}]},"documentation":{"id":3772,"nodeType":"StructuredDocumentation","src":"3348:123:19","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3792,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:19","nodeType":"FunctionDefinition","parameters":{"id":3777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"a","nameLocation":"3500:1:19","nodeType":"VariableDeclaration","scope":3792,"src":"3492:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"b","nameLocation":"3511:1:19","nodeType":"VariableDeclaration","scope":3792,"src":"3503:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:19"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"success","nameLocation":"3542:7:19","nodeType":"VariableDeclaration","scope":3792,"src":"3537:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3778,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3781,"mutability":"mutable","name":"result","nameLocation":"3559:6:19","nodeType":"VariableDeclaration","scope":3792,"src":"3551:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:19"},"scope":5231,"src":"3476:322:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3821,"nodeType":"Block","src":"3989:122:19","statements":[{"assignments":[3803,3805],"declarations":[{"constant":false,"id":3803,"mutability":"mutable","name":"success","nameLocation":"4005:7:19","nodeType":"VariableDeclaration","scope":3821,"src":"4000:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3802,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3805,"mutability":"mutable","name":"result","nameLocation":"4022:6:19","nodeType":"VariableDeclaration","scope":3821,"src":"4014:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3810,"initialValue":{"arguments":[{"id":3807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"4039:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3808,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"4042:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3806,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"4032:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:19"},{"expression":{"arguments":[{"id":3812,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"4069:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"4078:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3814,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:19","memberName":"max","nodeType":"MemberAccess","src":"4086:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3811,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"4061:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3801,"id":3820,"nodeType":"Return","src":"4054:50:19"}]},"documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"3804:103:19","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3822,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:19","nodeType":"FunctionDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"a","nameLocation":"3943:1:19","nodeType":"VariableDeclaration","scope":3822,"src":"3935:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"b","nameLocation":"3954:1:19","nodeType":"VariableDeclaration","scope":3822,"src":"3946:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:19"},"returnParameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3822,"src":"3980:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:19"},"scope":5231,"src":"3912:199:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3841,"nodeType":"Block","src":"4294:73:19","statements":[{"assignments":[null,3833],"declarations":[null,{"constant":false,"id":3833,"mutability":"mutable","name":"result","nameLocation":"4315:6:19","nodeType":"VariableDeclaration","scope":3841,"src":"4307:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3832,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3838,"initialValue":{"arguments":[{"id":3835,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"4332:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3836,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"4335:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3834,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"4325:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:19"},{"expression":{"id":3839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"4354:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3831,"id":3840,"nodeType":"Return","src":"4347:13:19"}]},"documentation":{"id":3823,"nodeType":"StructuredDocumentation","src":"4117:95:19","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3842,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:19","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"a","nameLocation":"4248:1:19","nodeType":"VariableDeclaration","scope":3842,"src":"4240:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"b","nameLocation":"4259:1:19","nodeType":"VariableDeclaration","scope":3842,"src":"4251:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:19"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3842,"src":"4285:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:19"},"scope":5231,"src":"4217:150:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3871,"nodeType":"Block","src":"4564:122:19","statements":[{"assignments":[3853,3855],"declarations":[{"constant":false,"id":3853,"mutability":"mutable","name":"success","nameLocation":"4580:7:19","nodeType":"VariableDeclaration","scope":3871,"src":"4575:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3852,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"result","nameLocation":"4597:6:19","nodeType":"VariableDeclaration","scope":3871,"src":"4589:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3860,"initialValue":{"arguments":[{"id":3857,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"4614:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3858,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"4617:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3856,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"4607:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:19"},{"expression":{"arguments":[{"id":3862,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"4644:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3863,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"4653:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3864,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:19","memberName":"max","nodeType":"MemberAccess","src":"4661:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3861,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"4636:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3851,"id":3870,"nodeType":"Return","src":"4629:50:19"}]},"documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"4373:109:19","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3872,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:19","nodeType":"FunctionDefinition","parameters":{"id":3848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"a","nameLocation":"4518:1:19","nodeType":"VariableDeclaration","scope":3872,"src":"4510:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"b","nameLocation":"4529:1:19","nodeType":"VariableDeclaration","scope":3872,"src":"4521:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3846,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:19"},"returnParameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3872,"src":"4555:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3849,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:19"},"scope":5231,"src":"4487:199:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3898,"nodeType":"Block","src":"5158:207:19","statements":[{"id":3897,"nodeType":"UncheckedBlock","src":"5168:191:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3884,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"5306:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"5312:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3886,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"5316:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3891,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"5337:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3889,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"5321:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"5321:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3883,"id":3896,"nodeType":"Return","src":"5299:49:19"}]}]},"documentation":{"id":3873,"nodeType":"StructuredDocumentation","src":"4692:374:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3899,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:19","nodeType":"FunctionDefinition","parameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3875,"mutability":"mutable","name":"condition","nameLocation":"5093:9:19","nodeType":"VariableDeclaration","scope":3899,"src":"5088:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3874,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"a","nameLocation":"5112:1:19","nodeType":"VariableDeclaration","scope":3899,"src":"5104:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3879,"mutability":"mutable","name":"b","nameLocation":"5123:1:19","nodeType":"VariableDeclaration","scope":3899,"src":"5115:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:19"},"returnParameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3899,"src":"5149:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:19"},"scope":5231,"src":"5071:294:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3917,"nodeType":"Block","src":"5502:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"5527:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3911,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"5531:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"5534:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3914,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"5537:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3909,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"5519:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3908,"id":3916,"nodeType":"Return","src":"5512:27:19"}]},"documentation":{"id":3900,"nodeType":"StructuredDocumentation","src":"5371:59:19","text":" @dev Returns the largest of two numbers."},"id":3918,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:19","nodeType":"FunctionDefinition","parameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"a","nameLocation":"5456:1:19","nodeType":"VariableDeclaration","scope":3918,"src":"5448:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3904,"mutability":"mutable","name":"b","nameLocation":"5467:1:19","nodeType":"VariableDeclaration","scope":3918,"src":"5459:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:19"},"returnParameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3918,"src":"5493:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:19"},"scope":5231,"src":"5435:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3936,"nodeType":"Block","src":"5684:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"5709:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3930,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"5713:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3932,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"5716:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3933,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"5719:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3928,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"5701:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3927,"id":3935,"nodeType":"Return","src":"5694:27:19"}]},"documentation":{"id":3919,"nodeType":"StructuredDocumentation","src":"5552:60:19","text":" @dev Returns the smallest of two numbers."},"id":3937,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:19","nodeType":"FunctionDefinition","parameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"a","nameLocation":"5638:1:19","nodeType":"VariableDeclaration","scope":3937,"src":"5630:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3923,"mutability":"mutable","name":"b","nameLocation":"5649:1:19","nodeType":"VariableDeclaration","scope":3937,"src":"5641:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:19"},"returnParameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3937,"src":"5675:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:19"},"scope":5231,"src":"5617:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3959,"nodeType":"Block","src":"5912:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"5967:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3948,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"5971:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3951,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"5977:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3952,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"5981:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3946,"id":3958,"nodeType":"Return","src":"5959:28:19"}]},"documentation":{"id":3938,"nodeType":"StructuredDocumentation","src":"5734:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3960,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:19","nodeType":"FunctionDefinition","parameters":{"id":3943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"mutability":"mutable","name":"a","nameLocation":"5866:1:19","nodeType":"VariableDeclaration","scope":3960,"src":"5858:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3942,"mutability":"mutable","name":"b","nameLocation":"5877:1:19","nodeType":"VariableDeclaration","scope":3960,"src":"5869:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:19"},"returnParameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3960,"src":"5903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:19"},"scope":5231,"src":"5841:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4000,"nodeType":"Block","src":"6286:633:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"6300:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3981,"nodeType":"IfStatement","src":"6296:150:19","trueBody":{"id":3980,"nodeType":"Block","src":"6308:138:19","statements":[{"expression":{"arguments":[{"expression":{"id":3976,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"6412:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"6412:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3973,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"6400:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"6400:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3979,"nodeType":"ExpressionStatement","src":"6400:35:19"}]}},{"id":3999,"nodeType":"UncheckedBlock","src":"6829:84:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3984,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"6876:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3982,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"6860:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"6860:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3988,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"6887:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3992,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"6896:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3969,"id":3998,"nodeType":"Return","src":"6853:49:19"}]}]},"documentation":{"id":3961,"nodeType":"StructuredDocumentation","src":"6000:210:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4001,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:19","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"a","nameLocation":"6240:1:19","nodeType":"VariableDeclaration","scope":4001,"src":"6232:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3962,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3965,"mutability":"mutable","name":"b","nameLocation":"6251:1:19","nodeType":"VariableDeclaration","scope":4001,"src":"6243:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:19"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4001,"src":"6277:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:19"},"scope":5231,"src":"6215:704:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4136,"nodeType":"Block","src":"7340:3585:19","statements":[{"id":4135,"nodeType":"UncheckedBlock","src":"7350:3569:19","statements":[{"assignments":[4014,4016],"declarations":[{"constant":false,"id":4014,"mutability":"mutable","name":"high","nameLocation":"7383:4:19","nodeType":"VariableDeclaration","scope":4135,"src":"7375:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4016,"mutability":"mutable","name":"low","nameLocation":"7397:3:19","nodeType":"VariableDeclaration","scope":4135,"src":"7389:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4021,"initialValue":{"arguments":[{"id":4018,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"7411:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4019,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"7414:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4017,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"7404:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4022,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"7498:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4030,"nodeType":"IfStatement","src":"7494:365:19","trueBody":{"id":4029,"nodeType":"Block","src":"7509:350:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"7827:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4026,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"7833:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4012,"id":4028,"nodeType":"Return","src":"7820:24:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4031,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"7969:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4032,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"7984:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4049,"nodeType":"IfStatement","src":"7965:142:19","trueBody":{"id":4048,"nodeType":"Block","src":"7990:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4038,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"8028:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4041,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"8046:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"8046:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4043,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"8070:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:19","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2066,"src":"8070:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4037,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"8020:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4034,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"8008:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"8008:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4047,"nodeType":"ExpressionStatement","src":"8008:84:19"}]}},{"assignments":[4051],"declarations":[{"constant":false,"id":4051,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:19","nodeType":"VariableDeclaration","scope":4135,"src":"8359:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4052,"nodeType":"VariableDeclarationStatement","src":"8359:17:19"},{"AST":{"nodeType":"YulBlock","src":"8415:283:19","statements":[{"nodeType":"YulAssignment","src":"8484:38:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:19"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:19"},"nodeType":"YulFunctionCall","src":"8497:25:19"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:19"}]},{"nodeType":"YulAssignment","src":"8604:37:19","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:19"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:19"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:19"},"nodeType":"YulFunctionCall","src":"8622:18:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:19"},"nodeType":"YulFunctionCall","src":"8612:29:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:19"}]},{"nodeType":"YulAssignment","src":"8658:26:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:19"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:19"},"nodeType":"YulFunctionCall","src":"8665:19:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4008,"isOffset":false,"isSlot":false,"src":"8510:11:19","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"8604:4:19","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"8616:4:19","valueSize":1},{"declaration":4016,"isOffset":false,"isSlot":false,"src":"8636:3:19","valueSize":1},{"declaration":4016,"isOffset":false,"isSlot":false,"src":"8658:3:19","valueSize":1},{"declaration":4016,"isOffset":false,"isSlot":false,"src":"8669:3:19","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"8484:9:19","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"8625:9:19","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"8674:9:19","valueSize":1},{"declaration":4004,"isOffset":false,"isSlot":false,"src":"8504:1:19","valueSize":1},{"declaration":4006,"isOffset":false,"isSlot":false,"src":"8507:1:19","valueSize":1}],"flags":["memory-safe"],"id":4053,"nodeType":"InlineAssembly","src":"8390:308:19"},{"assignments":[4055],"declarations":[{"constant":false,"id":4055,"mutability":"mutable","name":"twos","nameLocation":"8910:4:19","nodeType":"VariableDeclaration","scope":4135,"src":"8902:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4062,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"8917:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4058,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"8936:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:19"},{"AST":{"nodeType":"YulBlock","src":"8987:359:19","statements":[{"nodeType":"YulAssignment","src":"9052:37:19","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:19"},"nodeType":"YulFunctionCall","src":"9067:22:19"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:19"}]},{"nodeType":"YulAssignment","src":"9153:21:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:19"},"nodeType":"YulFunctionCall","src":"9160:14:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:19"}]},{"nodeType":"YulAssignment","src":"9293:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:19","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:19"},"nodeType":"YulFunctionCall","src":"9309:12:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:19"},"nodeType":"YulFunctionCall","src":"9305:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:19"},"nodeType":"YulFunctionCall","src":"9301:31:19"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4008,"isOffset":false,"isSlot":false,"src":"9052:11:19","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"9071:11:19","valueSize":1},{"declaration":4016,"isOffset":false,"isSlot":false,"src":"9153:3:19","valueSize":1},{"declaration":4016,"isOffset":false,"isSlot":false,"src":"9164:3:19","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"9084:4:19","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"9169:4:19","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"9293:4:19","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"9316:4:19","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"9323:4:19","valueSize":1}],"flags":["memory-safe"],"id":4063,"nodeType":"InlineAssembly","src":"8962:384:19"},{"expression":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4064,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"9409:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4065,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"9416:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4066,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"9423:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4069,"nodeType":"ExpressionStatement","src":"9409:18:19"},{"assignments":[4071],"declarations":[{"constant":false,"id":4071,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:19","nodeType":"VariableDeclaration","scope":4135,"src":"9762:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4070,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4078,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4073,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"9785:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:19"},{"expression":{"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4079,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10018:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4081,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10033:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4082,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10047:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4086,"nodeType":"ExpressionStatement","src":"10018:36:19"},{"expression":{"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4087,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10088:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4089,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10103:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4090,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10117:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4094,"nodeType":"ExpressionStatement","src":"10088:36:19"},{"expression":{"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4095,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10160:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4097,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10175:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4098,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10189:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4102,"nodeType":"ExpressionStatement","src":"10160:36:19"},{"expression":{"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4103,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10231:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4105,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10246:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4106,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10260:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4110,"nodeType":"ExpressionStatement","src":"10231:36:19"},{"expression":{"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4111,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10304:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4113,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10319:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4114,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10333:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4118,"nodeType":"ExpressionStatement","src":"10304:36:19"},{"expression":{"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4119,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4121,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10393:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4122,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10407:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4126,"nodeType":"ExpressionStatement","src":"10378:36:19"},{"expression":{"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"10859:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"10868:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4129,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10874:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4132,"nodeType":"ExpressionStatement","src":"10859:22:19"},{"expression":{"id":4133,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"10902:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4012,"id":4134,"nodeType":"Return","src":"10895:13:19"}]}]},"documentation":{"id":4002,"nodeType":"StructuredDocumentation","src":"6925:312:19","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4137,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:19","nodeType":"FunctionDefinition","parameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"x","nameLocation":"7266:1:19","nodeType":"VariableDeclaration","scope":4137,"src":"7258:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4006,"mutability":"mutable","name":"y","nameLocation":"7277:1:19","nodeType":"VariableDeclaration","scope":4137,"src":"7269:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4008,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:19","nodeType":"VariableDeclaration","scope":4137,"src":"7280:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:19"},"returnParameters":{"id":4012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4011,"mutability":"mutable","name":"result","nameLocation":"7332:6:19","nodeType":"VariableDeclaration","scope":4137,"src":"7324:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:19"},"scope":5231,"src":"7242:3683:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4173,"nodeType":"Block","src":"11164:128:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4153,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"11188:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4154,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"11191:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4155,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"11194:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4152,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4137,4174],"referencedDeclaration":4137,"src":"11181:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4160,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"11242:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":4159,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"11225:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3622_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4163,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"11262:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4164,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"11265:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4165,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"11268:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4162,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4157,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"11209:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"11209:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4151,"id":4172,"nodeType":"Return","src":"11174:111:19"}]},"documentation":{"id":4138,"nodeType":"StructuredDocumentation","src":"10931:118:19","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4174,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:19","nodeType":"FunctionDefinition","parameters":{"id":4148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"x","nameLocation":"11078:1:19","nodeType":"VariableDeclaration","scope":4174,"src":"11070:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4139,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"y","nameLocation":"11089:1:19","nodeType":"VariableDeclaration","scope":4174,"src":"11081:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4144,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:19","nodeType":"VariableDeclaration","scope":4174,"src":"11092:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4143,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4147,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:19","nodeType":"VariableDeclaration","scope":4174,"src":"11113:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":4146,"nodeType":"UserDefinedTypeName","pathNode":{"id":4145,"name":"Rounding","nameLocations":["11113:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"11113:8:19"},"referencedDeclaration":3622,"src":"11113:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:19"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4174,"src":"11155:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4149,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:19"},"scope":5231,"src":"11054:238:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4223,"nodeType":"Block","src":"11500:245:19","statements":[{"id":4222,"nodeType":"UncheckedBlock","src":"11510:229:19","statements":[{"assignments":[4187,4189],"declarations":[{"constant":false,"id":4187,"mutability":"mutable","name":"high","nameLocation":"11543:4:19","nodeType":"VariableDeclaration","scope":4222,"src":"11535:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"low","nameLocation":"11557:3:19","nodeType":"VariableDeclaration","scope":4222,"src":"11549:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4194,"initialValue":{"arguments":[{"id":4191,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"11571:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4192,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"11574:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4190,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"11564:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4195,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"11594:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4197,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"11607:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4208,"nodeType":"IfStatement","src":"11590:86:19","trueBody":{"id":4207,"nodeType":"Block","src":"11610:66:19","statements":[{"expression":{"arguments":[{"expression":{"id":4203,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"11640:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:19","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2066,"src":"11640:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4200,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"11628:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"11628:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4206,"nodeType":"ExpressionStatement","src":"11628:33:19"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"11697:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4211,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"11712:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4216,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"11719:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4217,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"11726:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4185,"id":4221,"nodeType":"Return","src":"11689:39:19"}]}]},"documentation":{"id":4175,"nodeType":"StructuredDocumentation","src":"11298:111:19","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4224,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:19","nodeType":"FunctionDefinition","parameters":{"id":4182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"x","nameLocation":"11438:1:19","nodeType":"VariableDeclaration","scope":4224,"src":"11430:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4179,"mutability":"mutable","name":"y","nameLocation":"11449:1:19","nodeType":"VariableDeclaration","scope":4224,"src":"11441:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4181,"mutability":"mutable","name":"n","nameLocation":"11458:1:19","nodeType":"VariableDeclaration","scope":4224,"src":"11452:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4180,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:19"},"returnParameters":{"id":4185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4184,"mutability":"mutable","name":"result","nameLocation":"11492:6:19","nodeType":"VariableDeclaration","scope":4224,"src":"11484:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4183,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:19"},"scope":5231,"src":"11414:331:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4262,"nodeType":"Block","src":"11963:113:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4240,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"11987:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4241,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"11990:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4242,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"11993:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4239,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4224,4263],"referencedDeclaration":4224,"src":"11980:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4247,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"12031:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":4246,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"12014:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3622_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4250,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"12051:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4251,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"12054:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4253,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"12062:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4249,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4244,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"11998:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"11998:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4238,"id":4261,"nodeType":"Return","src":"11973:96:19"}]},"documentation":{"id":4225,"nodeType":"StructuredDocumentation","src":"11751:109:19","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4263,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:19","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"x","nameLocation":"11889:1:19","nodeType":"VariableDeclaration","scope":4263,"src":"11881:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"y","nameLocation":"11900:1:19","nodeType":"VariableDeclaration","scope":4263,"src":"11892:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4228,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4231,"mutability":"mutable","name":"n","nameLocation":"11909:1:19","nodeType":"VariableDeclaration","scope":4263,"src":"11903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4230,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:19","nodeType":"VariableDeclaration","scope":4263,"src":"11912:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":4233,"nodeType":"UserDefinedTypeName","pathNode":{"id":4232,"name":"Rounding","nameLocations":["11912:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"11912:8:19"},"referencedDeclaration":3622,"src":"11912:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:19"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4263,"src":"11954:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:19"},"scope":5231,"src":"11865:211:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4359,"nodeType":"Block","src":"12710:1849:19","statements":[{"id":4358,"nodeType":"UncheckedBlock","src":"12720:1833:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4273,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"12748:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4278,"nodeType":"IfStatement","src":"12744:20:19","trueBody":{"expression":{"hexValue":"30","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4272,"id":4277,"nodeType":"Return","src":"12756:8:19"}},{"assignments":[4280],"declarations":[{"constant":false,"id":4280,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:19","nodeType":"VariableDeclaration","scope":4358,"src":"13235:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4279,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4284,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"13255:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4282,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"13259:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:19"},{"assignments":[4286],"declarations":[{"constant":false,"id":4286,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:19","nodeType":"VariableDeclaration","scope":4358,"src":"13274:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4288,"initialValue":{"id":4287,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"13288:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:19"},{"assignments":[4290],"declarations":[{"constant":false,"id":4290,"mutability":"mutable","name":"x","nameLocation":"13432:1:19","nodeType":"VariableDeclaration","scope":4358,"src":"13425:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4289,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4292,"initialValue":{"hexValue":"30","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:19"},{"assignments":[4294],"declarations":[{"constant":false,"id":4294,"mutability":"mutable","name":"y","nameLocation":"13458:1:19","nodeType":"VariableDeclaration","scope":4358,"src":"13451:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4293,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4296,"initialValue":{"hexValue":"31","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:19"},{"body":{"id":4333,"nodeType":"Block","src":"13501:882:19","statements":[{"assignments":[4301],"declarations":[{"constant":false,"id":4301,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:19","nodeType":"VariableDeclaration","scope":4333,"src":"13519:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4305,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4302,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"13538:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4303,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"13544:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:19"},{"expression":{"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4306,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"13573:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4307,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"13578:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4308,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4309,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"13678:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4310,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"13923:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4311,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"13929:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4312,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"13941:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4317,"nodeType":"ExpressionStatement","src":"13572:395:19"},{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4318,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"13987:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4319,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"13990:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4320,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4321,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"14072:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4322,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"14326:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4323,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"14330:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4326,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"14341:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4324,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:19","typeDescriptions":{}}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4332,"nodeType":"ExpressionStatement","src":"13986:382:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4297,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"13485:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4334,"nodeType":"WhileStatement","src":"13478:905:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4335,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"14401:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4340,"nodeType":"IfStatement","src":"14397:22:19","trueBody":{"expression":{"hexValue":"30","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4272,"id":4339,"nodeType":"Return","src":"14411:8:19"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"14470:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4345,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"14477:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:19","subExpression":{"id":4348,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"14490:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:19","typeDescriptions":{}}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4354,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"14502:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:19","typeDescriptions":{}}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4341,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"14462:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4272,"id":4357,"nodeType":"Return","src":"14455:50:19"}]}]},"documentation":{"id":4264,"nodeType":"StructuredDocumentation","src":"12082:553:19","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4360,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:19","nodeType":"FunctionDefinition","parameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"a","nameLocation":"12664:1:19","nodeType":"VariableDeclaration","scope":4360,"src":"12656:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4268,"mutability":"mutable","name":"n","nameLocation":"12675:1:19","nodeType":"VariableDeclaration","scope":4360,"src":"12667:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4267,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:19"},"returnParameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4360,"src":"12701:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:19"},"scope":5231,"src":"12640:1919:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4380,"nodeType":"Block","src":"15159:82:19","statements":[{"id":4379,"nodeType":"UncheckedBlock","src":"15169:66:19","statements":[{"expression":{"arguments":[{"id":4372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"15212:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"15215:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4376,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"15222:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4370,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"15200:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5231_$","typeString":"type(library Math)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:19","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4417,"src":"15200:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4369,"id":4378,"nodeType":"Return","src":"15193:31:19"}]}]},"documentation":{"id":4361,"nodeType":"StructuredDocumentation","src":"14565:514:19","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4381,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:19","nodeType":"FunctionDefinition","parameters":{"id":4366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"a","nameLocation":"15113:1:19","nodeType":"VariableDeclaration","scope":4381,"src":"15105:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4365,"mutability":"mutable","name":"p","nameLocation":"15124:1:19","nodeType":"VariableDeclaration","scope":4381,"src":"15116:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4364,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:19"},"returnParameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4381,"src":"15150:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:19"},"scope":5231,"src":"15084:157:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4416,"nodeType":"Block","src":"16011:174:19","statements":[{"assignments":[4394,4396],"declarations":[{"constant":false,"id":4394,"mutability":"mutable","name":"success","nameLocation":"16027:7:19","nodeType":"VariableDeclaration","scope":4416,"src":"16022:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4393,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4396,"mutability":"mutable","name":"result","nameLocation":"16044:6:19","nodeType":"VariableDeclaration","scope":4416,"src":"16036:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4402,"initialValue":{"arguments":[{"id":4398,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"16064:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4399,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"16067:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4400,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"16070:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4397,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4441,4523],"referencedDeclaration":4441,"src":"16054:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:19"},{"condition":{"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:19","subExpression":{"id":4403,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"16087:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4413,"nodeType":"IfStatement","src":"16082:74:19","trueBody":{"id":4412,"nodeType":"Block","src":"16096:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":4408,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"16122:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"16122:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4405,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"16110:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"16110:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4411,"nodeType":"ExpressionStatement","src":"16110:35:19"}]}},{"expression":{"id":4414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"16172:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4392,"id":4415,"nodeType":"Return","src":"16165:13:19"}]},"documentation":{"id":4382,"nodeType":"StructuredDocumentation","src":"15247:678:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4417,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:19","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4384,"mutability":"mutable","name":"b","nameLocation":"15954:1:19","nodeType":"VariableDeclaration","scope":4417,"src":"15946:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4383,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4386,"mutability":"mutable","name":"e","nameLocation":"15965:1:19","nodeType":"VariableDeclaration","scope":4417,"src":"15957:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"m","nameLocation":"15976:1:19","nodeType":"VariableDeclaration","scope":4417,"src":"15968:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:19"},"returnParameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4417,"src":"16002:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:19"},"scope":5231,"src":"15930:255:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4440,"nodeType":"Block","src":"17039:1493:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4431,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"17053:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4438,"nodeType":"IfStatement","src":"17049:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4430,"id":4437,"nodeType":"Return","src":"17061:17:19"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:19"},"nodeType":"YulFunctionCall","src":"17138:11:19"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:19"},"nodeType":"YulFunctionCall","src":"18050:17:19"},"nodeType":"YulExpressionStatement","src":"18050:17:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:19"},"nodeType":"YulFunctionCall","src":"18087:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:19"},"nodeType":"YulFunctionCall","src":"18080:28:19"},"nodeType":"YulExpressionStatement","src":"18080:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:19"},"nodeType":"YulFunctionCall","src":"18128:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:19"},"nodeType":"YulFunctionCall","src":"18121:28:19"},"nodeType":"YulExpressionStatement","src":"18121:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:19"},"nodeType":"YulFunctionCall","src":"18169:14:19"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:19"},"nodeType":"YulFunctionCall","src":"18162:25:19"},"nodeType":"YulExpressionStatement","src":"18162:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:19"},"nodeType":"YulFunctionCall","src":"18207:14:19"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:19"},"nodeType":"YulFunctionCall","src":"18200:25:19"},"nodeType":"YulExpressionStatement","src":"18200:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:19"},"nodeType":"YulFunctionCall","src":"18245:14:19"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:19"},"nodeType":"YulFunctionCall","src":"18238:25:19"},"nodeType":"YulExpressionStatement","src":"18238:25:19"},{"nodeType":"YulAssignment","src":"18425:57:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:19"},"nodeType":"YulFunctionCall","src":"18447:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:19","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:19","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:19","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:19"},"nodeType":"YulFunctionCall","src":"18436:46:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:19"}]},{"nodeType":"YulAssignment","src":"18495:21:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:19","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:19"},"nodeType":"YulFunctionCall","src":"18505:11:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4420,"isOffset":false,"isSlot":false,"src":"18185:1:19","valueSize":1},{"declaration":4422,"isOffset":false,"isSlot":false,"src":"18223:1:19","valueSize":1},{"declaration":4424,"isOffset":false,"isSlot":false,"src":"18261:1:19","valueSize":1},{"declaration":4429,"isOffset":false,"isSlot":false,"src":"18495:6:19","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"18425:7:19","valueSize":1}],"flags":["memory-safe"],"id":4439,"nodeType":"InlineAssembly","src":"17088:1438:19"}]},"documentation":{"id":4418,"nodeType":"StructuredDocumentation","src":"16191:738:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4441,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:19","nodeType":"FunctionDefinition","parameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"b","nameLocation":"16961:1:19","nodeType":"VariableDeclaration","scope":4441,"src":"16953:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4422,"mutability":"mutable","name":"e","nameLocation":"16972:1:19","nodeType":"VariableDeclaration","scope":4441,"src":"16964:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4421,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4424,"mutability":"mutable","name":"m","nameLocation":"16983:1:19","nodeType":"VariableDeclaration","scope":4441,"src":"16975:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:19"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4427,"mutability":"mutable","name":"success","nameLocation":"17014:7:19","nodeType":"VariableDeclaration","scope":4441,"src":"17009:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4426,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4429,"mutability":"mutable","name":"result","nameLocation":"17031:6:19","nodeType":"VariableDeclaration","scope":4441,"src":"17023:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:19"},"scope":5231,"src":"16934:1598:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4476,"nodeType":"Block","src":"18729:179:19","statements":[{"assignments":[4454,4456],"declarations":[{"constant":false,"id":4454,"mutability":"mutable","name":"success","nameLocation":"18745:7:19","nodeType":"VariableDeclaration","scope":4476,"src":"18740:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4453,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4456,"mutability":"mutable","name":"result","nameLocation":"18767:6:19","nodeType":"VariableDeclaration","scope":4476,"src":"18754:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4455,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4462,"initialValue":{"arguments":[{"id":4458,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"18787:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4459,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"18790:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4460,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"18793:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4457,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4441,4523],"referencedDeclaration":4523,"src":"18777:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:19"},{"condition":{"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:19","subExpression":{"id":4463,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"18810:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4473,"nodeType":"IfStatement","src":"18805:74:19","trueBody":{"id":4472,"nodeType":"Block","src":"18819:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":4468,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"18845:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"18845:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4465,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"18833:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"18833:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4471,"nodeType":"ExpressionStatement","src":"18833:35:19"}]}},{"expression":{"id":4474,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"18895:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4452,"id":4475,"nodeType":"Return","src":"18888:13:19"}]},"documentation":{"id":4442,"nodeType":"StructuredDocumentation","src":"18538:85:19","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4477,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:19","nodeType":"FunctionDefinition","parameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"b","nameLocation":"18657:1:19","nodeType":"VariableDeclaration","scope":4477,"src":"18644:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4443,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4446,"mutability":"mutable","name":"e","nameLocation":"18673:1:19","nodeType":"VariableDeclaration","scope":4477,"src":"18660:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4445,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4448,"mutability":"mutable","name":"m","nameLocation":"18689:1:19","nodeType":"VariableDeclaration","scope":4477,"src":"18676:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4447,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:19"},"returnParameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4477,"src":"18715:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4450,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:19"},"scope":5231,"src":"18628:280:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4522,"nodeType":"Block","src":"19162:771:19","statements":[{"condition":{"arguments":[{"id":4492,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"19187:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4491,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"19176:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4501,"nodeType":"IfStatement","src":"19172:47:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4495,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4490,"id":4500,"nodeType":"Return","src":"19191:28:19"}},{"assignments":[4503],"declarations":[{"constant":false,"id":4503,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:19","nodeType":"VariableDeclaration","scope":4522,"src":"19230:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4506,"initialValue":{"expression":{"id":4504,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"19245:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:19","memberName":"length","nodeType":"MemberAccess","src":"19245:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:19"},{"expression":{"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4507,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"19335:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"19361:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:19","memberName":"length","nodeType":"MemberAccess","src":"19361:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4512,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"19371:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:19","memberName":"length","nodeType":"MemberAccess","src":"19371:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4514,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"19381:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4515,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"19387:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4516,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"19390:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4517,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"19393:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4508,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4520,"nodeType":"ExpressionStatement","src":"19335:60:19"},{"AST":{"nodeType":"YulBlock","src":"19431:496:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:19","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:19"},"nodeType":"YulFunctionCall","src":"19460:17:19"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:19","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:19"},"nodeType":"YulFunctionCall","src":"19589:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:19","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:19"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:19"},"nodeType":"YulFunctionCall","src":"19611:13:19"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:19"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:19"},"nodeType":"YulFunctionCall","src":"19578:62:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:19"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:19"},"nodeType":"YulFunctionCall","src":"19789:20:19"},"nodeType":"YulExpressionStatement","src":"19789:20:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:19","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:19"},"nodeType":"YulFunctionCall","src":"19898:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:19"},"nodeType":"YulFunctionCall","src":"19885:32:19"},"nodeType":"YulExpressionStatement","src":"19885:32:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4503,"isOffset":false,"isSlot":false,"src":"19635:4:19","valueSize":1},{"declaration":4503,"isOffset":false,"isSlot":false,"src":"19804:4:19","valueSize":1},{"declaration":4503,"isOffset":false,"isSlot":false,"src":"19911:4:19","valueSize":1},{"declaration":4489,"isOffset":false,"isSlot":false,"src":"19464:6:19","valueSize":1},{"declaration":4489,"isOffset":false,"isSlot":false,"src":"19617:6:19","valueSize":1},{"declaration":4489,"isOffset":false,"isSlot":false,"src":"19796:6:19","valueSize":1},{"declaration":4487,"isOffset":false,"isSlot":false,"src":"19567:7:19","valueSize":1}],"flags":["memory-safe"],"id":4521,"nodeType":"InlineAssembly","src":"19406:521:19"}]},"documentation":{"id":4478,"nodeType":"StructuredDocumentation","src":"18914:88:19","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4523,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:19","nodeType":"FunctionDefinition","parameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"b","nameLocation":"19048:1:19","nodeType":"VariableDeclaration","scope":4523,"src":"19035:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4479,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4482,"mutability":"mutable","name":"e","nameLocation":"19072:1:19","nodeType":"VariableDeclaration","scope":4523,"src":"19059:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4481,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4484,"mutability":"mutable","name":"m","nameLocation":"19096:1:19","nodeType":"VariableDeclaration","scope":4523,"src":"19083:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4483,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:19"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4487,"mutability":"mutable","name":"success","nameLocation":"19132:7:19","nodeType":"VariableDeclaration","scope":4523,"src":"19127:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4486,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4489,"mutability":"mutable","name":"result","nameLocation":"19154:6:19","nodeType":"VariableDeclaration","scope":4523,"src":"19141:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4488,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:19"},"scope":5231,"src":"19007:926:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4555,"nodeType":"Block","src":"20088:176:19","statements":[{"body":{"id":4551,"nodeType":"Block","src":"20145:92:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4542,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"20163:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4544,"indexExpression":{"id":4543,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"20173:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4550,"nodeType":"IfStatement","src":"20159:68:19","trueBody":{"id":4549,"nodeType":"Block","src":"20182:45:19","statements":[{"expression":{"hexValue":"66616c7365","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4530,"id":4548,"nodeType":"Return","src":"20200:12:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4535,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"20118:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4536,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"20122:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:19","memberName":"length","nodeType":"MemberAccess","src":"20122:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4552,"initializationExpression":{"assignments":[4532],"declarations":[{"constant":false,"id":4532,"mutability":"mutable","name":"i","nameLocation":"20111:1:19","nodeType":"VariableDeclaration","scope":4552,"src":"20103:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4534,"initialValue":{"hexValue":"30","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:19"},"loopExpression":{"expression":{"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:19","subExpression":{"id":4539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"20142:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4541,"nodeType":"ExpressionStatement","src":"20140:3:19"},"nodeType":"ForStatement","src":"20098:139:19"},{"expression":{"hexValue":"74727565","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4530,"id":4554,"nodeType":"Return","src":"20246:11:19"}]},"documentation":{"id":4524,"nodeType":"StructuredDocumentation","src":"19939:72:19","text":" @dev Returns whether the provided byte array is zero."},"id":4556,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:19","nodeType":"FunctionDefinition","parameters":{"id":4527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4526,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:19","nodeType":"VariableDeclaration","scope":4556,"src":"20036:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4525,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:19"},"returnParameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4556,"src":"20082:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4528,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:19"},"scope":5231,"src":"20016:248:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4774,"nodeType":"Block","src":"20624:5124:19","statements":[{"id":4773,"nodeType":"UncheckedBlock","src":"20634:5108:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4564,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"20728:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4570,"nodeType":"IfStatement","src":"20724:53:19","trueBody":{"id":4569,"nodeType":"Block","src":"20736:41:19","statements":[{"expression":{"id":4567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"20761:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4563,"id":4568,"nodeType":"Return","src":"20754:8:19"}]}},{"assignments":[4572],"declarations":[{"constant":false,"id":4572,"mutability":"mutable","name":"aa","nameLocation":"21712:2:19","nodeType":"VariableDeclaration","scope":4773,"src":"21704:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4574,"initialValue":{"id":4573,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"21717:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:19"},{"assignments":[4576],"declarations":[{"constant":false,"id":4576,"mutability":"mutable","name":"xn","nameLocation":"21740:2:19","nodeType":"VariableDeclaration","scope":4773,"src":"21732:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4575,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4578,"initialValue":{"hexValue":"31","id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"21765:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4594,"nodeType":"IfStatement","src":"21761:92:19","trueBody":{"id":4593,"nodeType":"Block","src":"21783:70:19","statements":[{"expression":{"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4585,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"21801:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4588,"nodeType":"ExpressionStatement","src":"21801:10:19"},{"expression":{"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4589,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"21829:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4592,"nodeType":"ExpressionStatement","src":"21829:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4595,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"21870:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4610,"nodeType":"IfStatement","src":"21866:90:19","trueBody":{"id":4609,"nodeType":"Block","src":"21887:69:19","statements":[{"expression":{"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4601,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"21905:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4604,"nodeType":"ExpressionStatement","src":"21905:9:19"},{"expression":{"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4605,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"21932:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4608,"nodeType":"ExpressionStatement","src":"21932:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4611,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"21973:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4626,"nodeType":"IfStatement","src":"21969:90:19","trueBody":{"id":4625,"nodeType":"Block","src":"21990:69:19","statements":[{"expression":{"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4617,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22008:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4620,"nodeType":"ExpressionStatement","src":"22008:9:19"},{"expression":{"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4621,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22035:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4624,"nodeType":"ExpressionStatement","src":"22035:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22076:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4642,"nodeType":"IfStatement","src":"22072:89:19","trueBody":{"id":4641,"nodeType":"Block","src":"22093:68:19","statements":[{"expression":{"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4633,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22111:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4636,"nodeType":"ExpressionStatement","src":"22111:9:19"},{"expression":{"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4637,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22138:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4640,"nodeType":"ExpressionStatement","src":"22138:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4643,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22178:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4658,"nodeType":"IfStatement","src":"22174:87:19","trueBody":{"id":4657,"nodeType":"Block","src":"22194:67:19","statements":[{"expression":{"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4649,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22212:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4652,"nodeType":"ExpressionStatement","src":"22212:8:19"},{"expression":{"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4653,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22238:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4656,"nodeType":"ExpressionStatement","src":"22238:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22278:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4674,"nodeType":"IfStatement","src":"22274:87:19","trueBody":{"id":4673,"nodeType":"Block","src":"22294:67:19","statements":[{"expression":{"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4665,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22312:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4668,"nodeType":"ExpressionStatement","src":"22312:8:19"},{"expression":{"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4669,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22338:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4672,"nodeType":"ExpressionStatement","src":"22338:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4675,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22378:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4686,"nodeType":"IfStatement","src":"22374:61:19","trueBody":{"id":4685,"nodeType":"Block","src":"22394:41:19","statements":[{"expression":{"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4681,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22412:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4684,"nodeType":"ExpressionStatement","src":"22412:8:19"}]}},{"expression":{"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4687,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22855:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4689,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22865:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4695,"nodeType":"ExpressionStatement","src":"22855:18:19"},{"expression":{"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4696,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24760:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4697,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24766:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"24771:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4699,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24775:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4706,"nodeType":"ExpressionStatement","src":"24760:23:19"},{"expression":{"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4707,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24869:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4708,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24875:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4709,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"24880:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4710,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24884:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4717,"nodeType":"ExpressionStatement","src":"24869:23:19"},{"expression":{"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4718,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24980:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4719,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24986:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"24991:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4721,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24995:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4728,"nodeType":"ExpressionStatement","src":"24980:23:19"},{"expression":{"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4729,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25089:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4730,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25095:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"25100:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4732,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25104:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4739,"nodeType":"ExpressionStatement","src":"25089:23:19"},{"expression":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4740,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25199:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4741,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25205:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"25210:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4743,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25214:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4750,"nodeType":"ExpressionStatement","src":"25199:23:19"},{"expression":{"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4751,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25309:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25315:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"25320:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4754,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25324:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4761,"nodeType":"ExpressionStatement","src":"25309:23:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4762,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25698:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4765,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25719:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4766,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"25724:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4767,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25728:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4763,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"25703:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"25703:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4563,"id":4772,"nodeType":"Return","src":"25691:40:19"}]}]},"documentation":{"id":4557,"nodeType":"StructuredDocumentation","src":"20270:292:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4775,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:19","nodeType":"FunctionDefinition","parameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"a","nameLocation":"20589:1:19","nodeType":"VariableDeclaration","scope":4775,"src":"20581:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4558,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:19"},"returnParameters":{"id":4563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4775,"src":"20615:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:19"},"scope":5231,"src":"20567:5181:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4808,"nodeType":"Block","src":"25921:171:19","statements":[{"id":4807,"nodeType":"UncheckedBlock","src":"25931:155:19","statements":[{"assignments":[4787],"declarations":[{"constant":false,"id":4787,"mutability":"mutable","name":"result","nameLocation":"25963:6:19","nodeType":"VariableDeclaration","scope":4807,"src":"25955:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4786,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4791,"initialValue":{"arguments":[{"id":4789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"25977:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4788,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4775,4809],"referencedDeclaration":4775,"src":"25972:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"26000:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4796,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"26042:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":4795,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"26025:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3622_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"26055:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"26064:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4801,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"26073:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4793,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26009:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26009:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4785,"id":4806,"nodeType":"Return","src":"25993:82:19"}]}]},"documentation":{"id":4776,"nodeType":"StructuredDocumentation","src":"25754:86:19","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4809,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:19","nodeType":"FunctionDefinition","parameters":{"id":4782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4778,"mutability":"mutable","name":"a","nameLocation":"25867:1:19","nodeType":"VariableDeclaration","scope":4809,"src":"25859:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4781,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:19","nodeType":"VariableDeclaration","scope":4809,"src":"25870:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":4780,"nodeType":"UserDefinedTypeName","pathNode":{"id":4779,"name":"Rounding","nameLocations":["25870:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"25870:8:19"},"referencedDeclaration":3622,"src":"25870:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:19"},"returnParameters":{"id":4785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4809,"src":"25912:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:19"},"scope":5231,"src":"25845:247:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4899,"nodeType":"Block","src":"26281:2334:19","statements":[{"expression":{"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4817,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26363:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4820,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"26383:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4818,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26367:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26367:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4827,"nodeType":"ExpressionStatement","src":"26363:64:19"},{"expression":{"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4828,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26503:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4831,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"26525:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4832,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26530:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4829,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26508:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26508:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4841,"nodeType":"ExpressionStatement","src":"26503:56:19"},{"expression":{"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4842,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26634:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"26656:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4846,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26661:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4843,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26639:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26639:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4855,"nodeType":"ExpressionStatement","src":"26634:48:19"},{"expression":{"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4856,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26757:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"26779:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4860,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26784:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4857,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26762:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26762:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4869,"nodeType":"ExpressionStatement","src":"26757:44:19"},{"expression":{"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4870,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26874:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4873,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"26896:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4874,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26901:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4871,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26879:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26879:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4883,"nodeType":"ExpressionStatement","src":"26874:42:19"},{"expression":{"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4884,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26988:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4887,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"27010:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4888,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"27015:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4885,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26993:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26993:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4897,"nodeType":"ExpressionStatement","src":"26988:41:19"},{"AST":{"nodeType":"YulBlock","src":"28490:119:19","statements":[{"nodeType":"YulAssignment","src":"28504:95:19","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:19"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:19"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:19"},"nodeType":"YulFunctionCall","src":"28520:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:19","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:19"},"nodeType":"YulFunctionCall","src":"28515:83:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:19"},"nodeType":"YulFunctionCall","src":"28509:90:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4815,"isOffset":false,"isSlot":false,"src":"28504:1:19","valueSize":1},{"declaration":4815,"isOffset":false,"isSlot":false,"src":"28512:1:19","valueSize":1},{"declaration":4815,"isOffset":false,"isSlot":false,"src":"28524:1:19","valueSize":1},{"declaration":4812,"isOffset":false,"isSlot":false,"src":"28527:1:19","valueSize":1}],"flags":["memory-safe"],"id":4898,"nodeType":"InlineAssembly","src":"28465:144:19"}]},"documentation":{"id":4810,"nodeType":"StructuredDocumentation","src":"26098:119:19","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4900,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:19","nodeType":"FunctionDefinition","parameters":{"id":4813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"mutability":"mutable","name":"x","nameLocation":"26244:1:19","nodeType":"VariableDeclaration","scope":4900,"src":"26236:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:19"},"returnParameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"r","nameLocation":"26278:1:19","nodeType":"VariableDeclaration","scope":4900,"src":"26270:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4814,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:19"},"scope":5231,"src":"26222:2393:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4933,"nodeType":"Block","src":"28848:175:19","statements":[{"id":4932,"nodeType":"UncheckedBlock","src":"28858:159:19","statements":[{"assignments":[4912],"declarations":[{"constant":false,"id":4912,"mutability":"mutable","name":"result","nameLocation":"28890:6:19","nodeType":"VariableDeclaration","scope":4932,"src":"28882:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4911,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4916,"initialValue":{"arguments":[{"id":4914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"28904:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4913,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4900,4934],"referencedDeclaration":4900,"src":"28899:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"28931:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4921,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"28973:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":4920,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"28956:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3622_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4924,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"28991:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"29000:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4918,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"28940:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"28940:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4910,"id":4931,"nodeType":"Return","src":"28924:82:19"}]}]},"documentation":{"id":4901,"nodeType":"StructuredDocumentation","src":"28621:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4934,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:19","nodeType":"FunctionDefinition","parameters":{"id":4907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"value","nameLocation":"28790:5:19","nodeType":"VariableDeclaration","scope":4934,"src":"28782:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4902,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4906,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:19","nodeType":"VariableDeclaration","scope":4934,"src":"28797:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":4905,"nodeType":"UserDefinedTypeName","pathNode":{"id":4904,"name":"Rounding","nameLocations":["28797:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"28797:8:19"},"referencedDeclaration":3622,"src":"28797:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:19"},"returnParameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4934,"src":"28839:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:19"},"scope":5231,"src":"28768:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5062,"nodeType":"Block","src":"29216:854:19","statements":[{"assignments":[4943],"declarations":[{"constant":false,"id":4943,"mutability":"mutable","name":"result","nameLocation":"29234:6:19","nodeType":"VariableDeclaration","scope":5062,"src":"29226:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4942,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4945,"initialValue":{"hexValue":"30","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:19"},{"id":5059,"nodeType":"UncheckedBlock","src":"29254:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29282:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4962,"nodeType":"IfStatement","src":"29278:103:19","trueBody":{"id":4961,"nodeType":"Block","src":"29301:80:19","statements":[{"expression":{"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29319:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4956,"nodeType":"ExpressionStatement","src":"29319:17:19"},{"expression":{"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"29354:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4960,"nodeType":"ExpressionStatement","src":"29354:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29398:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4979,"nodeType":"IfStatement","src":"29394:103:19","trueBody":{"id":4978,"nodeType":"Block","src":"29417:80:19","statements":[{"expression":{"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29435:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4973,"nodeType":"ExpressionStatement","src":"29435:17:19"},{"expression":{"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4974,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"29470:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4977,"nodeType":"ExpressionStatement","src":"29470:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29514:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4996,"nodeType":"IfStatement","src":"29510:103:19","trueBody":{"id":4995,"nodeType":"Block","src":"29533:80:19","statements":[{"expression":{"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29551:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4990,"nodeType":"ExpressionStatement","src":"29551:17:19"},{"expression":{"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4991,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"29586:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4994,"nodeType":"ExpressionStatement","src":"29586:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29630:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5013,"nodeType":"IfStatement","src":"29626:100:19","trueBody":{"id":5012,"nodeType":"Block","src":"29648:78:19","statements":[{"expression":{"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29666:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5007,"nodeType":"ExpressionStatement","src":"29666:16:19"},{"expression":{"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5008,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"29700:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5011,"nodeType":"ExpressionStatement","src":"29700:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29743:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5030,"nodeType":"IfStatement","src":"29739:100:19","trueBody":{"id":5029,"nodeType":"Block","src":"29761:78:19","statements":[{"expression":{"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29779:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5024,"nodeType":"ExpressionStatement","src":"29779:16:19"},{"expression":{"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5025,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"29813:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5028,"nodeType":"ExpressionStatement","src":"29813:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29856:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5047,"nodeType":"IfStatement","src":"29852:100:19","trueBody":{"id":5046,"nodeType":"Block","src":"29874:78:19","statements":[{"expression":{"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29892:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5041,"nodeType":"ExpressionStatement","src":"29892:16:19"},{"expression":{"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5042,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"29926:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5045,"nodeType":"ExpressionStatement","src":"29926:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29969:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5058,"nodeType":"IfStatement","src":"29965:66:19","trueBody":{"id":5057,"nodeType":"Block","src":"29987:44:19","statements":[{"expression":{"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"30005:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5056,"nodeType":"ExpressionStatement","src":"30005:11:19"}]}}]},{"expression":{"id":5060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"30057:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4941,"id":5061,"nodeType":"Return","src":"30050:13:19"}]},"documentation":{"id":4935,"nodeType":"StructuredDocumentation","src":"29029:120:19","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5063,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:19","nodeType":"FunctionDefinition","parameters":{"id":4938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4937,"mutability":"mutable","name":"value","nameLocation":"29177:5:19","nodeType":"VariableDeclaration","scope":5063,"src":"29169:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:19"},"returnParameters":{"id":4941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5063,"src":"29207:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4939,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:19"},"scope":5231,"src":"29154:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5096,"nodeType":"Block","src":"30305:177:19","statements":[{"id":5095,"nodeType":"UncheckedBlock","src":"30315:161:19","statements":[{"assignments":[5075],"declarations":[{"constant":false,"id":5075,"mutability":"mutable","name":"result","nameLocation":"30347:6:19","nodeType":"VariableDeclaration","scope":5095,"src":"30339:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5074,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5079,"initialValue":{"arguments":[{"id":5077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"30362:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5076,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5063,5097],"referencedDeclaration":5063,"src":"30356:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5080,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"30389:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5084,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"30431:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":5083,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"30414:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3622_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"30450:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"30459:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5081,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"30398:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"30398:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5073,"id":5094,"nodeType":"Return","src":"30382:83:19"}]}]},"documentation":{"id":5064,"nodeType":"StructuredDocumentation","src":"30076:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5097,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:19","nodeType":"FunctionDefinition","parameters":{"id":5070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5066,"mutability":"mutable","name":"value","nameLocation":"30247:5:19","nodeType":"VariableDeclaration","scope":5097,"src":"30239:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5065,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5069,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:19","nodeType":"VariableDeclaration","scope":5097,"src":"30254:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":5068,"nodeType":"UserDefinedTypeName","pathNode":{"id":5067,"name":"Rounding","nameLocations":["30254:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"30254:8:19"},"referencedDeclaration":3622,"src":"30254:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:19"},"returnParameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5097,"src":"30296:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:19"},"scope":5231,"src":"30224:258:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5173,"nodeType":"Block","src":"30800:675:19","statements":[{"expression":{"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5105,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"30882:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5108,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"30902:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5106,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"30886:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"30886:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5115,"nodeType":"ExpressionStatement","src":"30882:64:19"},{"expression":{"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5116,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31022:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5119,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"31044:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5120,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31049:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5117,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31027:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"31027:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5129,"nodeType":"ExpressionStatement","src":"31022:56:19"},{"expression":{"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5130,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31153:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5133,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"31175:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5134,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31180:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5131,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31158:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"31158:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5143,"nodeType":"ExpressionStatement","src":"31153:48:19"},{"expression":{"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5144,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31276:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5147,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"31298:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5148,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31303:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5145,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31281:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"31281:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5157,"nodeType":"ExpressionStatement","src":"31276:44:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5158,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31426:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5164,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"31453:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5165,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31458:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5162,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31436:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"31436:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5104,"id":5172,"nodeType":"Return","src":"31418:50:19"}]},"documentation":{"id":5098,"nodeType":"StructuredDocumentation","src":"30488:246:19","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5174,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:19","nodeType":"FunctionDefinition","parameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"x","nameLocation":"30763:1:19","nodeType":"VariableDeclaration","scope":5174,"src":"30755:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5099,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:19"},"returnParameters":{"id":5104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"mutability":"mutable","name":"r","nameLocation":"30797:1:19","nodeType":"VariableDeclaration","scope":5174,"src":"30789:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5102,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:19"},"scope":5231,"src":"30739:736:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5210,"nodeType":"Block","src":"31712:184:19","statements":[{"id":5209,"nodeType":"UncheckedBlock","src":"31722:168:19","statements":[{"assignments":[5186],"declarations":[{"constant":false,"id":5186,"mutability":"mutable","name":"result","nameLocation":"31754:6:19","nodeType":"VariableDeclaration","scope":5209,"src":"31746:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5185,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5190,"initialValue":{"arguments":[{"id":5188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"31770:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5187,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5174,5211],"referencedDeclaration":5174,"src":"31763:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"31797:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5195,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"31839:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":5194,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"31822:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3622_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5198,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"31858:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"31873:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5192,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31806:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"31806:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5184,"id":5208,"nodeType":"Return","src":"31790:89:19"}]}]},"documentation":{"id":5175,"nodeType":"StructuredDocumentation","src":"31481:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5211,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:19","nodeType":"FunctionDefinition","parameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5177,"mutability":"mutable","name":"value","nameLocation":"31654:5:19","nodeType":"VariableDeclaration","scope":5211,"src":"31646:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5176,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5180,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:19","nodeType":"VariableDeclaration","scope":5211,"src":"31661:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":5179,"nodeType":"UserDefinedTypeName","pathNode":{"id":5178,"name":"Rounding","nameLocations":["31661:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"31661:8:19"},"referencedDeclaration":3622,"src":"31661:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:19"},"returnParameters":{"id":5184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5211,"src":"31703:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5182,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:19"},"scope":5231,"src":"31630:266:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5229,"nodeType":"Block","src":"32094:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5222,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"32117:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":5221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5220,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:19","typeDescriptions":{}}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5219,"id":5228,"nodeType":"Return","src":"32104:31:19"}]},"documentation":{"id":5212,"nodeType":"StructuredDocumentation","src":"31902:113:19","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5230,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:19","nodeType":"FunctionDefinition","parameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5215,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:19","nodeType":"VariableDeclaration","scope":5230,"src":"32046:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":5214,"nodeType":"UserDefinedTypeName","pathNode":{"id":5213,"name":"Rounding","nameLocations":["32046:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"32046:8:19"},"referencedDeclaration":3622,"src":"32046:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:19"},"returnParameters":{"id":5219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5230,"src":"32088:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5217,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:19"},"scope":5231,"src":"32020:122:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5232,"src":"281:31863:19","usedErrors":[],"usedEvents":[]}],"src":"103:32042:19"},"id":19},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6996]},"id":6997,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5233,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5234,"nodeType":"StructuredDocumentation","src":"218:550:20","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6996,"linearizedBaseContracts":[6996],"name":"SafeCast","nameLocation":"777:8:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5235,"nodeType":"StructuredDocumentation","src":"792:68:20","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5241,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:20","nodeType":"ErrorDefinition","parameters":{"id":5240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5237,"mutability":"mutable","name":"bits","nameLocation":"908:4:20","nodeType":"VariableDeclaration","scope":5241,"src":"902:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5236,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5239,"mutability":"mutable","name":"value","nameLocation":"922:5:20","nodeType":"VariableDeclaration","scope":5241,"src":"914:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5238,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:20"},"src":"865:64:20"},{"documentation":{"id":5242,"nodeType":"StructuredDocumentation","src":"935:75:20","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5246,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:20","nodeType":"ErrorDefinition","parameters":{"id":5245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"value","nameLocation":"1056:5:20","nodeType":"VariableDeclaration","scope":5246,"src":"1049:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5243,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:20"},"src":"1015:48:20"},{"documentation":{"id":5247,"nodeType":"StructuredDocumentation","src":"1069:67:20","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5253,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:20","nodeType":"ErrorDefinition","parameters":{"id":5252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"bits","nameLocation":"1183:4:20","nodeType":"VariableDeclaration","scope":5253,"src":"1177:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5248,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5251,"mutability":"mutable","name":"value","nameLocation":"1196:5:20","nodeType":"VariableDeclaration","scope":5253,"src":"1189:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5250,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:20"},"src":"1141:62:20"},{"documentation":{"id":5254,"nodeType":"StructuredDocumentation","src":"1209:75:20","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5258,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:20","nodeType":"ErrorDefinition","parameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"value","nameLocation":"1331:5:20","nodeType":"VariableDeclaration","scope":5258,"src":"1323:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:20"},"src":"1289:49:20"},{"body":{"id":5285,"nodeType":"Block","src":"1695:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"1709:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5268,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5267,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:20","memberName":"max","nodeType":"MemberAccess","src":"1717:17:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5279,"nodeType":"IfStatement","src":"1705:105:20","trueBody":{"id":5278,"nodeType":"Block","src":"1736:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"1793:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5273,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"1757:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5277,"nodeType":"RevertStatement","src":"1750:49:20"}]}},{"expression":{"arguments":[{"id":5282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"1834:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5280,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:20","typeDescriptions":{}}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5265,"id":5284,"nodeType":"Return","src":"1819:21:20"}]},"documentation":{"id":5259,"nodeType":"StructuredDocumentation","src":"1344:280:20","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5286,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:20","nodeType":"FunctionDefinition","parameters":{"id":5262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5261,"mutability":"mutable","name":"value","nameLocation":"1656:5:20","nodeType":"VariableDeclaration","scope":5286,"src":"1648:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5260,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:20"},"returnParameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5286,"src":"1686:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5263,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:20"},"scope":6996,"src":"1629:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5313,"nodeType":"Block","src":"2204:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"2218:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5296,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5295,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:20","memberName":"max","nodeType":"MemberAccess","src":"2226:17:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5307,"nodeType":"IfStatement","src":"2214:105:20","trueBody":{"id":5306,"nodeType":"Block","src":"2245:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"2302:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5301,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"2266:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5305,"nodeType":"RevertStatement","src":"2259:49:20"}]}},{"expression":{"arguments":[{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"2343:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5308,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:20","typeDescriptions":{}}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5293,"id":5312,"nodeType":"Return","src":"2328:21:20"}]},"documentation":{"id":5287,"nodeType":"StructuredDocumentation","src":"1853:280:20","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5314,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:20","nodeType":"FunctionDefinition","parameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5289,"mutability":"mutable","name":"value","nameLocation":"2165:5:20","nodeType":"VariableDeclaration","scope":5314,"src":"2157:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5288,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:20"},"returnParameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5314,"src":"2195:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5291,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:20"},"scope":6996,"src":"2138:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5341,"nodeType":"Block","src":"2713:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"2727:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5324,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5323,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:20","memberName":"max","nodeType":"MemberAccess","src":"2735:17:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5335,"nodeType":"IfStatement","src":"2723:105:20","trueBody":{"id":5334,"nodeType":"Block","src":"2754:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"2811:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5329,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"2775:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5333,"nodeType":"RevertStatement","src":"2768:49:20"}]}},{"expression":{"arguments":[{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"2852:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5336,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:20","typeDescriptions":{}}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5321,"id":5340,"nodeType":"Return","src":"2837:21:20"}]},"documentation":{"id":5315,"nodeType":"StructuredDocumentation","src":"2362:280:20","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5342,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:20","nodeType":"FunctionDefinition","parameters":{"id":5318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5317,"mutability":"mutable","name":"value","nameLocation":"2674:5:20","nodeType":"VariableDeclaration","scope":5342,"src":"2666:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5316,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:20"},"returnParameters":{"id":5321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5342,"src":"2704:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5319,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:20"},"scope":6996,"src":"2647:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5369,"nodeType":"Block","src":"3222:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"3236:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5352,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5351,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:20","memberName":"max","nodeType":"MemberAccess","src":"3244:17:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5363,"nodeType":"IfStatement","src":"3232:105:20","trueBody":{"id":5362,"nodeType":"Block","src":"3263:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"3320:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5357,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"3284:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5361,"nodeType":"RevertStatement","src":"3277:49:20"}]}},{"expression":{"arguments":[{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"3361:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5364,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:20","typeDescriptions":{}}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5349,"id":5368,"nodeType":"Return","src":"3346:21:20"}]},"documentation":{"id":5343,"nodeType":"StructuredDocumentation","src":"2871:280:20","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5370,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:20","nodeType":"FunctionDefinition","parameters":{"id":5346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5345,"mutability":"mutable","name":"value","nameLocation":"3183:5:20","nodeType":"VariableDeclaration","scope":5370,"src":"3175:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5344,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:20"},"returnParameters":{"id":5349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5370,"src":"3213:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5347,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:20"},"scope":6996,"src":"3156:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5397,"nodeType":"Block","src":"3731:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"3745:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5380,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5379,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:20","memberName":"max","nodeType":"MemberAccess","src":"3753:17:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5391,"nodeType":"IfStatement","src":"3741:105:20","trueBody":{"id":5390,"nodeType":"Block","src":"3772:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"3829:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5385,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"3793:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5389,"nodeType":"RevertStatement","src":"3786:49:20"}]}},{"expression":{"arguments":[{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"3870:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5392,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:20","typeDescriptions":{}}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5377,"id":5396,"nodeType":"Return","src":"3855:21:20"}]},"documentation":{"id":5371,"nodeType":"StructuredDocumentation","src":"3380:280:20","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5398,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:20","nodeType":"FunctionDefinition","parameters":{"id":5374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5373,"mutability":"mutable","name":"value","nameLocation":"3692:5:20","nodeType":"VariableDeclaration","scope":5398,"src":"3684:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5372,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:20"},"returnParameters":{"id":5377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5398,"src":"3722:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5375,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:20"},"scope":6996,"src":"3665:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5425,"nodeType":"Block","src":"4240:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"4254:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5408,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5407,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:20","memberName":"max","nodeType":"MemberAccess","src":"4262:17:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5419,"nodeType":"IfStatement","src":"4250:105:20","trueBody":{"id":5418,"nodeType":"Block","src":"4281:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"4338:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5413,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"4302:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5417,"nodeType":"RevertStatement","src":"4295:49:20"}]}},{"expression":{"arguments":[{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"4379:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5420,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:20","typeDescriptions":{}}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5405,"id":5424,"nodeType":"Return","src":"4364:21:20"}]},"documentation":{"id":5399,"nodeType":"StructuredDocumentation","src":"3889:280:20","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5426,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:20","nodeType":"FunctionDefinition","parameters":{"id":5402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5401,"mutability":"mutable","name":"value","nameLocation":"4201:5:20","nodeType":"VariableDeclaration","scope":5426,"src":"4193:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5400,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:20"},"returnParameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5426,"src":"4231:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5403,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:20"},"scope":6996,"src":"4174:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5453,"nodeType":"Block","src":"4749:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"4763:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5436,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5435,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:20","memberName":"max","nodeType":"MemberAccess","src":"4771:17:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5447,"nodeType":"IfStatement","src":"4759:105:20","trueBody":{"id":5446,"nodeType":"Block","src":"4790:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"4847:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5441,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"4811:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5445,"nodeType":"RevertStatement","src":"4804:49:20"}]}},{"expression":{"arguments":[{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"4888:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5448,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:20","typeDescriptions":{}}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5433,"id":5452,"nodeType":"Return","src":"4873:21:20"}]},"documentation":{"id":5427,"nodeType":"StructuredDocumentation","src":"4398:280:20","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5454,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:20","nodeType":"FunctionDefinition","parameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"value","nameLocation":"4710:5:20","nodeType":"VariableDeclaration","scope":5454,"src":"4702:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5428,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:20"},"returnParameters":{"id":5433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5454,"src":"4740:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5431,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:20"},"scope":6996,"src":"4683:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5481,"nodeType":"Block","src":"5258:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"5272:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5464,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5463,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:20","memberName":"max","nodeType":"MemberAccess","src":"5280:17:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5475,"nodeType":"IfStatement","src":"5268:105:20","trueBody":{"id":5474,"nodeType":"Block","src":"5299:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"5356:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5469,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"5320:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5473,"nodeType":"RevertStatement","src":"5313:49:20"}]}},{"expression":{"arguments":[{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"5397:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5476,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:20","typeDescriptions":{}}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5461,"id":5480,"nodeType":"Return","src":"5382:21:20"}]},"documentation":{"id":5455,"nodeType":"StructuredDocumentation","src":"4907:280:20","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5482,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:20","nodeType":"FunctionDefinition","parameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"value","nameLocation":"5219:5:20","nodeType":"VariableDeclaration","scope":5482,"src":"5211:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:20"},"returnParameters":{"id":5461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5482,"src":"5249:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5459,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:20"},"scope":6996,"src":"5192:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5509,"nodeType":"Block","src":"5767:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"5781:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5492,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5491,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:20","memberName":"max","nodeType":"MemberAccess","src":"5789:17:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5503,"nodeType":"IfStatement","src":"5777:105:20","trueBody":{"id":5502,"nodeType":"Block","src":"5808:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"5865:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5497,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"5829:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5501,"nodeType":"RevertStatement","src":"5822:49:20"}]}},{"expression":{"arguments":[{"id":5506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"5906:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5504,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:20","typeDescriptions":{}}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5489,"id":5508,"nodeType":"Return","src":"5891:21:20"}]},"documentation":{"id":5483,"nodeType":"StructuredDocumentation","src":"5416:280:20","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5510,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:20","nodeType":"FunctionDefinition","parameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5485,"mutability":"mutable","name":"value","nameLocation":"5728:5:20","nodeType":"VariableDeclaration","scope":5510,"src":"5720:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:20"},"returnParameters":{"id":5489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5510,"src":"5758:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5487,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:20"},"scope":6996,"src":"5701:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5537,"nodeType":"Block","src":"6276:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"6290:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5520,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5519,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:20","memberName":"max","nodeType":"MemberAccess","src":"6298:17:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5531,"nodeType":"IfStatement","src":"6286:105:20","trueBody":{"id":5530,"nodeType":"Block","src":"6317:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"6374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5525,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"6338:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5529,"nodeType":"RevertStatement","src":"6331:49:20"}]}},{"expression":{"arguments":[{"id":5534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"6415:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5532,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:20","typeDescriptions":{}}},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5517,"id":5536,"nodeType":"Return","src":"6400:21:20"}]},"documentation":{"id":5511,"nodeType":"StructuredDocumentation","src":"5925:280:20","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5538,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:20","nodeType":"FunctionDefinition","parameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5513,"mutability":"mutable","name":"value","nameLocation":"6237:5:20","nodeType":"VariableDeclaration","scope":5538,"src":"6229:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5512,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:20"},"returnParameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5538,"src":"6267:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5515,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:20"},"scope":6996,"src":"6210:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5565,"nodeType":"Block","src":"6785:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"6799:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5548,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5547,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:20","memberName":"max","nodeType":"MemberAccess","src":"6807:17:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5559,"nodeType":"IfStatement","src":"6795:105:20","trueBody":{"id":5558,"nodeType":"Block","src":"6826:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"6883:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5553,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"6847:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5557,"nodeType":"RevertStatement","src":"6840:49:20"}]}},{"expression":{"arguments":[{"id":5562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"6924:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5560,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:20","typeDescriptions":{}}},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5545,"id":5564,"nodeType":"Return","src":"6909:21:20"}]},"documentation":{"id":5539,"nodeType":"StructuredDocumentation","src":"6434:280:20","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5566,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:20","nodeType":"FunctionDefinition","parameters":{"id":5542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5541,"mutability":"mutable","name":"value","nameLocation":"6746:5:20","nodeType":"VariableDeclaration","scope":5566,"src":"6738:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5540,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:20"},"returnParameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5566,"src":"6776:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5543,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:20"},"scope":6996,"src":"6719:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5593,"nodeType":"Block","src":"7294:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"7308:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5576,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5575,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:20","memberName":"max","nodeType":"MemberAccess","src":"7316:17:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5587,"nodeType":"IfStatement","src":"7304:105:20","trueBody":{"id":5586,"nodeType":"Block","src":"7335:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"7392:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5581,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"7356:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5585,"nodeType":"RevertStatement","src":"7349:49:20"}]}},{"expression":{"arguments":[{"id":5590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"7433:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5588,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:20","typeDescriptions":{}}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5573,"id":5592,"nodeType":"Return","src":"7418:21:20"}]},"documentation":{"id":5567,"nodeType":"StructuredDocumentation","src":"6943:280:20","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5594,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:20","nodeType":"FunctionDefinition","parameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5569,"mutability":"mutable","name":"value","nameLocation":"7255:5:20","nodeType":"VariableDeclaration","scope":5594,"src":"7247:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5568,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:20"},"returnParameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5594,"src":"7285:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5571,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:20"},"scope":6996,"src":"7228:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5621,"nodeType":"Block","src":"7803:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"7817:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5604,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5603,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:20","memberName":"max","nodeType":"MemberAccess","src":"7825:17:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5615,"nodeType":"IfStatement","src":"7813:105:20","trueBody":{"id":5614,"nodeType":"Block","src":"7844:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"7901:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5609,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"7865:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5613,"nodeType":"RevertStatement","src":"7858:49:20"}]}},{"expression":{"arguments":[{"id":5618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"7942:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5616,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:20","typeDescriptions":{}}},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5601,"id":5620,"nodeType":"Return","src":"7927:21:20"}]},"documentation":{"id":5595,"nodeType":"StructuredDocumentation","src":"7452:280:20","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5622,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:20","nodeType":"FunctionDefinition","parameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"value","nameLocation":"7764:5:20","nodeType":"VariableDeclaration","scope":5622,"src":"7756:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5596,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:20"},"returnParameters":{"id":5601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5622,"src":"7794:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5599,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:20"},"scope":6996,"src":"7737:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5649,"nodeType":"Block","src":"8312:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"8326:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5632,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5631,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:20","memberName":"max","nodeType":"MemberAccess","src":"8334:17:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5643,"nodeType":"IfStatement","src":"8322:105:20","trueBody":{"id":5642,"nodeType":"Block","src":"8353:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"8410:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5637,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"8374:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5641,"nodeType":"RevertStatement","src":"8367:49:20"}]}},{"expression":{"arguments":[{"id":5646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"8451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5644,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:20","typeDescriptions":{}}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5629,"id":5648,"nodeType":"Return","src":"8436:21:20"}]},"documentation":{"id":5623,"nodeType":"StructuredDocumentation","src":"7961:280:20","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5650,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:20","nodeType":"FunctionDefinition","parameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5625,"mutability":"mutable","name":"value","nameLocation":"8273:5:20","nodeType":"VariableDeclaration","scope":5650,"src":"8265:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5624,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:20"},"returnParameters":{"id":5629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5650,"src":"8303:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5627,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:20"},"scope":6996,"src":"8246:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5677,"nodeType":"Block","src":"8821:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"8835:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5660,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5659,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:20","memberName":"max","nodeType":"MemberAccess","src":"8843:17:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5671,"nodeType":"IfStatement","src":"8831:105:20","trueBody":{"id":5670,"nodeType":"Block","src":"8862:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"8919:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5665,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"8883:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5669,"nodeType":"RevertStatement","src":"8876:49:20"}]}},{"expression":{"arguments":[{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"8960:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5672,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:20","typeDescriptions":{}}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5657,"id":5676,"nodeType":"Return","src":"8945:21:20"}]},"documentation":{"id":5651,"nodeType":"StructuredDocumentation","src":"8470:280:20","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5678,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:20","nodeType":"FunctionDefinition","parameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5653,"mutability":"mutable","name":"value","nameLocation":"8782:5:20","nodeType":"VariableDeclaration","scope":5678,"src":"8774:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5652,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:20"},"returnParameters":{"id":5657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5678,"src":"8812:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5655,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:20"},"scope":6996,"src":"8755:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5705,"nodeType":"Block","src":"9330:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"9344:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5688,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5687,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:20","memberName":"max","nodeType":"MemberAccess","src":"9352:17:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5699,"nodeType":"IfStatement","src":"9340:105:20","trueBody":{"id":5698,"nodeType":"Block","src":"9371:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"9428:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5693,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"9392:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5697,"nodeType":"RevertStatement","src":"9385:49:20"}]}},{"expression":{"arguments":[{"id":5702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"9469:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5700,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:20","typeDescriptions":{}}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5685,"id":5704,"nodeType":"Return","src":"9454:21:20"}]},"documentation":{"id":5679,"nodeType":"StructuredDocumentation","src":"8979:280:20","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5706,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:20","nodeType":"FunctionDefinition","parameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"value","nameLocation":"9291:5:20","nodeType":"VariableDeclaration","scope":5706,"src":"9283:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5680,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:20"},"returnParameters":{"id":5685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5706,"src":"9321:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5683,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:20"},"scope":6996,"src":"9264:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5733,"nodeType":"Block","src":"9839:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"9853:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5716,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5715,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:20","memberName":"max","nodeType":"MemberAccess","src":"9861:17:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5727,"nodeType":"IfStatement","src":"9849:105:20","trueBody":{"id":5726,"nodeType":"Block","src":"9880:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"9937:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5721,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"9901:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5725,"nodeType":"RevertStatement","src":"9894:49:20"}]}},{"expression":{"arguments":[{"id":5730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"9978:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5728,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:20","typeDescriptions":{}}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5713,"id":5732,"nodeType":"Return","src":"9963:21:20"}]},"documentation":{"id":5707,"nodeType":"StructuredDocumentation","src":"9488:280:20","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5734,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:20","nodeType":"FunctionDefinition","parameters":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"value","nameLocation":"9800:5:20","nodeType":"VariableDeclaration","scope":5734,"src":"9792:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5708,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:20"},"returnParameters":{"id":5713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5734,"src":"9830:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5711,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:20"},"scope":6996,"src":"9773:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5761,"nodeType":"Block","src":"10348:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"10362:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5744,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5743,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:20","memberName":"max","nodeType":"MemberAccess","src":"10370:17:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5755,"nodeType":"IfStatement","src":"10358:105:20","trueBody":{"id":5754,"nodeType":"Block","src":"10389:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"10446:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5749,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"10410:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5753,"nodeType":"RevertStatement","src":"10403:49:20"}]}},{"expression":{"arguments":[{"id":5758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"10487:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5756,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:20","typeDescriptions":{}}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5741,"id":5760,"nodeType":"Return","src":"10472:21:20"}]},"documentation":{"id":5735,"nodeType":"StructuredDocumentation","src":"9997:280:20","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5762,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:20","nodeType":"FunctionDefinition","parameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5737,"mutability":"mutable","name":"value","nameLocation":"10309:5:20","nodeType":"VariableDeclaration","scope":5762,"src":"10301:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5736,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:20"},"returnParameters":{"id":5741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5762,"src":"10339:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5739,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:20"},"scope":6996,"src":"10282:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5789,"nodeType":"Block","src":"10857:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5765,"src":"10871:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5772,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5771,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:20","memberName":"max","nodeType":"MemberAccess","src":"10879:17:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5783,"nodeType":"IfStatement","src":"10867:105:20","trueBody":{"id":5782,"nodeType":"Block","src":"10898:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5765,"src":"10955:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5777,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"10919:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5781,"nodeType":"RevertStatement","src":"10912:49:20"}]}},{"expression":{"arguments":[{"id":5786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5765,"src":"10996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5784,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:20","typeDescriptions":{}}},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5769,"id":5788,"nodeType":"Return","src":"10981:21:20"}]},"documentation":{"id":5763,"nodeType":"StructuredDocumentation","src":"10506:280:20","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5790,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:20","nodeType":"FunctionDefinition","parameters":{"id":5766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5765,"mutability":"mutable","name":"value","nameLocation":"10818:5:20","nodeType":"VariableDeclaration","scope":5790,"src":"10810:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5764,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:20"},"returnParameters":{"id":5769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5790,"src":"10848:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5767,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:20"},"scope":6996,"src":"10791:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5817,"nodeType":"Block","src":"11360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"11374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5800,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5799,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:20","memberName":"max","nodeType":"MemberAccess","src":"11382:16:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5811,"nodeType":"IfStatement","src":"11370:103:20","trueBody":{"id":5810,"nodeType":"Block","src":"11400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"11456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5805,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"11421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5809,"nodeType":"RevertStatement","src":"11414:48:20"}]}},{"expression":{"arguments":[{"id":5814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"11496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5812,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:20","typeDescriptions":{}}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5797,"id":5816,"nodeType":"Return","src":"11482:20:20"}]},"documentation":{"id":5791,"nodeType":"StructuredDocumentation","src":"11015:276:20","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5818,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5793,"mutability":"mutable","name":"value","nameLocation":"11322:5:20","nodeType":"VariableDeclaration","scope":5818,"src":"11314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5792,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:20"},"returnParameters":{"id":5797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5818,"src":"11352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5795,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:20"},"scope":6996,"src":"11296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5845,"nodeType":"Block","src":"11860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"11874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5828,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5827,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:20","memberName":"max","nodeType":"MemberAccess","src":"11882:16:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5839,"nodeType":"IfStatement","src":"11870:103:20","trueBody":{"id":5838,"nodeType":"Block","src":"11900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"11956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5833,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"11921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5837,"nodeType":"RevertStatement","src":"11914:48:20"}]}},{"expression":{"arguments":[{"id":5842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"11996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5840,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:20","typeDescriptions":{}}},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5825,"id":5844,"nodeType":"Return","src":"11982:20:20"}]},"documentation":{"id":5819,"nodeType":"StructuredDocumentation","src":"11515:276:20","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5846,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5821,"mutability":"mutable","name":"value","nameLocation":"11822:5:20","nodeType":"VariableDeclaration","scope":5846,"src":"11814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5820,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:20"},"returnParameters":{"id":5825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5846,"src":"11852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5823,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:20"},"scope":6996,"src":"11796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5873,"nodeType":"Block","src":"12360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"12374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5856,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5855,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:20","memberName":"max","nodeType":"MemberAccess","src":"12382:16:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5867,"nodeType":"IfStatement","src":"12370:103:20","trueBody":{"id":5866,"nodeType":"Block","src":"12400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"12456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5861,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"12421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5865,"nodeType":"RevertStatement","src":"12414:48:20"}]}},{"expression":{"arguments":[{"id":5870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"12496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5868,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:20","typeDescriptions":{}}},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5853,"id":5872,"nodeType":"Return","src":"12482:20:20"}]},"documentation":{"id":5847,"nodeType":"StructuredDocumentation","src":"12015:276:20","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5874,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5849,"mutability":"mutable","name":"value","nameLocation":"12322:5:20","nodeType":"VariableDeclaration","scope":5874,"src":"12314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5848,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:20"},"returnParameters":{"id":5853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5874,"src":"12352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5851,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:20"},"scope":6996,"src":"12296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5901,"nodeType":"Block","src":"12860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"12874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5884,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5883,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:20","memberName":"max","nodeType":"MemberAccess","src":"12882:16:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5895,"nodeType":"IfStatement","src":"12870:103:20","trueBody":{"id":5894,"nodeType":"Block","src":"12900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"12956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5889,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"12921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5893,"nodeType":"RevertStatement","src":"12914:48:20"}]}},{"expression":{"arguments":[{"id":5898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"12996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5896,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:20","typeDescriptions":{}}},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5881,"id":5900,"nodeType":"Return","src":"12982:20:20"}]},"documentation":{"id":5875,"nodeType":"StructuredDocumentation","src":"12515:276:20","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5902,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"value","nameLocation":"12822:5:20","nodeType":"VariableDeclaration","scope":5902,"src":"12814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5876,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:20"},"returnParameters":{"id":5881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5902,"src":"12852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5879,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:20"},"scope":6996,"src":"12796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5929,"nodeType":"Block","src":"13360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"13374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5912,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5911,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:20","memberName":"max","nodeType":"MemberAccess","src":"13382:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5923,"nodeType":"IfStatement","src":"13370:103:20","trueBody":{"id":5922,"nodeType":"Block","src":"13400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"13456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5917,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"13421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5921,"nodeType":"RevertStatement","src":"13414:48:20"}]}},{"expression":{"arguments":[{"id":5926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"13496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5924,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:20","typeDescriptions":{}}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5909,"id":5928,"nodeType":"Return","src":"13482:20:20"}]},"documentation":{"id":5903,"nodeType":"StructuredDocumentation","src":"13015:276:20","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5930,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"value","nameLocation":"13322:5:20","nodeType":"VariableDeclaration","scope":5930,"src":"13314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5904,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:20"},"returnParameters":{"id":5909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5930,"src":"13352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5907,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:20"},"scope":6996,"src":"13296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5957,"nodeType":"Block","src":"13860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"13874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5940,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5939,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:20","memberName":"max","nodeType":"MemberAccess","src":"13882:16:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5951,"nodeType":"IfStatement","src":"13870:103:20","trueBody":{"id":5950,"nodeType":"Block","src":"13900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"13956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5945,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"13921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5949,"nodeType":"RevertStatement","src":"13914:48:20"}]}},{"expression":{"arguments":[{"id":5954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"13996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5952,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:20","typeDescriptions":{}}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5937,"id":5956,"nodeType":"Return","src":"13982:20:20"}]},"documentation":{"id":5931,"nodeType":"StructuredDocumentation","src":"13515:276:20","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5958,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"value","nameLocation":"13822:5:20","nodeType":"VariableDeclaration","scope":5958,"src":"13814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5932,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:20"},"returnParameters":{"id":5937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5958,"src":"13852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5935,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:20"},"scope":6996,"src":"13796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5985,"nodeType":"Block","src":"14360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"14374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5968,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5967,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:20","memberName":"max","nodeType":"MemberAccess","src":"14382:16:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5979,"nodeType":"IfStatement","src":"14370:103:20","trueBody":{"id":5978,"nodeType":"Block","src":"14400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"14456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5973,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"14421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5977,"nodeType":"RevertStatement","src":"14414:48:20"}]}},{"expression":{"arguments":[{"id":5982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"14496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5980,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:20","typeDescriptions":{}}},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5965,"id":5984,"nodeType":"Return","src":"14482:20:20"}]},"documentation":{"id":5959,"nodeType":"StructuredDocumentation","src":"14015:276:20","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5986,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"value","nameLocation":"14322:5:20","nodeType":"VariableDeclaration","scope":5986,"src":"14314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5960,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:20"},"returnParameters":{"id":5965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5986,"src":"14352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5963,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:20"},"scope":6996,"src":"14296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6013,"nodeType":"Block","src":"14860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"14874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5996,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5995,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:20","memberName":"max","nodeType":"MemberAccess","src":"14882:16:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6007,"nodeType":"IfStatement","src":"14870:103:20","trueBody":{"id":6006,"nodeType":"Block","src":"14900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"14956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6001,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"14921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6005,"nodeType":"RevertStatement","src":"14914:48:20"}]}},{"expression":{"arguments":[{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"14996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6008,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:20","typeDescriptions":{}}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5993,"id":6012,"nodeType":"Return","src":"14982:20:20"}]},"documentation":{"id":5987,"nodeType":"StructuredDocumentation","src":"14515:276:20","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6014,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"value","nameLocation":"14822:5:20","nodeType":"VariableDeclaration","scope":6014,"src":"14814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5988,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:20"},"returnParameters":{"id":5993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6014,"src":"14852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5991,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:20"},"scope":6996,"src":"14796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6041,"nodeType":"Block","src":"15360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"15374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6024,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6023,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:20","memberName":"max","nodeType":"MemberAccess","src":"15382:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6035,"nodeType":"IfStatement","src":"15370:103:20","trueBody":{"id":6034,"nodeType":"Block","src":"15400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"15456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6029,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"15421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6033,"nodeType":"RevertStatement","src":"15414:48:20"}]}},{"expression":{"arguments":[{"id":6038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"15496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6036,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:20","typeDescriptions":{}}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6021,"id":6040,"nodeType":"Return","src":"15482:20:20"}]},"documentation":{"id":6015,"nodeType":"StructuredDocumentation","src":"15015:276:20","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6042,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6017,"mutability":"mutable","name":"value","nameLocation":"15322:5:20","nodeType":"VariableDeclaration","scope":6042,"src":"15314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6016,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:20"},"returnParameters":{"id":6021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6042,"src":"15352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6019,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:20"},"scope":6996,"src":"15296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6069,"nodeType":"Block","src":"15860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"15874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6052,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6051,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:20","memberName":"max","nodeType":"MemberAccess","src":"15882:16:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6063,"nodeType":"IfStatement","src":"15870:103:20","trueBody":{"id":6062,"nodeType":"Block","src":"15900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"15956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6057,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"15921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6061,"nodeType":"RevertStatement","src":"15914:48:20"}]}},{"expression":{"arguments":[{"id":6066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"15996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6064,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:20","typeDescriptions":{}}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6049,"id":6068,"nodeType":"Return","src":"15982:20:20"}]},"documentation":{"id":6043,"nodeType":"StructuredDocumentation","src":"15515:276:20","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6070,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:20","nodeType":"FunctionDefinition","parameters":{"id":6046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6045,"mutability":"mutable","name":"value","nameLocation":"15822:5:20","nodeType":"VariableDeclaration","scope":6070,"src":"15814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6044,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:20"},"returnParameters":{"id":6049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6070,"src":"15852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6047,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:20"},"scope":6996,"src":"15796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6097,"nodeType":"Block","src":"16360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"16374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6080,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6079,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:20","memberName":"max","nodeType":"MemberAccess","src":"16382:16:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6091,"nodeType":"IfStatement","src":"16370:103:20","trueBody":{"id":6090,"nodeType":"Block","src":"16400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"16456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6085,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"16421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6089,"nodeType":"RevertStatement","src":"16414:48:20"}]}},{"expression":{"arguments":[{"id":6094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"16496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6092,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:20","typeDescriptions":{}}},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6077,"id":6096,"nodeType":"Return","src":"16482:20:20"}]},"documentation":{"id":6071,"nodeType":"StructuredDocumentation","src":"16015:276:20","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6098,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"mutability":"mutable","name":"value","nameLocation":"16322:5:20","nodeType":"VariableDeclaration","scope":6098,"src":"16314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6072,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:20"},"returnParameters":{"id":6077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6098,"src":"16352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6075,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:20"},"scope":6996,"src":"16296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6125,"nodeType":"Block","src":"16854:146:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"16868:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6108,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6107,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:20","memberName":"max","nodeType":"MemberAccess","src":"16876:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6119,"nodeType":"IfStatement","src":"16864:101:20","trueBody":{"id":6118,"nodeType":"Block","src":"16893:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"16948:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6113,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"16914:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6117,"nodeType":"RevertStatement","src":"16907:47:20"}]}},{"expression":{"arguments":[{"id":6122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"16987:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6120,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:20","typeDescriptions":{}}},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6105,"id":6124,"nodeType":"Return","src":"16974:19:20"}]},"documentation":{"id":6099,"nodeType":"StructuredDocumentation","src":"16515:272:20","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6126,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:20","nodeType":"FunctionDefinition","parameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"value","nameLocation":"16817:5:20","nodeType":"VariableDeclaration","scope":6126,"src":"16809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6100,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:20"},"returnParameters":{"id":6105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6126,"src":"16847:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6103,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:20"},"scope":6996,"src":"16792:208:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6148,"nodeType":"Block","src":"17236:128:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"17250:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6142,"nodeType":"IfStatement","src":"17246:81:20","trueBody":{"id":6141,"nodeType":"Block","src":"17261:66:20","statements":[{"errorCall":{"arguments":[{"id":6138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"17310:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6137,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"17282:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6140,"nodeType":"RevertStatement","src":"17275:41:20"}]}},{"expression":{"arguments":[{"id":6145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"17351:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6143,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:20","typeDescriptions":{}}},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6133,"id":6147,"nodeType":"Return","src":"17336:21:20"}]},"documentation":{"id":6127,"nodeType":"StructuredDocumentation","src":"17006:160:20","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6149,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:20","nodeType":"FunctionDefinition","parameters":{"id":6130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"value","nameLocation":"17197:5:20","nodeType":"VariableDeclaration","scope":6149,"src":"17190:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6128,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:20"},"returnParameters":{"id":6133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6149,"src":"17227:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6131,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:20"},"scope":6996,"src":"17171:193:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6174,"nodeType":"Block","src":"17761:150:20","statements":[{"expression":{"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"17771:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"17791:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6158,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:20","typeDescriptions":{}}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6163,"nodeType":"ExpressionStatement","src":"17771:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"17811:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"17825:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6173,"nodeType":"IfStatement","src":"17807:98:20","trueBody":{"id":6172,"nodeType":"Block","src":"17832:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"17888:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6167,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"17853:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6171,"nodeType":"RevertStatement","src":"17846:48:20"}]}}]},"documentation":{"id":6150,"nodeType":"StructuredDocumentation","src":"17370:312:20","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6175,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:20","nodeType":"FunctionDefinition","parameters":{"id":6153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"value","nameLocation":"17712:5:20","nodeType":"VariableDeclaration","scope":6175,"src":"17705:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6151,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:20"},"returnParameters":{"id":6156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6155,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:20","nodeType":"VariableDeclaration","scope":6175,"src":"17742:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6154,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:20"},"scope":6996,"src":"17687:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6200,"nodeType":"Block","src":"18308:150:20","statements":[{"expression":{"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"18318:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"18338:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6184,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:20","typeDescriptions":{}}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6189,"nodeType":"ExpressionStatement","src":"18318:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"18358:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"18372:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6199,"nodeType":"IfStatement","src":"18354:98:20","trueBody":{"id":6198,"nodeType":"Block","src":"18379:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"18435:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6193,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"18400:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6197,"nodeType":"RevertStatement","src":"18393:48:20"}]}}]},"documentation":{"id":6176,"nodeType":"StructuredDocumentation","src":"17917:312:20","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6201,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:20","nodeType":"FunctionDefinition","parameters":{"id":6179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6178,"mutability":"mutable","name":"value","nameLocation":"18259:5:20","nodeType":"VariableDeclaration","scope":6201,"src":"18252:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6177,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:20"},"returnParameters":{"id":6182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:20","nodeType":"VariableDeclaration","scope":6201,"src":"18289:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6180,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:20"},"scope":6996,"src":"18234:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6226,"nodeType":"Block","src":"18855:150:20","statements":[{"expression":{"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"18865:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"18885:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6210,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:20","typeDescriptions":{}}},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6215,"nodeType":"ExpressionStatement","src":"18865:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"18905:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"18919:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6225,"nodeType":"IfStatement","src":"18901:98:20","trueBody":{"id":6224,"nodeType":"Block","src":"18926:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"18982:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6219,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"18947:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6223,"nodeType":"RevertStatement","src":"18940:48:20"}]}}]},"documentation":{"id":6202,"nodeType":"StructuredDocumentation","src":"18464:312:20","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6227,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:20","nodeType":"FunctionDefinition","parameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"value","nameLocation":"18806:5:20","nodeType":"VariableDeclaration","scope":6227,"src":"18799:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6203,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:20"},"returnParameters":{"id":6208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6207,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:20","nodeType":"VariableDeclaration","scope":6227,"src":"18836:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6206,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:20"},"scope":6996,"src":"18781:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6252,"nodeType":"Block","src":"19402:150:20","statements":[{"expression":{"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"19412:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"19432:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6236,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:20","typeDescriptions":{}}},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6241,"nodeType":"ExpressionStatement","src":"19412:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"19452:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"19466:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6251,"nodeType":"IfStatement","src":"19448:98:20","trueBody":{"id":6250,"nodeType":"Block","src":"19473:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"19529:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6245,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"19494:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6249,"nodeType":"RevertStatement","src":"19487:48:20"}]}}]},"documentation":{"id":6228,"nodeType":"StructuredDocumentation","src":"19011:312:20","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6253,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:20","nodeType":"FunctionDefinition","parameters":{"id":6231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"value","nameLocation":"19353:5:20","nodeType":"VariableDeclaration","scope":6253,"src":"19346:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6229,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:20"},"returnParameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:20","nodeType":"VariableDeclaration","scope":6253,"src":"19383:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6232,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:20"},"scope":6996,"src":"19328:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6278,"nodeType":"Block","src":"19949:150:20","statements":[{"expression":{"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"19959:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"19979:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6262,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:20","typeDescriptions":{}}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6267,"nodeType":"ExpressionStatement","src":"19959:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"19999:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"20013:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6277,"nodeType":"IfStatement","src":"19995:98:20","trueBody":{"id":6276,"nodeType":"Block","src":"20020:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"20076:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6271,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"20041:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6275,"nodeType":"RevertStatement","src":"20034:48:20"}]}}]},"documentation":{"id":6254,"nodeType":"StructuredDocumentation","src":"19558:312:20","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6279,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:20","nodeType":"FunctionDefinition","parameters":{"id":6257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6256,"mutability":"mutable","name":"value","nameLocation":"19900:5:20","nodeType":"VariableDeclaration","scope":6279,"src":"19893:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6255,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:20"},"returnParameters":{"id":6260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6259,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:20","nodeType":"VariableDeclaration","scope":6279,"src":"19930:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6258,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:20"},"scope":6996,"src":"19875:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6304,"nodeType":"Block","src":"20496:150:20","statements":[{"expression":{"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"20506:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"20526:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6288,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:20","typeDescriptions":{}}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6293,"nodeType":"ExpressionStatement","src":"20506:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"20546:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"20560:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6303,"nodeType":"IfStatement","src":"20542:98:20","trueBody":{"id":6302,"nodeType":"Block","src":"20567:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"20623:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6297,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"20588:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6301,"nodeType":"RevertStatement","src":"20581:48:20"}]}}]},"documentation":{"id":6280,"nodeType":"StructuredDocumentation","src":"20105:312:20","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:20","nodeType":"FunctionDefinition","parameters":{"id":6283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6282,"mutability":"mutable","name":"value","nameLocation":"20447:5:20","nodeType":"VariableDeclaration","scope":6305,"src":"20440:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6281,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:20"},"returnParameters":{"id":6286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6285,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:20","nodeType":"VariableDeclaration","scope":6305,"src":"20477:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6284,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:20"},"scope":6996,"src":"20422:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6330,"nodeType":"Block","src":"21043:150:20","statements":[{"expression":{"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"21053:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"21073:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6314,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:20","typeDescriptions":{}}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6319,"nodeType":"ExpressionStatement","src":"21053:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"21093:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"21107:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6329,"nodeType":"IfStatement","src":"21089:98:20","trueBody":{"id":6328,"nodeType":"Block","src":"21114:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"21170:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6323,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"21135:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6327,"nodeType":"RevertStatement","src":"21128:48:20"}]}}]},"documentation":{"id":6306,"nodeType":"StructuredDocumentation","src":"20652:312:20","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6331,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:20","nodeType":"FunctionDefinition","parameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"value","nameLocation":"20994:5:20","nodeType":"VariableDeclaration","scope":6331,"src":"20987:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6307,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:20"},"returnParameters":{"id":6312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:20","nodeType":"VariableDeclaration","scope":6331,"src":"21024:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6310,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:20"},"scope":6996,"src":"20969:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6356,"nodeType":"Block","src":"21590:150:20","statements":[{"expression":{"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"21600:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"21620:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6340,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:20","typeDescriptions":{}}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6345,"nodeType":"ExpressionStatement","src":"21600:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"21640:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"21654:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6355,"nodeType":"IfStatement","src":"21636:98:20","trueBody":{"id":6354,"nodeType":"Block","src":"21661:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"21717:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6349,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"21682:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6353,"nodeType":"RevertStatement","src":"21675:48:20"}]}}]},"documentation":{"id":6332,"nodeType":"StructuredDocumentation","src":"21199:312:20","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:20","nodeType":"FunctionDefinition","parameters":{"id":6335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6334,"mutability":"mutable","name":"value","nameLocation":"21541:5:20","nodeType":"VariableDeclaration","scope":6357,"src":"21534:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6333,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:20"},"returnParameters":{"id":6338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6337,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:20","nodeType":"VariableDeclaration","scope":6357,"src":"21571:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6336,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:20"},"scope":6996,"src":"21516:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6382,"nodeType":"Block","src":"22137:150:20","statements":[{"expression":{"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"22147:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"22167:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6366,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:20","typeDescriptions":{}}},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6371,"nodeType":"ExpressionStatement","src":"22147:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"22187:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"22201:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6381,"nodeType":"IfStatement","src":"22183:98:20","trueBody":{"id":6380,"nodeType":"Block","src":"22208:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"22264:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"22229:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6379,"nodeType":"RevertStatement","src":"22222:48:20"}]}}]},"documentation":{"id":6358,"nodeType":"StructuredDocumentation","src":"21746:312:20","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:20","nodeType":"FunctionDefinition","parameters":{"id":6361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6360,"mutability":"mutable","name":"value","nameLocation":"22088:5:20","nodeType":"VariableDeclaration","scope":6383,"src":"22081:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6359,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:20"},"returnParameters":{"id":6364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6363,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:20","nodeType":"VariableDeclaration","scope":6383,"src":"22118:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6362,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:20"},"scope":6996,"src":"22063:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6408,"nodeType":"Block","src":"22684:150:20","statements":[{"expression":{"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"22694:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"22714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6392,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:20","typeDescriptions":{}}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6397,"nodeType":"ExpressionStatement","src":"22694:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"22734:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"22748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6407,"nodeType":"IfStatement","src":"22730:98:20","trueBody":{"id":6406,"nodeType":"Block","src":"22755:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"22811:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6401,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"22776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6405,"nodeType":"RevertStatement","src":"22769:48:20"}]}}]},"documentation":{"id":6384,"nodeType":"StructuredDocumentation","src":"22293:312:20","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6409,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:20","nodeType":"FunctionDefinition","parameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"value","nameLocation":"22635:5:20","nodeType":"VariableDeclaration","scope":6409,"src":"22628:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6385,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:20"},"returnParameters":{"id":6390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:20","nodeType":"VariableDeclaration","scope":6409,"src":"22665:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6388,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:20"},"scope":6996,"src":"22610:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6434,"nodeType":"Block","src":"23231:150:20","statements":[{"expression":{"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"23241:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"23261:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6418,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:20","typeDescriptions":{}}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6423,"nodeType":"ExpressionStatement","src":"23241:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"23281:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"23295:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6433,"nodeType":"IfStatement","src":"23277:98:20","trueBody":{"id":6432,"nodeType":"Block","src":"23302:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"23358:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6427,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"23323:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6431,"nodeType":"RevertStatement","src":"23316:48:20"}]}}]},"documentation":{"id":6410,"nodeType":"StructuredDocumentation","src":"22840:312:20","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:20","nodeType":"FunctionDefinition","parameters":{"id":6413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"value","nameLocation":"23182:5:20","nodeType":"VariableDeclaration","scope":6435,"src":"23175:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6411,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:20"},"returnParameters":{"id":6416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6415,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:20","nodeType":"VariableDeclaration","scope":6435,"src":"23212:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6414,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:20"},"scope":6996,"src":"23157:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6460,"nodeType":"Block","src":"23778:150:20","statements":[{"expression":{"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"23788:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"23808:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6444,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:20","typeDescriptions":{}}},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6449,"nodeType":"ExpressionStatement","src":"23788:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"23828:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"23842:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6459,"nodeType":"IfStatement","src":"23824:98:20","trueBody":{"id":6458,"nodeType":"Block","src":"23849:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"23905:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6453,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"23870:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6457,"nodeType":"RevertStatement","src":"23863:48:20"}]}}]},"documentation":{"id":6436,"nodeType":"StructuredDocumentation","src":"23387:312:20","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6461,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:20","nodeType":"FunctionDefinition","parameters":{"id":6439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"value","nameLocation":"23729:5:20","nodeType":"VariableDeclaration","scope":6461,"src":"23722:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6437,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:20"},"returnParameters":{"id":6442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6441,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:20","nodeType":"VariableDeclaration","scope":6461,"src":"23759:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6440,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:20"},"scope":6996,"src":"23704:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6486,"nodeType":"Block","src":"24325:150:20","statements":[{"expression":{"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"24335:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"24355:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6470,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:20","typeDescriptions":{}}},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6475,"nodeType":"ExpressionStatement","src":"24335:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"24375:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"24389:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6485,"nodeType":"IfStatement","src":"24371:98:20","trueBody":{"id":6484,"nodeType":"Block","src":"24396:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"24452:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6479,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"24417:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6483,"nodeType":"RevertStatement","src":"24410:48:20"}]}}]},"documentation":{"id":6462,"nodeType":"StructuredDocumentation","src":"23934:312:20","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:20","nodeType":"FunctionDefinition","parameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"value","nameLocation":"24276:5:20","nodeType":"VariableDeclaration","scope":6487,"src":"24269:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6463,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:20"},"returnParameters":{"id":6468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:20","nodeType":"VariableDeclaration","scope":6487,"src":"24306:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6466,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:20"},"scope":6996,"src":"24251:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6512,"nodeType":"Block","src":"24872:150:20","statements":[{"expression":{"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"24882:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"24902:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6496,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:20","typeDescriptions":{}}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6501,"nodeType":"ExpressionStatement","src":"24882:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"24922:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"24936:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6511,"nodeType":"IfStatement","src":"24918:98:20","trueBody":{"id":6510,"nodeType":"Block","src":"24943:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"24999:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6505,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"24964:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6509,"nodeType":"RevertStatement","src":"24957:48:20"}]}}]},"documentation":{"id":6488,"nodeType":"StructuredDocumentation","src":"24481:312:20","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:20","nodeType":"FunctionDefinition","parameters":{"id":6491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"value","nameLocation":"24823:5:20","nodeType":"VariableDeclaration","scope":6513,"src":"24816:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6489,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:20"},"returnParameters":{"id":6494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6493,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:20","nodeType":"VariableDeclaration","scope":6513,"src":"24853:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6492,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:20"},"scope":6996,"src":"24798:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6538,"nodeType":"Block","src":"25419:150:20","statements":[{"expression":{"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"25429:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"25449:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6522,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:20","typeDescriptions":{}}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6527,"nodeType":"ExpressionStatement","src":"25429:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"25469:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"25483:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6537,"nodeType":"IfStatement","src":"25465:98:20","trueBody":{"id":6536,"nodeType":"Block","src":"25490:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"25546:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6531,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"25511:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6535,"nodeType":"RevertStatement","src":"25504:48:20"}]}}]},"documentation":{"id":6514,"nodeType":"StructuredDocumentation","src":"25028:312:20","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:20","nodeType":"FunctionDefinition","parameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"value","nameLocation":"25370:5:20","nodeType":"VariableDeclaration","scope":6539,"src":"25363:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6515,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:20"},"returnParameters":{"id":6520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6519,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:20","nodeType":"VariableDeclaration","scope":6539,"src":"25400:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6518,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:20"},"scope":6996,"src":"25345:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6564,"nodeType":"Block","src":"25966:150:20","statements":[{"expression":{"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"25976:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"25996:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6548,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:20","typeDescriptions":{}}},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6553,"nodeType":"ExpressionStatement","src":"25976:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"26016:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"26030:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6563,"nodeType":"IfStatement","src":"26012:98:20","trueBody":{"id":6562,"nodeType":"Block","src":"26037:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"26093:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6557,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"26058:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6561,"nodeType":"RevertStatement","src":"26051:48:20"}]}}]},"documentation":{"id":6540,"nodeType":"StructuredDocumentation","src":"25575:312:20","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6565,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:20","nodeType":"FunctionDefinition","parameters":{"id":6543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6542,"mutability":"mutable","name":"value","nameLocation":"25917:5:20","nodeType":"VariableDeclaration","scope":6565,"src":"25910:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6541,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:20"},"returnParameters":{"id":6546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:20","nodeType":"VariableDeclaration","scope":6565,"src":"25947:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6544,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:20"},"scope":6996,"src":"25892:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6590,"nodeType":"Block","src":"26513:150:20","statements":[{"expression":{"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"26523:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"26543:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6574,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:20","typeDescriptions":{}}},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6579,"nodeType":"ExpressionStatement","src":"26523:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"26563:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"26577:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6589,"nodeType":"IfStatement","src":"26559:98:20","trueBody":{"id":6588,"nodeType":"Block","src":"26584:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"26640:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6583,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"26605:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6587,"nodeType":"RevertStatement","src":"26598:48:20"}]}}]},"documentation":{"id":6566,"nodeType":"StructuredDocumentation","src":"26122:312:20","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6591,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:20","nodeType":"FunctionDefinition","parameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"value","nameLocation":"26464:5:20","nodeType":"VariableDeclaration","scope":6591,"src":"26457:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6567,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:20"},"returnParameters":{"id":6572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6571,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:20","nodeType":"VariableDeclaration","scope":6591,"src":"26494:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6570,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:20"},"scope":6996,"src":"26439:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6616,"nodeType":"Block","src":"27060:150:20","statements":[{"expression":{"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"27070:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"27090:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6600,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:20","typeDescriptions":{}}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6605,"nodeType":"ExpressionStatement","src":"27070:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"27110:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"27124:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6615,"nodeType":"IfStatement","src":"27106:98:20","trueBody":{"id":6614,"nodeType":"Block","src":"27131:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"27187:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6609,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"27152:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6613,"nodeType":"RevertStatement","src":"27145:48:20"}]}}]},"documentation":{"id":6592,"nodeType":"StructuredDocumentation","src":"26669:312:20","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6617,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:20","nodeType":"FunctionDefinition","parameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"value","nameLocation":"27011:5:20","nodeType":"VariableDeclaration","scope":6617,"src":"27004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6593,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:20"},"returnParameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:20","nodeType":"VariableDeclaration","scope":6617,"src":"27041:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6596,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:20"},"scope":6996,"src":"26986:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6642,"nodeType":"Block","src":"27607:150:20","statements":[{"expression":{"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"27617:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"27637:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6626,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:20","typeDescriptions":{}}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6631,"nodeType":"ExpressionStatement","src":"27617:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"27657:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"27671:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6641,"nodeType":"IfStatement","src":"27653:98:20","trueBody":{"id":6640,"nodeType":"Block","src":"27678:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"27734:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6635,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"27699:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6639,"nodeType":"RevertStatement","src":"27692:48:20"}]}}]},"documentation":{"id":6618,"nodeType":"StructuredDocumentation","src":"27216:312:20","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6643,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:20","nodeType":"FunctionDefinition","parameters":{"id":6621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6620,"mutability":"mutable","name":"value","nameLocation":"27558:5:20","nodeType":"VariableDeclaration","scope":6643,"src":"27551:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6619,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:20"},"returnParameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6623,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:20","nodeType":"VariableDeclaration","scope":6643,"src":"27588:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6622,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:20"},"scope":6996,"src":"27533:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6668,"nodeType":"Block","src":"28147:148:20","statements":[{"expression":{"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"28157:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"28176:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6652,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:20","typeDescriptions":{}}},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6657,"nodeType":"ExpressionStatement","src":"28157:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"28196:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"28210:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6667,"nodeType":"IfStatement","src":"28192:97:20","trueBody":{"id":6666,"nodeType":"Block","src":"28217:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"28272:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6661,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"28238:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6665,"nodeType":"RevertStatement","src":"28231:47:20"}]}}]},"documentation":{"id":6644,"nodeType":"StructuredDocumentation","src":"27763:307:20","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6669,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:20","nodeType":"FunctionDefinition","parameters":{"id":6647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6646,"mutability":"mutable","name":"value","nameLocation":"28099:5:20","nodeType":"VariableDeclaration","scope":6669,"src":"28092:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6645,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:20"},"returnParameters":{"id":6650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6649,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:20","nodeType":"VariableDeclaration","scope":6669,"src":"28129:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6648,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:20"},"scope":6996,"src":"28075:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6694,"nodeType":"Block","src":"28685:148:20","statements":[{"expression":{"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"28695:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"28714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6678,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:20","typeDescriptions":{}}},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6683,"nodeType":"ExpressionStatement","src":"28695:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6684,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"28734:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"28748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6693,"nodeType":"IfStatement","src":"28730:97:20","trueBody":{"id":6692,"nodeType":"Block","src":"28755:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"28810:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6687,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"28776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6691,"nodeType":"RevertStatement","src":"28769:47:20"}]}}]},"documentation":{"id":6670,"nodeType":"StructuredDocumentation","src":"28301:307:20","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6695,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:20","nodeType":"FunctionDefinition","parameters":{"id":6673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6672,"mutability":"mutable","name":"value","nameLocation":"28637:5:20","nodeType":"VariableDeclaration","scope":6695,"src":"28630:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6671,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:20"},"returnParameters":{"id":6676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6675,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:20","nodeType":"VariableDeclaration","scope":6695,"src":"28667:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6674,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:20"},"scope":6996,"src":"28613:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6720,"nodeType":"Block","src":"29223:148:20","statements":[{"expression":{"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"29233:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"29252:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6704,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:20","typeDescriptions":{}}},"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6709,"nodeType":"ExpressionStatement","src":"29233:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"29272:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"29286:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6719,"nodeType":"IfStatement","src":"29268:97:20","trueBody":{"id":6718,"nodeType":"Block","src":"29293:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"29348:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6713,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"29314:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6717,"nodeType":"RevertStatement","src":"29307:47:20"}]}}]},"documentation":{"id":6696,"nodeType":"StructuredDocumentation","src":"28839:307:20","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6721,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:20","nodeType":"FunctionDefinition","parameters":{"id":6699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6698,"mutability":"mutable","name":"value","nameLocation":"29175:5:20","nodeType":"VariableDeclaration","scope":6721,"src":"29168:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6697,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:20"},"returnParameters":{"id":6702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6701,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:20","nodeType":"VariableDeclaration","scope":6721,"src":"29205:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6700,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:20"},"scope":6996,"src":"29151:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6746,"nodeType":"Block","src":"29761:148:20","statements":[{"expression":{"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"29771:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"29790:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6730,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:20","typeDescriptions":{}}},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6735,"nodeType":"ExpressionStatement","src":"29771:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6736,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"29810:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"29824:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6745,"nodeType":"IfStatement","src":"29806:97:20","trueBody":{"id":6744,"nodeType":"Block","src":"29831:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"29886:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6739,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"29852:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6743,"nodeType":"RevertStatement","src":"29845:47:20"}]}}]},"documentation":{"id":6722,"nodeType":"StructuredDocumentation","src":"29377:307:20","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6747,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:20","nodeType":"FunctionDefinition","parameters":{"id":6725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6724,"mutability":"mutable","name":"value","nameLocation":"29713:5:20","nodeType":"VariableDeclaration","scope":6747,"src":"29706:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6723,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:20"},"returnParameters":{"id":6728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6727,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:20","nodeType":"VariableDeclaration","scope":6747,"src":"29743:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6726,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:20"},"scope":6996,"src":"29689:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6772,"nodeType":"Block","src":"30299:148:20","statements":[{"expression":{"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"30309:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"30328:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6756,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:20","typeDescriptions":{}}},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6761,"nodeType":"ExpressionStatement","src":"30309:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6762,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"30348:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"30362:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6771,"nodeType":"IfStatement","src":"30344:97:20","trueBody":{"id":6770,"nodeType":"Block","src":"30369:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"30424:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6765,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"30390:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6769,"nodeType":"RevertStatement","src":"30383:47:20"}]}}]},"documentation":{"id":6748,"nodeType":"StructuredDocumentation","src":"29915:307:20","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6773,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:20","nodeType":"FunctionDefinition","parameters":{"id":6751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6750,"mutability":"mutable","name":"value","nameLocation":"30251:5:20","nodeType":"VariableDeclaration","scope":6773,"src":"30244:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6749,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:20"},"returnParameters":{"id":6754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6753,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:20","nodeType":"VariableDeclaration","scope":6773,"src":"30281:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6752,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:20"},"scope":6996,"src":"30227:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6798,"nodeType":"Block","src":"30837:148:20","statements":[{"expression":{"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"30847:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"30866:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6782,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:20","typeDescriptions":{}}},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6787,"nodeType":"ExpressionStatement","src":"30847:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6788,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"30886:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"30900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6797,"nodeType":"IfStatement","src":"30882:97:20","trueBody":{"id":6796,"nodeType":"Block","src":"30907:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"30962:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6791,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"30928:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6795,"nodeType":"RevertStatement","src":"30921:47:20"}]}}]},"documentation":{"id":6774,"nodeType":"StructuredDocumentation","src":"30453:307:20","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6799,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:20","nodeType":"FunctionDefinition","parameters":{"id":6777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6776,"mutability":"mutable","name":"value","nameLocation":"30789:5:20","nodeType":"VariableDeclaration","scope":6799,"src":"30782:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6775,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:20"},"returnParameters":{"id":6780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6779,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:20","nodeType":"VariableDeclaration","scope":6799,"src":"30819:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6778,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:20"},"scope":6996,"src":"30765:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6824,"nodeType":"Block","src":"31375:148:20","statements":[{"expression":{"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"31385:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"31404:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6808,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:20","typeDescriptions":{}}},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6813,"nodeType":"ExpressionStatement","src":"31385:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6814,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"31424:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"31438:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6823,"nodeType":"IfStatement","src":"31420:97:20","trueBody":{"id":6822,"nodeType":"Block","src":"31445:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"31500:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6817,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"31466:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6821,"nodeType":"RevertStatement","src":"31459:47:20"}]}}]},"documentation":{"id":6800,"nodeType":"StructuredDocumentation","src":"30991:307:20","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6825,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:20","nodeType":"FunctionDefinition","parameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6802,"mutability":"mutable","name":"value","nameLocation":"31327:5:20","nodeType":"VariableDeclaration","scope":6825,"src":"31320:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6801,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:20"},"returnParameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:20","nodeType":"VariableDeclaration","scope":6825,"src":"31357:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6804,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:20"},"scope":6996,"src":"31303:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6850,"nodeType":"Block","src":"31913:148:20","statements":[{"expression":{"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"31923:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"31942:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6834,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:20","typeDescriptions":{}}},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6839,"nodeType":"ExpressionStatement","src":"31923:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6840,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"31962:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"31976:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6849,"nodeType":"IfStatement","src":"31958:97:20","trueBody":{"id":6848,"nodeType":"Block","src":"31983:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"32038:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6843,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"32004:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6847,"nodeType":"RevertStatement","src":"31997:47:20"}]}}]},"documentation":{"id":6826,"nodeType":"StructuredDocumentation","src":"31529:307:20","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6851,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:20","nodeType":"FunctionDefinition","parameters":{"id":6829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6828,"mutability":"mutable","name":"value","nameLocation":"31865:5:20","nodeType":"VariableDeclaration","scope":6851,"src":"31858:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6827,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:20"},"returnParameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:20","nodeType":"VariableDeclaration","scope":6851,"src":"31895:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6830,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:20"},"scope":6996,"src":"31841:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6876,"nodeType":"Block","src":"32451:148:20","statements":[{"expression":{"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"32461:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"32480:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6860,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:20","typeDescriptions":{}}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6865,"nodeType":"ExpressionStatement","src":"32461:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6866,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"32500:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"32514:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6875,"nodeType":"IfStatement","src":"32496:97:20","trueBody":{"id":6874,"nodeType":"Block","src":"32521:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"32576:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6869,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"32542:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6873,"nodeType":"RevertStatement","src":"32535:47:20"}]}}]},"documentation":{"id":6852,"nodeType":"StructuredDocumentation","src":"32067:307:20","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6877,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:20","nodeType":"FunctionDefinition","parameters":{"id":6855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6854,"mutability":"mutable","name":"value","nameLocation":"32403:5:20","nodeType":"VariableDeclaration","scope":6877,"src":"32396:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6853,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:20"},"returnParameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6857,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:20","nodeType":"VariableDeclaration","scope":6877,"src":"32433:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6856,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:20"},"scope":6996,"src":"32379:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6902,"nodeType":"Block","src":"32989:148:20","statements":[{"expression":{"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"32999:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"33018:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6886,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:20","typeDescriptions":{}}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6891,"nodeType":"ExpressionStatement","src":"32999:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6892,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"33038:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"33052:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6901,"nodeType":"IfStatement","src":"33034:97:20","trueBody":{"id":6900,"nodeType":"Block","src":"33059:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"33114:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6895,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"33080:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6899,"nodeType":"RevertStatement","src":"33073:47:20"}]}}]},"documentation":{"id":6878,"nodeType":"StructuredDocumentation","src":"32605:307:20","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6903,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:20","nodeType":"FunctionDefinition","parameters":{"id":6881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6880,"mutability":"mutable","name":"value","nameLocation":"32941:5:20","nodeType":"VariableDeclaration","scope":6903,"src":"32934:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6879,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:20"},"returnParameters":{"id":6884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6883,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:20","nodeType":"VariableDeclaration","scope":6903,"src":"32971:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6882,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:20"},"scope":6996,"src":"32917:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6928,"nodeType":"Block","src":"33527:148:20","statements":[{"expression":{"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"33537:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"33556:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6912,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:20","typeDescriptions":{}}},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6917,"nodeType":"ExpressionStatement","src":"33537:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6918,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"33576:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"33590:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6927,"nodeType":"IfStatement","src":"33572:97:20","trueBody":{"id":6926,"nodeType":"Block","src":"33597:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"33652:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6921,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"33618:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6925,"nodeType":"RevertStatement","src":"33611:47:20"}]}}]},"documentation":{"id":6904,"nodeType":"StructuredDocumentation","src":"33143:307:20","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6929,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:20","nodeType":"FunctionDefinition","parameters":{"id":6907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6906,"mutability":"mutable","name":"value","nameLocation":"33479:5:20","nodeType":"VariableDeclaration","scope":6929,"src":"33472:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6905,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:20"},"returnParameters":{"id":6910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6909,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:20","nodeType":"VariableDeclaration","scope":6929,"src":"33509:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6908,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:20"},"scope":6996,"src":"33455:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6954,"nodeType":"Block","src":"34058:146:20","statements":[{"expression":{"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"34068:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"34086:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6938,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:20","typeDescriptions":{}}},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6943,"nodeType":"ExpressionStatement","src":"34068:24:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6944,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"34106:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"34120:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6953,"nodeType":"IfStatement","src":"34102:96:20","trueBody":{"id":6952,"nodeType":"Block","src":"34127:71:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"34181:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6947,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"34148:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6951,"nodeType":"RevertStatement","src":"34141:46:20"}]}}]},"documentation":{"id":6930,"nodeType":"StructuredDocumentation","src":"33681:302:20","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6955,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:20","nodeType":"FunctionDefinition","parameters":{"id":6933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6932,"mutability":"mutable","name":"value","nameLocation":"34011:5:20","nodeType":"VariableDeclaration","scope":6955,"src":"34004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6931,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:20"},"returnParameters":{"id":6936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6935,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:20","nodeType":"VariableDeclaration","scope":6955,"src":"34041:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6934,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:20"},"scope":6996,"src":"33988:216:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6984,"nodeType":"Block","src":"34444:250:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"34557:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6967,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6966,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:20","memberName":"max","nodeType":"MemberAccess","src":"34573:16:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6964,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:20","typeDescriptions":{}}},"id":6971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6978,"nodeType":"IfStatement","src":"34553:105:20","trueBody":{"id":6977,"nodeType":"Block","src":"34592:66:20","statements":[{"errorCall":{"arguments":[{"id":6974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"34641:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6973,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"34613:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6976,"nodeType":"RevertStatement","src":"34606:41:20"}]}},{"expression":{"arguments":[{"id":6981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"34681:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6979,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:20","typeDescriptions":{}}},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6962,"id":6983,"nodeType":"Return","src":"34667:20:20"}]},"documentation":{"id":6956,"nodeType":"StructuredDocumentation","src":"34210:165:20","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6985,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:20","nodeType":"FunctionDefinition","parameters":{"id":6959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6958,"mutability":"mutable","name":"value","nameLocation":"34406:5:20","nodeType":"VariableDeclaration","scope":6985,"src":"34398:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6957,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:20"},"returnParameters":{"id":6962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6985,"src":"34436:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6960,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:20"},"scope":6996,"src":"34380:314:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6994,"nodeType":"Block","src":"34853:87:20","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:20","statements":[{"nodeType":"YulAssignment","src":"34902:22:20","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:20"},"nodeType":"YulFunctionCall","src":"34914:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:20"},"nodeType":"YulFunctionCall","src":"34907:17:20"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6988,"isOffset":false,"isSlot":false,"src":"34921:1:20","valueSize":1},{"declaration":6991,"isOffset":false,"isSlot":false,"src":"34902:1:20","valueSize":1}],"flags":["memory-safe"],"id":6993,"nodeType":"InlineAssembly","src":"34863:71:20"}]},"documentation":{"id":6986,"nodeType":"StructuredDocumentation","src":"34700:90:20","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6995,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:20","nodeType":"FunctionDefinition","parameters":{"id":6989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6988,"mutability":"mutable","name":"b","nameLocation":"34816:1:20","nodeType":"VariableDeclaration","scope":6995,"src":"34811:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6987,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:20"},"returnParameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6991,"mutability":"mutable","name":"u","nameLocation":"34850:1:20","nodeType":"VariableDeclaration","scope":6995,"src":"34842:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6990,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:20"},"scope":6996,"src":"34795:145:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6997,"src":"769:34173:20","usedErrors":[5241,5246,5253,5258],"usedEvents":[]}],"src":"192:34751:20"},"id":20},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6996],"SignedMath":[7140]},"id":7141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6998,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7141,"sourceUnit":6997,"src":"135:40:21","symbolAliases":[{"foreign":{"id":6999,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"143:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7001,"nodeType":"StructuredDocumentation","src":"177:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7140,"linearizedBaseContracts":[7140],"name":"SignedMath","nameLocation":"266:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":7030,"nodeType":"Block","src":"746:215:21","statements":[{"id":7029,"nodeType":"UncheckedBlock","src":"756:199:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7013,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"894:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"900:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7015,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"904:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7022,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"932:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7020,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"916:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"916:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7018,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:21","typeDescriptions":{}}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7012,"id":7028,"nodeType":"Return","src":"887:57:21"}]}]},"documentation":{"id":7002,"nodeType":"StructuredDocumentation","src":"283:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7031,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:21","nodeType":"FunctionDefinition","parameters":{"id":7009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7004,"mutability":"mutable","name":"condition","nameLocation":"684:9:21","nodeType":"VariableDeclaration","scope":7031,"src":"679:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7003,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7006,"mutability":"mutable","name":"a","nameLocation":"702:1:21","nodeType":"VariableDeclaration","scope":7031,"src":"695:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7005,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7008,"mutability":"mutable","name":"b","nameLocation":"712:1:21","nodeType":"VariableDeclaration","scope":7031,"src":"705:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7007,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:21"},"returnParameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7031,"src":"738:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7010,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:21"},"scope":7140,"src":"662:299:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7049,"nodeType":"Block","src":"1102:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7042,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"1127:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"1131:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7045,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"1134:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7046,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"1137:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7041,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"1119:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7040,"id":7048,"nodeType":"Return","src":"1112:27:21"}]},"documentation":{"id":7032,"nodeType":"StructuredDocumentation","src":"967:66:21","text":" @dev Returns the largest of two signed numbers."},"id":7050,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:21","nodeType":"FunctionDefinition","parameters":{"id":7037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7034,"mutability":"mutable","name":"a","nameLocation":"1058:1:21","nodeType":"VariableDeclaration","scope":7050,"src":"1051:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7033,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7036,"mutability":"mutable","name":"b","nameLocation":"1068:1:21","nodeType":"VariableDeclaration","scope":7050,"src":"1061:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7035,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:21"},"returnParameters":{"id":7040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7050,"src":"1094:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7038,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:21"},"scope":7140,"src":"1038:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7068,"nodeType":"Block","src":"1288:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"1313:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7062,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"1317:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7064,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"1320:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7065,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"1323:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7060,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"1305:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7059,"id":7067,"nodeType":"Return","src":"1298:27:21"}]},"documentation":{"id":7051,"nodeType":"StructuredDocumentation","src":"1152:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":7069,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:21","nodeType":"FunctionDefinition","parameters":{"id":7056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7053,"mutability":"mutable","name":"a","nameLocation":"1244:1:21","nodeType":"VariableDeclaration","scope":7069,"src":"1237:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7052,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7055,"mutability":"mutable","name":"b","nameLocation":"1254:1:21","nodeType":"VariableDeclaration","scope":7069,"src":"1247:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7054,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:21"},"returnParameters":{"id":7059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7069,"src":"1280:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7057,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:21"},"scope":7140,"src":"1224:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7112,"nodeType":"Block","src":"1537:162:21","statements":[{"assignments":[7080],"declarations":[{"constant":false,"id":7080,"mutability":"mutable","name":"x","nameLocation":"1606:1:21","nodeType":"VariableDeclaration","scope":7112,"src":"1599:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7079,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7093,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7081,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1611:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7082,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"1615:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1622:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7086,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"1626:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7094,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"1651:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7099,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"1671:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:21","typeDescriptions":{}}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7095,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:21","typeDescriptions":{}}},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7104,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1685:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7105,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"1689:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7078,"id":7111,"nodeType":"Return","src":"1644:48:21"}]},"documentation":{"id":7070,"nodeType":"StructuredDocumentation","src":"1338:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7113,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:21","nodeType":"FunctionDefinition","parameters":{"id":7075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7072,"mutability":"mutable","name":"a","nameLocation":"1493:1:21","nodeType":"VariableDeclaration","scope":7113,"src":"1486:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7071,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7074,"mutability":"mutable","name":"b","nameLocation":"1503:1:21","nodeType":"VariableDeclaration","scope":7113,"src":"1496:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7073,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:21"},"returnParameters":{"id":7078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7113,"src":"1529:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7076,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:21"},"scope":7140,"src":"1469:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7138,"nodeType":"Block","src":"1843:767:21","statements":[{"id":7137,"nodeType":"UncheckedBlock","src":"1853:751:21","statements":[{"assignments":[7122],"declarations":[{"constant":false,"id":7122,"mutability":"mutable","name":"mask","nameLocation":"2424:4:21","nodeType":"VariableDeclaration","scope":7137,"src":"2417:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7121,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7126,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7123,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"2431:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7129,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"2576:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7130,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"2580:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7133,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"2588:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:21","typeDescriptions":{}}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7120,"id":7136,"nodeType":"Return","src":"2560:33:21"}]}]},"documentation":{"id":7114,"nodeType":"StructuredDocumentation","src":"1705:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7139,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:21","nodeType":"FunctionDefinition","parameters":{"id":7117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7116,"mutability":"mutable","name":"n","nameLocation":"1808:1:21","nodeType":"VariableDeclaration","scope":7139,"src":"1801:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7115,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:21"},"returnParameters":{"id":7120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7139,"src":"1834:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:21"},"scope":7140,"src":"1788:822:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7141,"src":"258:2354:21","usedErrors":[],"usedEvents":[]}],"src":"109:2504:21"},"id":21},"contracts/Dataset.sol":{"ast":{"absolutePath":"contracts/Dataset.sol","exportedSymbols":{"AccessControl":[296],"Context":[2051],"Dataset":[8038],"ERC165":[3598],"IAccessControl":[379],"IERC165":[3610],"Ownable":[527],"ReentrancyGuard":[2172]},"id":8039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7142,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:22"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7143,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8039,"sourceUnit":528,"src":"58:52:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8039,"sourceUnit":2173,"src":"111:59:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":7145,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8039,"sourceUnit":297,"src":"171:58:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7146,"name":"Ownable","nameLocations":["251:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"251:7:22"},"id":7147,"nodeType":"InheritanceSpecifier","src":"251:7:22"},{"baseName":{"id":7148,"name":"ReentrancyGuard","nameLocations":["260:15:22"],"nodeType":"IdentifierPath","referencedDeclaration":2172,"src":"260:15:22"},"id":7149,"nodeType":"InheritanceSpecifier","src":"260:15:22"},{"baseName":{"id":7150,"name":"AccessControl","nameLocations":["277:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"277:13:22"},"id":7151,"nodeType":"InheritanceSpecifier","src":"277:13:22"}],"canonicalName":"Dataset","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8038,"linearizedBaseContracts":[8038,296,3598,3610,379,2172,527,2051],"name":"Dataset","nameLocation":"240:7:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"dd5af6cc","id":7156,"mutability":"constant","name":"DATASET_ADMIN_ROLE","nameLocation":"321:18:22","nodeType":"VariableDeclaration","scope":8038,"src":"297:76:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"297:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444154415345545f41444d494e5f524f4c45","id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"352:20:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_278259b194ae675b320344b3c4e89035d8b8a1c493c2201003b3e5a5a539eafc","typeString":"literal_string \"DATASET_ADMIN_ROLE\""},"value":"DATASET_ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_278259b194ae675b320344b3c4e89035d8b8a1c493c2201003b3e5a5a539eafc","typeString":"literal_string \"DATASET_ADMIN_ROLE\""}],"id":7153,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"342:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"342:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e7705db6","id":7161,"mutability":"constant","name":"VERIFIER_ROLE","nameLocation":"403:13:22","nodeType":"VariableDeclaration","scope":8038,"src":"379:66:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"379:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"56455249464945525f524f4c45","id":7159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"429:15:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09","typeString":"literal_string \"VERIFIER_ROLE\""},"value":"VERIFIER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09","typeString":"literal_string \"VERIFIER_ROLE\""}],"id":7158,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"419:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"419:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"Dataset.DatasetInfo","id":7191,"members":[{"constant":false,"id":7163,"mutability":"mutable","name":"name","nameLocation":"488:4:22","nodeType":"VariableDeclaration","scope":7191,"src":"481:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7162,"name":"string","nodeType":"ElementaryTypeName","src":"481:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7165,"mutability":"mutable","name":"description","nameLocation":"509:11:22","nodeType":"VariableDeclaration","scope":7191,"src":"502:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7164,"name":"string","nodeType":"ElementaryTypeName","src":"502:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7167,"mutability":"mutable","name":"owner","nameLocation":"538:5:22","nodeType":"VariableDeclaration","scope":7191,"src":"530:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7166,"name":"address","nodeType":"ElementaryTypeName","src":"530:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7169,"mutability":"mutable","name":"dataHash","nameLocation":"560:8:22","nodeType":"VariableDeclaration","scope":7191,"src":"553:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7168,"name":"string","nodeType":"ElementaryTypeName","src":"553:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7171,"mutability":"mutable","name":"metadataHash","nameLocation":"612:12:22","nodeType":"VariableDeclaration","scope":7191,"src":"605:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7170,"name":"string","nodeType":"ElementaryTypeName","src":"605:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7173,"mutability":"mutable","name":"createdAt","nameLocation":"668:9:22","nodeType":"VariableDeclaration","scope":7191,"src":"660:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7172,"name":"uint256","nodeType":"ElementaryTypeName","src":"660:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7175,"mutability":"mutable","name":"lastUpdated","nameLocation":"695:11:22","nodeType":"VariableDeclaration","scope":7191,"src":"687:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7174,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7177,"mutability":"mutable","name":"version","nameLocation":"724:7:22","nodeType":"VariableDeclaration","scope":7191,"src":"716:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7176,"name":"uint256","nodeType":"ElementaryTypeName","src":"716:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7179,"mutability":"mutable","name":"isPublic","nameLocation":"746:8:22","nodeType":"VariableDeclaration","scope":7191,"src":"741:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7178,"name":"bool","nodeType":"ElementaryTypeName","src":"741:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7181,"mutability":"mutable","name":"isVerified","nameLocation":"769:10:22","nodeType":"VariableDeclaration","scope":7191,"src":"764:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7180,"name":"bool","nodeType":"ElementaryTypeName","src":"764:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7183,"mutability":"mutable","name":"accessPrice","nameLocation":"797:11:22","nodeType":"VariableDeclaration","scope":7191,"src":"789:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7182,"name":"uint256","nodeType":"ElementaryTypeName","src":"789:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7186,"mutability":"mutable","name":"tags","nameLocation":"861:4:22","nodeType":"VariableDeclaration","scope":7191,"src":"852:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7184,"name":"string","nodeType":"ElementaryTypeName","src":"852:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7185,"nodeType":"ArrayTypeName","src":"852:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":7188,"mutability":"mutable","name":"downloadCount","nameLocation":"883:13:22","nodeType":"VariableDeclaration","scope":7191,"src":"875:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7187,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7190,"mutability":"mutable","name":"citationCount","nameLocation":"914:13:22","nodeType":"VariableDeclaration","scope":7191,"src":"906:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7189,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"DatasetInfo","nameLocation":"459:11:22","nodeType":"StructDefinition","scope":8038,"src":"452:482:22","visibility":"public"},{"canonicalName":"Dataset.AccessRequest","id":7206,"members":[{"constant":false,"id":7193,"mutability":"mutable","name":"requester","nameLocation":"979:9:22","nodeType":"VariableDeclaration","scope":7206,"src":"971:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7192,"name":"address","nodeType":"ElementaryTypeName","src":"971:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7195,"mutability":"mutable","name":"datasetId","nameLocation":"1006:9:22","nodeType":"VariableDeclaration","scope":7206,"src":"998:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7194,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7197,"mutability":"mutable","name":"purpose","nameLocation":"1032:7:22","nodeType":"VariableDeclaration","scope":7206,"src":"1025:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7196,"name":"string","nodeType":"ElementaryTypeName","src":"1025:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7199,"mutability":"mutable","name":"requestedAt","nameLocation":"1057:11:22","nodeType":"VariableDeclaration","scope":7206,"src":"1049:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7201,"mutability":"mutable","name":"isApproved","nameLocation":"1083:10:22","nodeType":"VariableDeclaration","scope":7206,"src":"1078:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7200,"name":"bool","nodeType":"ElementaryTypeName","src":"1078:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7203,"mutability":"mutable","name":"isPending","nameLocation":"1108:9:22","nodeType":"VariableDeclaration","scope":7206,"src":"1103:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7202,"name":"bool","nodeType":"ElementaryTypeName","src":"1103:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7205,"mutability":"mutable","name":"approvedAt","nameLocation":"1135:10:22","nodeType":"VariableDeclaration","scope":7206,"src":"1127:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AccessRequest","nameLocation":"947:13:22","nodeType":"StructDefinition","scope":8038,"src":"940:212:22","visibility":"public"},{"canonicalName":"Dataset.DatasetVersion","id":7217,"members":[{"constant":false,"id":7208,"mutability":"mutable","name":"version","nameLocation":"1198:7:22","nodeType":"VariableDeclaration","scope":7217,"src":"1190:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7210,"mutability":"mutable","name":"dataHash","nameLocation":"1222:8:22","nodeType":"VariableDeclaration","scope":7217,"src":"1215:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7209,"name":"string","nodeType":"ElementaryTypeName","src":"1215:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7212,"mutability":"mutable","name":"metadataHash","nameLocation":"1247:12:22","nodeType":"VariableDeclaration","scope":7217,"src":"1240:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7211,"name":"string","nodeType":"ElementaryTypeName","src":"1240:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7214,"mutability":"mutable","name":"timestamp","nameLocation":"1277:9:22","nodeType":"VariableDeclaration","scope":7217,"src":"1269:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1269:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7216,"mutability":"mutable","name":"changeLog","nameLocation":"1303:9:22","nodeType":"VariableDeclaration","scope":7217,"src":"1296:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7215,"name":"string","nodeType":"ElementaryTypeName","src":"1296:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"DatasetVersion","nameLocation":"1165:14:22","nodeType":"StructDefinition","scope":8038,"src":"1158:161:22","visibility":"public"},{"constant":false,"functionSelector":"1cff85e1","id":7222,"mutability":"mutable","name":"datasets","nameLocation":"1364:8:22","nodeType":"VariableDeclaration","scope":8038,"src":"1325:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DatasetInfo_$7191_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetInfo)"},"typeName":{"id":7221,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1333:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1325:31:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DatasetInfo_$7191_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7220,"nodeType":"UserDefinedTypeName","pathNode":{"id":7219,"name":"DatasetInfo","nameLocations":["1344:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":7191,"src":"1344:11:22"},"referencedDeclaration":7191,"src":"1344:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"ced14198","id":7228,"mutability":"mutable","name":"hasAccess","nameLocation":"1430:9:22","nodeType":"VariableDeclaration","scope":8038,"src":"1378:61:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":7227,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7223,"name":"uint256","nodeType":"ElementaryTypeName","src":"1386:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1378:44:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7226,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7224,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1397:24:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7225,"name":"bool","nodeType":"ElementaryTypeName","src":"1416:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"3ee9ac05","id":7234,"mutability":"mutable","name":"accessRequests","nameLocation":"1488:14:22","nodeType":"VariableDeclaration","scope":8038,"src":"1445:57:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Dataset.AccessRequest[])"},"typeName":{"id":7233,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1453:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1445:35:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Dataset.AccessRequest[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":7231,"nodeType":"UserDefinedTypeName","pathNode":{"id":7230,"name":"AccessRequest","nameLocations":["1464:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7206,"src":"1464:13:22"},"referencedDeclaration":7206,"src":"1464:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRequest_$7206_storage_ptr","typeString":"struct Dataset.AccessRequest"}},"id":7232,"nodeType":"ArrayTypeName","src":"1464:15:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage_ptr","typeString":"struct Dataset.AccessRequest[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"795d5cb7","id":7240,"mutability":"mutable","name":"datasetVersions","nameLocation":"1552:15:22","nodeType":"VariableDeclaration","scope":8038,"src":"1508:59:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetVersion[])"},"typeName":{"id":7239,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1516:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1508:36:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetVersion[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":7237,"nodeType":"UserDefinedTypeName","pathNode":{"id":7236,"name":"DatasetVersion","nameLocations":["1527:14:22"],"nodeType":"IdentifierPath","referencedDeclaration":7217,"src":"1527:14:22"},"referencedDeclaration":7217,"src":"1527:14:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetVersion_$7217_storage_ptr","typeString":"struct Dataset.DatasetVersion"}},"id":7238,"nodeType":"ArrayTypeName","src":"1527:16:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage_ptr","typeString":"struct Dataset.DatasetVersion[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"668e84be","id":7245,"mutability":"mutable","name":"ownerDatasets","nameLocation":"1610:13:22","nodeType":"VariableDeclaration","scope":8038,"src":"1573:50:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":7244,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7241,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1573:29:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":7242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1592:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7243,"nodeType":"ArrayTypeName","src":"1592:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"dfb216aa","id":7249,"mutability":"mutable","name":"nameToDatasetId","nameLocation":"1663:15:22","nodeType":"VariableDeclaration","scope":8038,"src":"1629:49:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"typeName":{"id":7248,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7246,"name":"string","nodeType":"ElementaryTypeName","src":"1637:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1629:26:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1647:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"52955670","id":7251,"mutability":"mutable","name":"nextDatasetId","nameLocation":"1704:13:22","nodeType":"VariableDeclaration","scope":8038,"src":"1689:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1689:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a1cd59c3","id":7254,"mutability":"mutable","name":"allDatasets","nameLocation":"1740:11:22","nodeType":"VariableDeclaration","scope":8038,"src":"1723:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":7252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7253,"nodeType":"ArrayTypeName","src":"1723:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"6030261238b75e373368746637a663b0f53d82d9fdfb5d33a015c036f8fce174","id":7264,"name":"DatasetRegistered","nameLocation":"1768:17:22","nodeType":"EventDefinition","parameters":{"id":7263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7256,"indexed":true,"mutability":"mutable","name":"datasetId","nameLocation":"1811:9:22","nodeType":"VariableDeclaration","scope":7264,"src":"1795:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1795:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7258,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1846:5:22","nodeType":"VariableDeclaration","scope":7264,"src":"1830:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7257,"name":"address","nodeType":"ElementaryTypeName","src":"1830:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7260,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"1868:4:22","nodeType":"VariableDeclaration","scope":7264,"src":"1861:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7259,"name":"string","nodeType":"ElementaryTypeName","src":"1861:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7262,"indexed":false,"mutability":"mutable","name":"dataHash","nameLocation":"1889:8:22","nodeType":"VariableDeclaration","scope":7264,"src":"1882:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7261,"name":"string","nodeType":"ElementaryTypeName","src":"1882:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1785:118:22"},"src":"1762:142:22"},{"anonymous":false,"eventSelector":"97a8264d9d0b9e21370349f9b49be012a5d1e27829879df8ba166dba48f898c6","id":7272,"name":"AccessGranted","nameLocation":"1920:13:22","nodeType":"EventDefinition","parameters":{"id":7271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7266,"indexed":true,"mutability":"mutable","name":"datasetId","nameLocation":"1959:9:22","nodeType":"VariableDeclaration","scope":7272,"src":"1943:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1943:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7268,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1994:4:22","nodeType":"VariableDeclaration","scope":7272,"src":"1978:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7267,"name":"address","nodeType":"ElementaryTypeName","src":"1978:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7270,"indexed":true,"mutability":"mutable","name":"grantor","nameLocation":"2024:7:22","nodeType":"VariableDeclaration","scope":7272,"src":"2008:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7269,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1933:104:22"},"src":"1914:124:22"},{"anonymous":false,"eventSelector":"a964b0d5b0ae345368407279f158ce01fbdafd867ce29bc1a4cf30fef68fdd8c","id":7280,"name":"AccessRequested","nameLocation":"2054:15:22","nodeType":"EventDefinition","parameters":{"id":7279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7274,"indexed":true,"mutability":"mutable","name":"datasetId","nameLocation":"2095:9:22","nodeType":"VariableDeclaration","scope":7280,"src":"2079:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7273,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7276,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"2130:9:22","nodeType":"VariableDeclaration","scope":7280,"src":"2114:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7275,"name":"address","nodeType":"ElementaryTypeName","src":"2114:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7278,"indexed":false,"mutability":"mutable","name":"purpose","nameLocation":"2156:7:22","nodeType":"VariableDeclaration","scope":7280,"src":"2149:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7277,"name":"string","nodeType":"ElementaryTypeName","src":"2149:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2069:100:22"},"src":"2048:122:22"},{"anonymous":false,"eventSelector":"999e6a948f9641ed693b4d88ba4178715d7e5067b92a9e4d44cc5ce0b0a31e5b","id":7288,"name":"DatasetUpdated","nameLocation":"2186:14:22","nodeType":"EventDefinition","parameters":{"id":7287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7282,"indexed":true,"mutability":"mutable","name":"datasetId","nameLocation":"2226:9:22","nodeType":"VariableDeclaration","scope":7288,"src":"2210:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7284,"indexed":false,"mutability":"mutable","name":"newVersion","nameLocation":"2253:10:22","nodeType":"VariableDeclaration","scope":7288,"src":"2245:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2245:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7286,"indexed":false,"mutability":"mutable","name":"newDataHash","nameLocation":"2280:11:22","nodeType":"VariableDeclaration","scope":7288,"src":"2273:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7285,"name":"string","nodeType":"ElementaryTypeName","src":"2273:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2200:97:22"},"src":"2180:118:22"},{"anonymous":false,"eventSelector":"1a4001decba2bf82b6e04b601c884d0afd30781e54b962a9b9fc5ab6f3ca375b","id":7294,"name":"DatasetVerified","nameLocation":"2314:15:22","nodeType":"EventDefinition","parameters":{"id":7293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7290,"indexed":true,"mutability":"mutable","name":"datasetId","nameLocation":"2346:9:22","nodeType":"VariableDeclaration","scope":7294,"src":"2330:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7289,"name":"uint256","nodeType":"ElementaryTypeName","src":"2330:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7292,"indexed":false,"mutability":"mutable","name":"verified","nameLocation":"2362:8:22","nodeType":"VariableDeclaration","scope":7294,"src":"2357:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7291,"name":"bool","nodeType":"ElementaryTypeName","src":"2357:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2329:42:22"},"src":"2308:64:22"},{"anonymous":false,"eventSelector":"f8d2db7c7db2fe44e1064c72e76721c532922d180fe69f61b8775ce58e2e6c29","id":7300,"name":"DatasetDownloaded","nameLocation":"2383:17:22","nodeType":"EventDefinition","parameters":{"id":7299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7296,"indexed":true,"mutability":"mutable","name":"datasetId","nameLocation":"2417:9:22","nodeType":"VariableDeclaration","scope":7300,"src":"2401:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7295,"name":"uint256","nodeType":"ElementaryTypeName","src":"2401:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7298,"indexed":true,"mutability":"mutable","name":"downloader","nameLocation":"2444:10:22","nodeType":"VariableDeclaration","scope":7300,"src":"2428:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7297,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2400:55:22"},"src":"2377:79:22"},{"body":{"id":7316,"nodeType":"Block","src":"2508:98:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7305,"name":"datasets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"2526:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DatasetInfo_$7191_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetInfo storage ref)"}},"id":7307,"indexExpression":{"id":7306,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"2535:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2526:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage","typeString":"struct Dataset.DatasetInfo storage ref"}},"id":7308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2547:5:22","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":7167,"src":"2526:26:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7309,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2556:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2560:6:22","memberName":"sender","nodeType":"MemberAccess","src":"2556:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2526:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742064617461736574206f776e6572","id":7312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2568:19:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_03a4748fa8594060d1e053bfdbde74b16988048d40666dd1cb9a9bd3918054c3","typeString":"literal_string \"Not dataset owner\""},"value":"Not dataset owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_03a4748fa8594060d1e053bfdbde74b16988048d40666dd1cb9a9bd3918054c3","typeString":"literal_string \"Not dataset owner\""}],"id":7304,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2518:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2518:70:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7314,"nodeType":"ExpressionStatement","src":"2518:70:22"},{"id":7315,"nodeType":"PlaceholderStatement","src":"2598:1:22"}]},"id":7317,"name":"onlyDatasetOwner","nameLocation":"2471:16:22","nodeType":"ModifierDefinition","parameters":{"id":7303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7302,"mutability":"mutable","name":"_datasetId","nameLocation":"2496:10:22","nodeType":"VariableDeclaration","scope":7317,"src":"2488:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2488:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2487:20:22"},"src":"2462:144:22","virtual":false,"visibility":"internal"},{"body":{"id":7329,"nodeType":"Block","src":"2655:89:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7322,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"2673:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7323,"name":"nextDatasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"2686:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2673:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4461746173657420646f6573206e6f74206578697374","id":7325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2701:24:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_4fba5f571c203cf3d27fddba0449f8dc3f2055420b2af6b14097d3157de14a94","typeString":"literal_string \"Dataset does not exist\""},"value":"Dataset does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4fba5f571c203cf3d27fddba0449f8dc3f2055420b2af6b14097d3157de14a94","typeString":"literal_string \"Dataset does not exist\""}],"id":7321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2665:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2665:61:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7327,"nodeType":"ExpressionStatement","src":"2665:61:22"},{"id":7328,"nodeType":"PlaceholderStatement","src":"2736:1:22"}]},"id":7330,"name":"datasetExists","nameLocation":"2621:13:22","nodeType":"ModifierDefinition","parameters":{"id":7320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7319,"mutability":"mutable","name":"_datasetId","nameLocation":"2643:10:22","nodeType":"VariableDeclaration","scope":7330,"src":"2635:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7318,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2634:20:22"},"src":"2612:132:22","virtual":false,"visibility":"internal"},{"body":{"id":7359,"nodeType":"Block","src":"2784:185:22","statements":[{"expression":{"arguments":[{"id":7338,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2805:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7339,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2825:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2829:6:22","memberName":"sender","nodeType":"MemberAccess","src":"2825:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7337,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2794:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7342,"nodeType":"ExpressionStatement","src":"2794:42:22"},{"expression":{"arguments":[{"id":7344,"name":"DATASET_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"2857:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2877:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2881:6:22","memberName":"sender","nodeType":"MemberAccess","src":"2877:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7343,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2846:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2846:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7348,"nodeType":"ExpressionStatement","src":"2846:42:22"},{"expression":{"arguments":[{"id":7350,"name":"VERIFIER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"2909:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7351,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2924:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2928:6:22","memberName":"sender","nodeType":"MemberAccess","src":"2924:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7349,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2898:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2898:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7354,"nodeType":"ExpressionStatement","src":"2898:37:22"},{"expression":{"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7355,"name":"nextDatasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"2945:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":7356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2961:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2945:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7358,"nodeType":"ExpressionStatement","src":"2945:17:22"}]},"id":7360,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":7333,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2772:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2776:6:22","memberName":"sender","nodeType":"MemberAccess","src":"2772:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7335,"kind":"baseConstructorSpecifier","modifierName":{"id":7332,"name":"Ownable","nameLocations":["2764:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2764:7:22"},"nodeType":"ModifierInvocation","src":"2764:19:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7331,"nodeType":"ParameterList","parameters":[],"src":"2761:2:22"},"returnParameters":{"id":7336,"nodeType":"ParameterList","parameters":[],"src":"2784:0:22"},"scope":8038,"src":"2750:219:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7496,"nodeType":"Block","src":"3702:1422:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7386,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"3726:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3720:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7384,"name":"bytes","nodeType":"ElementaryTypeName","src":"3720:5:22","typeDescriptions":{}}},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3720:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3733:6:22","memberName":"length","nodeType":"MemberAccess","src":"3720:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3742:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3720:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e616d652063616e6e6f7420626520656d707479","id":7391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3745:22:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a","typeString":"literal_string \"Name cannot be empty\""},"value":"Name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a","typeString":"literal_string \"Name cannot be empty\""}],"id":7383,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3712:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3712:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7393,"nodeType":"ExpressionStatement","src":"3712:56:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7397,"name":"_dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"3792:9:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3786:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7395,"name":"bytes","nodeType":"ElementaryTypeName","src":"3786:5:22","typeDescriptions":{}}},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3786:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3803:6:22","memberName":"length","nodeType":"MemberAccess","src":"3786:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3812:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3786:27:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4461746120686173682063616e6e6f7420626520656d707479","id":7402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3815:27:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e6cccea1095d8f52d1055d15cafa9b4edf93b9799fecf98bb15aa068e7a179e","typeString":"literal_string \"Data hash cannot be empty\""},"value":"Data hash cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0e6cccea1095d8f52d1055d15cafa9b4edf93b9799fecf98bb15aa068e7a179e","typeString":"literal_string \"Data hash cannot be empty\""}],"id":7394,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3778:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3778:65:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7404,"nodeType":"ExpressionStatement","src":"3778:65:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7406,"name":"nameToDatasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"3861:15:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":7408,"indexExpression":{"id":7407,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"3877:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3861:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3887:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3861:27:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44617461736574206e616d6520616c726561647920657869737473","id":7411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3890:29:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc6c2da06116f59ec6efac906b8d1032d29b82e2f34391b46b09c76b01901216","typeString":"literal_string \"Dataset name already exists\""},"value":"Dataset name already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc6c2da06116f59ec6efac906b8d1032d29b82e2f34391b46b09c76b01901216","typeString":"literal_string \"Dataset name already exists\""}],"id":7405,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3853:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3853:67:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7413,"nodeType":"ExpressionStatement","src":"3853:67:22"},{"assignments":[7415],"declarations":[{"constant":false,"id":7415,"mutability":"mutable","name":"datasetId","nameLocation":"3939:9:22","nodeType":"VariableDeclaration","scope":7496,"src":"3931:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3931:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7418,"initialValue":{"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3951:15:22","subExpression":{"id":7416,"name":"nextDatasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"3951:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3931:35:22"},{"expression":{"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7419,"name":"datasets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"3977:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DatasetInfo_$7191_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetInfo storage ref)"}},"id":7421,"indexExpression":{"id":7420,"name":"datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"3986:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3977:19:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage","typeString":"struct Dataset.DatasetInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7423,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"4031:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7424,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"4063:12:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7425,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4096:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4100:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4096:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7427,"name":"_dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"4130:9:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7428,"name":"_metadataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"4167:13:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7429,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4205:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4211:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"4205:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7431,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4247:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4253:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"4247:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":7433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4285:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":7434,"name":"_isPublic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"4310:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"66616c7365","id":7435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4345:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":7436,"name":"_accessPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"4377:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7437,"name":"_tags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"4409:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"hexValue":"30","id":7438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4443:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4473:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7422,"name":"DatasetInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"3999:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DatasetInfo_$7191_storage_ptr_$","typeString":"type(struct Dataset.DatasetInfo storage pointer)"}},"id":7440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4025:4:22","4050:11:22","4089:5:22","4120:8:22","4153:12:22","4194:9:22","4234:11:22","4276:7:22","4300:8:22","4333:10:22","4364:11:22","4403:4:22","4428:13:22","4458:13:22"],"names":["name","description","owner","dataHash","metadataHash","createdAt","lastUpdated","version","isPublic","isVerified","accessPrice","tags","downloadCount","citationCount"],"nodeType":"FunctionCall","src":"3999:486:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_memory_ptr","typeString":"struct Dataset.DatasetInfo memory"}},"src":"3977:508:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage","typeString":"struct Dataset.DatasetInfo storage ref"}},"id":7442,"nodeType":"ExpressionStatement","src":"3977:508:22"},{"expression":{"arguments":[{"arguments":[{"hexValue":"31","id":7448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4600:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":7449,"name":"_dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"4625:9:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7450,"name":"_metadataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"4662:13:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7451,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4700:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4706:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"4700:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"496e697469616c2076657273696f6e","id":7453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4740:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e739e366ad0c0eea91caf50ab8aefacb50d186275fc9de6783a2138499f5fb4d","typeString":"literal_string \"Initial version\""},"value":"Initial version"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_e739e366ad0c0eea91caf50ab8aefacb50d186275fc9de6783a2138499f5fb4d","typeString":"literal_string \"Initial version\""}],"id":7447,"name":"DatasetVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"4562:14:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DatasetVersion_$7217_storage_ptr_$","typeString":"type(struct Dataset.DatasetVersion storage pointer)"}},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4591:7:22","4615:8:22","4648:12:22","4689:9:22","4729:9:22"],"names":["version","dataHash","metadataHash","timestamp","changeLog"],"nodeType":"FunctionCall","src":"4562:206:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DatasetVersion_$7217_memory_ptr","typeString":"struct Dataset.DatasetVersion memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DatasetVersion_$7217_memory_ptr","typeString":"struct Dataset.DatasetVersion memory"}],"expression":{"baseExpression":{"id":7443,"name":"datasetVersions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"4530:15:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetVersion storage ref[] storage ref)"}},"id":7445,"indexExpression":{"id":7444,"name":"datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"4546:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4530:26:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage","typeString":"struct Dataset.DatasetVersion storage ref[] storage ref"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4557:4:22","memberName":"push","nodeType":"MemberAccess","src":"4530:31:22","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage_ptr_$_t_struct$_DatasetVersion_$7217_storage_$returns$__$attached_to$_t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage_ptr_$","typeString":"function (struct Dataset.DatasetVersion storage ref[] storage pointer,struct Dataset.DatasetVersion storage ref)"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:239:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7456,"nodeType":"ExpressionStatement","src":"4530:239:22"},{"expression":{"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7457,"name":"nameToDatasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"4780:15:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":7459,"indexExpression":{"id":7458,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"4796:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4780:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7460,"name":"datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"4805:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4780:34:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7462,"nodeType":"ExpressionStatement","src":"4780:34:22"},{"expression":{"arguments":[{"id":7468,"name":"datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"4855:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":7463,"name":"ownerDatasets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"4824:13:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7466,"indexExpression":{"expression":{"id":7464,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4838:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4842:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4838:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4824:25:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4850:4:22","memberName":"push","nodeType":"MemberAccess","src":"4824:30:22","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4824:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7470,"nodeType":"ExpressionStatement","src":"4824:41:22"},{"expression":{"arguments":[{"id":7474,"name":"datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"4892:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7471,"name":"allDatasets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7254,"src":"4875:11:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4887:4:22","memberName":"push","nodeType":"MemberAccess","src":"4875:16:22","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4875:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7476,"nodeType":"ExpressionStatement","src":"4875:27:22"},{"expression":{"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7477,"name":"hasAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"4969:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7481,"indexExpression":{"id":7478,"name":"datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"4979:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4969:20:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7482,"indexExpression":{"expression":{"id":7479,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4990:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4994:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4990:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4969:32:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5004:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4969:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7485,"nodeType":"ExpressionStatement","src":"4969:39:22"},{"eventCall":{"arguments":[{"id":7487,"name":"datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"5042:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7488,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5053:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5057:6:22","memberName":"sender","nodeType":"MemberAccess","src":"5053:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7490,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"5065:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7491,"name":"_dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"5072:9:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7486,"name":"DatasetRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"5024:17:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory,string memory)"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5024:58:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7493,"nodeType":"EmitStatement","src":"5019:63:22"},{"expression":{"id":7494,"name":"datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"5108:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7382,"id":7495,"nodeType":"Return","src":"5101:16:22"}]},"documentation":{"id":7361,"nodeType":"StructuredDocumentation","src":"2975:431:22","text":" @dev Register a new dataset\n @param _name Name of the dataset\n @param _description Description of the dataset\n @param _dataHash Hash of the dataset content\n @param _metadataHash IPFS hash for metadata\n @param _isPublic Whether the dataset is publicly accessible\n @param _accessPrice Price to access the dataset (0 for free)\n @param _tags Array of tags for categorization"},"functionSelector":"44bc6d25","id":7497,"implemented":true,"kind":"function","modifiers":[{"id":7379,"kind":"modifierInvocation","modifierName":{"id":7378,"name":"nonReentrant","nameLocations":["3671:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"3671:12:22"},"nodeType":"ModifierInvocation","src":"3671:12:22"}],"name":"registerDataset","nameLocation":"3420:15:22","nodeType":"FunctionDefinition","parameters":{"id":7377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7363,"mutability":"mutable","name":"_name","nameLocation":"3459:5:22","nodeType":"VariableDeclaration","scope":7497,"src":"3445:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7362,"name":"string","nodeType":"ElementaryTypeName","src":"3445:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7365,"mutability":"mutable","name":"_description","nameLocation":"3488:12:22","nodeType":"VariableDeclaration","scope":7497,"src":"3474:26:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7364,"name":"string","nodeType":"ElementaryTypeName","src":"3474:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7367,"mutability":"mutable","name":"_dataHash","nameLocation":"3524:9:22","nodeType":"VariableDeclaration","scope":7497,"src":"3510:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7366,"name":"string","nodeType":"ElementaryTypeName","src":"3510:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7369,"mutability":"mutable","name":"_metadataHash","nameLocation":"3557:13:22","nodeType":"VariableDeclaration","scope":7497,"src":"3543:27:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7368,"name":"string","nodeType":"ElementaryTypeName","src":"3543:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7371,"mutability":"mutable","name":"_isPublic","nameLocation":"3585:9:22","nodeType":"VariableDeclaration","scope":7497,"src":"3580:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7370,"name":"bool","nodeType":"ElementaryTypeName","src":"3580:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7373,"mutability":"mutable","name":"_accessPrice","nameLocation":"3612:12:22","nodeType":"VariableDeclaration","scope":7497,"src":"3604:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7372,"name":"uint256","nodeType":"ElementaryTypeName","src":"3604:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7376,"mutability":"mutable","name":"_tags","nameLocation":"3650:5:22","nodeType":"VariableDeclaration","scope":7497,"src":"3634:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7374,"name":"string","nodeType":"ElementaryTypeName","src":"3634:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7375,"nodeType":"ArrayTypeName","src":"3634:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"3435:226:22"},"returnParameters":{"id":7382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7497,"src":"3693:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7380,"name":"uint256","nodeType":"ElementaryTypeName","src":"3693:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3692:9:22"},"scope":8038,"src":"3411:1713:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7633,"nodeType":"Block","src":"5431:1427:22","statements":[{"assignments":[7512],"declarations":[{"constant":false,"id":7512,"mutability":"mutable","name":"dataset","nameLocation":"5461:7:22","nodeType":"VariableDeclaration","scope":7633,"src":"5441:27:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo"},"typeName":{"id":7511,"nodeType":"UserDefinedTypeName","pathNode":{"id":7510,"name":"DatasetInfo","nameLocations":["5441:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":7191,"src":"5441:11:22"},"referencedDeclaration":7191,"src":"5441:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo"}},"visibility":"internal"}],"id":7516,"initialValue":{"baseExpression":{"id":7513,"name":"datasets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"5471:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DatasetInfo_$7191_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetInfo storage ref)"}},"id":7515,"indexExpression":{"id":7514,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"5480:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5471:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage","typeString":"struct Dataset.DatasetInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5441:50:22"},{"expression":{"arguments":[{"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5509:34:22","subExpression":{"baseExpression":{"baseExpression":{"id":7518,"name":"hasAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"5510:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7520,"indexExpression":{"id":7519,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"5520:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5510:21:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7523,"indexExpression":{"expression":{"id":7521,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5532:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5536:6:22","memberName":"sender","nodeType":"MemberAccess","src":"5532:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5510:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792068617320616363657373","id":7525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5545:20:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_35845a4dd39b6d1819dfcaee0d0b6248786e49f1108e6ea29d0ec169f4a73e21","typeString":"literal_string \"Already has access\""},"value":"Already has access"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_35845a4dd39b6d1819dfcaee0d0b6248786e49f1108e6ea29d0ec169f4a73e21","typeString":"literal_string \"Already has access\""}],"id":7517,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5501:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5501:65:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7527,"nodeType":"ExpressionStatement","src":"5501:65:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7529,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5584:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5588:6:22","memberName":"sender","nodeType":"MemberAccess","src":"5584:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7531,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"5598:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5606:5:22","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":7167,"src":"5598:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5584:27:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e657220616c72656164792068617320616363657373","id":7534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5613:26:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f160941862c1f4035da32537b043245a06afa7bf3904c9be15adf0abb7c11ef","typeString":"literal_string \"Owner already has access\""},"value":"Owner already has access"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f160941862c1f4035da32537b043245a06afa7bf3904c9be15adf0abb7c11ef","typeString":"literal_string \"Owner already has access\""}],"id":7528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5576:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5576:64:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7536,"nodeType":"ExpressionStatement","src":"5576:64:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7537,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"5655:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5663:8:22","memberName":"isPublic","nodeType":"MemberAccess","referencedDeclaration":7179,"src":"5655:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7539,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"5675:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5683:11:22","memberName":"accessPrice","nodeType":"MemberAccess","referencedDeclaration":7183,"src":"5675:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5697:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5675:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5655:43:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7581,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"6134:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6142:8:22","memberName":"isPublic","nodeType":"MemberAccess","referencedDeclaration":7179,"src":"6134:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7583,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"6154:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6162:11:22","memberName":"accessPrice","nodeType":"MemberAccess","referencedDeclaration":7183,"src":"6154:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6177:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6154:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6134:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7630,"nodeType":"Block","src":"6387:465:22","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":7611,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6527:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6531:6:22","memberName":"sender","nodeType":"MemberAccess","src":"6527:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7613,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"6566:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7614,"name":"_purpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"6603:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7615,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6642:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6648:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"6642:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":7617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6687:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"74727565","id":7618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6721:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":7619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6755:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7610,"name":"AccessRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7206,"src":"6484:13:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AccessRequest_$7206_storage_ptr_$","typeString":"type(struct Dataset.AccessRequest storage pointer)"}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6516:9:22","6555:9:22","6594:7:22","6629:11:22","6675:10:22","6710:9:22","6743:10:22"],"names":["requester","datasetId","purpose","requestedAt","isApproved","isPending","approvedAt"],"nodeType":"FunctionCall","src":"6484:287:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessRequest_$7206_memory_ptr","typeString":"struct Dataset.AccessRequest memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AccessRequest_$7206_memory_ptr","typeString":"struct Dataset.AccessRequest memory"}],"expression":{"baseExpression":{"id":7606,"name":"accessRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"6452:14:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Dataset.AccessRequest storage ref[] storage ref)"}},"id":7608,"indexExpression":{"id":7607,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"6467:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6452:26:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage","typeString":"struct Dataset.AccessRequest storage ref[] storage ref"}},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6479:4:22","memberName":"push","nodeType":"MemberAccess","src":"6452:31:22","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage_ptr_$_t_struct$_AccessRequest_$7206_storage_$returns$__$attached_to$_t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage_ptr_$","typeString":"function (struct Dataset.AccessRequest storage ref[] storage pointer,struct Dataset.AccessRequest storage ref)"}},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6452:320:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7622,"nodeType":"ExpressionStatement","src":"6452:320:22"},{"eventCall":{"arguments":[{"id":7624,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"6808:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7625,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6820:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6824:6:22","memberName":"sender","nodeType":"MemberAccess","src":"6820:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7627,"name":"_purpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"6832:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7623,"name":"AccessRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"6792:15:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6792:49:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7629,"nodeType":"EmitStatement","src":"6787:54:22"}]},"id":7631,"nodeType":"IfStatement","src":"6130:722:22","trueBody":{"id":7605,"nodeType":"Block","src":"6180:201:22","statements":[{"expression":{"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7588,"name":"hasAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"6259:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7592,"indexExpression":{"id":7589,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"6269:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6259:21:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7593,"indexExpression":{"expression":{"id":7590,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6281:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6285:6:22","memberName":"sender","nodeType":"MemberAccess","src":"6281:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6259:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6295:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6259:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7596,"nodeType":"ExpressionStatement","src":"6259:40:22"},{"eventCall":{"arguments":[{"id":7598,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"6332:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7599,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6344:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6348:6:22","memberName":"sender","nodeType":"MemberAccess","src":"6344:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7601,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"6356:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6364:5:22","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":7167,"src":"6356:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7597,"name":"AccessGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"6318:13:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6318:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7604,"nodeType":"EmitStatement","src":"6313:57:22"}]}},"id":7632,"nodeType":"IfStatement","src":"5651:1201:22","trueBody":{"id":7580,"nodeType":"Block","src":"5700:424:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7545,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5722:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5726:5:22","memberName":"value","nodeType":"MemberAccess","src":"5722:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":7547,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"5735:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5743:11:22","memberName":"accessPrice","nodeType":"MemberAccess","referencedDeclaration":7183,"src":"5735:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5722:32:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061796d656e74","id":7550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5756:22:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""},"value":"Insufficient payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""}],"id":7544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5714:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5714:65:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7552,"nodeType":"ExpressionStatement","src":"5714:65:22"},{"expression":{"id":7560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7553,"name":"hasAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"5871:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7557,"indexExpression":{"id":7554,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"5881:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5871:21:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7558,"indexExpression":{"expression":{"id":7555,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5893:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5897:6:22","memberName":"sender","nodeType":"MemberAccess","src":"5893:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5871:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5907:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5871:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7561,"nodeType":"ExpressionStatement","src":"5871:40:22"},{"expression":{"arguments":[{"expression":{"id":7568,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6019:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6023:5:22","memberName":"value","nodeType":"MemberAccess","src":"6019:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7564,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"5995:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6003:5:22","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":7167,"src":"5995:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5987:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7562,"name":"address","nodeType":"ElementaryTypeName","src":"5987:8:22","stateMutability":"payable","typeDescriptions":{}}},"id":7566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5987:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6010:8:22","memberName":"transfer","nodeType":"MemberAccess","src":"5987:31:22","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5987:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7571,"nodeType":"ExpressionStatement","src":"5987:42:22"},{"eventCall":{"arguments":[{"id":7573,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"6075:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7574,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6087:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6091:6:22","memberName":"sender","nodeType":"MemberAccess","src":"6087:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7576,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"6099:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6107:5:22","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":7167,"src":"6099:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7572,"name":"AccessGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"6061:13:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6061:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7579,"nodeType":"EmitStatement","src":"6056:57:22"}]}}]},"documentation":{"id":7498,"nodeType":"StructuredDocumentation","src":"5130:151:22","text":" @dev Request access to a dataset\n @param _datasetId ID of the dataset\n @param _purpose Purpose for accessing the dataset"},"functionSelector":"dab52a76","id":7634,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7505,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"5406:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7506,"kind":"modifierInvocation","modifierName":{"id":7504,"name":"datasetExists","nameLocations":["5392:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7330,"src":"5392:13:22"},"nodeType":"ModifierInvocation","src":"5392:25:22"},{"id":7508,"kind":"modifierInvocation","modifierName":{"id":7507,"name":"nonReentrant","nameLocations":["5418:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"5418:12:22"},"nodeType":"ModifierInvocation","src":"5418:12:22"}],"name":"requestAccess","nameLocation":"5295:13:22","nodeType":"FunctionDefinition","parameters":{"id":7503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7500,"mutability":"mutable","name":"_datasetId","nameLocation":"5326:10:22","nodeType":"VariableDeclaration","scope":7634,"src":"5318:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7499,"name":"uint256","nodeType":"ElementaryTypeName","src":"5318:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7502,"mutability":"mutable","name":"_purpose","nameLocation":"5360:8:22","nodeType":"VariableDeclaration","scope":7634,"src":"5346:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7501,"name":"string","nodeType":"ElementaryTypeName","src":"5346:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5308:66:22"},"returnParameters":{"id":7509,"nodeType":"ParameterList","parameters":[],"src":"5431:0:22"},"scope":8038,"src":"5286:1572:22","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7720,"nodeType":"Block","src":"7282:619:22","statements":[{"expression":{"arguments":[{"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7300:29:22","subExpression":{"baseExpression":{"baseExpression":{"id":7651,"name":"hasAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"7301:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7653,"indexExpression":{"id":7652,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"7311:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7301:21:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7655,"indexExpression":{"id":7654,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"7323:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7301:28:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5573657220616c72656164792068617320616363657373","id":7657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7331:25:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_a9fd5759936740676d3dcde7ea86d41b7b667404d60ac1d91874155f9f420a67","typeString":"literal_string \"User already has access\""},"value":"User already has access"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a9fd5759936740676d3dcde7ea86d41b7b667404d60ac1d91874155f9f420a67","typeString":"literal_string \"User already has access\""}],"id":7650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7292:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7292:65:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7659,"nodeType":"ExpressionStatement","src":"7292:65:22"},{"expression":{"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7660,"name":"hasAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"7368:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7663,"indexExpression":{"id":7661,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"7378:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7368:21:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7664,"indexExpression":{"id":7662,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"7390:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7368:28:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7399:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7368:35:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7667,"nodeType":"ExpressionStatement","src":"7368:35:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7668,"name":"_requestIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"7465:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":7669,"name":"accessRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"7481:14:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Dataset.AccessRequest storage ref[] storage ref)"}},"id":7671,"indexExpression":{"id":7670,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"7496:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7481:26:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage","typeString":"struct Dataset.AccessRequest storage ref[] storage ref"}},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7508:6:22","memberName":"length","nodeType":"MemberAccess","src":"7481:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7465:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7712,"nodeType":"IfStatement","src":"7461:374:22","trueBody":{"id":7711,"nodeType":"Block","src":"7516:319:22","statements":[{"assignments":[7676],"declarations":[{"constant":false,"id":7676,"mutability":"mutable","name":"request","nameLocation":"7552:7:22","nodeType":"VariableDeclaration","scope":7711,"src":"7530:29:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRequest_$7206_storage_ptr","typeString":"struct Dataset.AccessRequest"},"typeName":{"id":7675,"nodeType":"UserDefinedTypeName","pathNode":{"id":7674,"name":"AccessRequest","nameLocations":["7530:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7206,"src":"7530:13:22"},"referencedDeclaration":7206,"src":"7530:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRequest_$7206_storage_ptr","typeString":"struct Dataset.AccessRequest"}},"visibility":"internal"}],"id":7682,"initialValue":{"baseExpression":{"baseExpression":{"id":7677,"name":"accessRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"7562:14:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Dataset.AccessRequest storage ref[] storage ref)"}},"id":7679,"indexExpression":{"id":7678,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"7577:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7562:26:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage","typeString":"struct Dataset.AccessRequest storage ref[] storage ref"}},"id":7681,"indexExpression":{"id":7680,"name":"_requestIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"7589:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7562:41:22","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRequest_$7206_storage","typeString":"struct Dataset.AccessRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7530:73:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7683,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"7621:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRequest_$7206_storage_ptr","typeString":"struct Dataset.AccessRequest storage pointer"}},"id":7684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7629:9:22","memberName":"requester","nodeType":"MemberAccess","referencedDeclaration":7193,"src":"7621:17:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7685,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"7642:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7621:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"id":7687,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"7651:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRequest_$7206_storage_ptr","typeString":"struct Dataset.AccessRequest storage pointer"}},"id":7688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7659:9:22","memberName":"isPending","nodeType":"MemberAccess","referencedDeclaration":7203,"src":"7651:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7621:47:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7710,"nodeType":"IfStatement","src":"7617:208:22","trueBody":{"id":7709,"nodeType":"Block","src":"7670:155:22","statements":[{"expression":{"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7690,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"7688:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRequest_$7206_storage_ptr","typeString":"struct Dataset.AccessRequest storage pointer"}},"id":7692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7696:10:22","memberName":"isApproved","nodeType":"MemberAccess","referencedDeclaration":7201,"src":"7688:18:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7709:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7688:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7695,"nodeType":"ExpressionStatement","src":"7688:25:22"},{"expression":{"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7696,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"7731:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRequest_$7206_storage_ptr","typeString":"struct Dataset.AccessRequest storage pointer"}},"id":7698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7739:9:22","memberName":"isPending","nodeType":"MemberAccess","referencedDeclaration":7203,"src":"7731:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7751:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7731:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7701,"nodeType":"ExpressionStatement","src":"7731:25:22"},{"expression":{"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7702,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"7774:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRequest_$7206_storage_ptr","typeString":"struct Dataset.AccessRequest storage pointer"}},"id":7704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7782:10:22","memberName":"approvedAt","nodeType":"MemberAccess","referencedDeclaration":7205,"src":"7774:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7705,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7795:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7801:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"7795:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7774:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7708,"nodeType":"ExpressionStatement","src":"7774:36:22"}]}}]}},{"eventCall":{"arguments":[{"id":7714,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"7864:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7715,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"7876:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7716,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7883:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7887:6:22","memberName":"sender","nodeType":"MemberAccess","src":"7883:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7713,"name":"AccessGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"7850:13:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7850:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7719,"nodeType":"EmitStatement","src":"7845:49:22"}]},"documentation":{"id":7635,"nodeType":"StructuredDocumentation","src":"6864:240:22","text":" @dev Grant access to a user (for private datasets)\n @param _datasetId ID of the dataset\n @param _user Address of the user to grant access\n @param _requestIndex Index of the access request (if applicable)"},"functionSelector":"d603b284","id":7721,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7644,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"7241:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7645,"kind":"modifierInvocation","modifierName":{"id":7643,"name":"datasetExists","nameLocations":["7227:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7330,"src":"7227:13:22"},"nodeType":"ModifierInvocation","src":"7227:25:22"},{"arguments":[{"id":7647,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"7270:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7648,"kind":"modifierInvocation","modifierName":{"id":7646,"name":"onlyDatasetOwner","nameLocations":["7253:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":7317,"src":"7253:16:22"},"nodeType":"ModifierInvocation","src":"7253:28:22"}],"name":"grantAccess","nameLocation":"7118:11:22","nodeType":"FunctionDefinition","parameters":{"id":7642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7637,"mutability":"mutable","name":"_datasetId","nameLocation":"7147:10:22","nodeType":"VariableDeclaration","scope":7721,"src":"7139:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7636,"name":"uint256","nodeType":"ElementaryTypeName","src":"7139:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7639,"mutability":"mutable","name":"_user","nameLocation":"7175:5:22","nodeType":"VariableDeclaration","scope":7721,"src":"7167:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7638,"name":"address","nodeType":"ElementaryTypeName","src":"7167:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7641,"mutability":"mutable","name":"_requestIndex","nameLocation":"7198:13:22","nodeType":"VariableDeclaration","scope":7721,"src":"7190:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7640,"name":"uint256","nodeType":"ElementaryTypeName","src":"7190:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7129:88:22"},"returnParameters":{"id":7649,"nodeType":"ParameterList","parameters":[],"src":"7282:0:22"},"scope":8038,"src":"7109:792:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7803,"nodeType":"Block","src":"8379:685:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7742,"name":"_newDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"8403:12:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8397:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7740,"name":"bytes","nodeType":"ElementaryTypeName","src":"8397:5:22","typeDescriptions":{}}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8397:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8417:6:22","memberName":"length","nodeType":"MemberAccess","src":"8397:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8426:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8397:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4461746120686173682063616e6e6f7420626520656d707479","id":7747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8429:27:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e6cccea1095d8f52d1055d15cafa9b4edf93b9799fecf98bb15aa068e7a179e","typeString":"literal_string \"Data hash cannot be empty\""},"value":"Data hash cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0e6cccea1095d8f52d1055d15cafa9b4edf93b9799fecf98bb15aa068e7a179e","typeString":"literal_string \"Data hash cannot be empty\""}],"id":7739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8389:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8389:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7749,"nodeType":"ExpressionStatement","src":"8389:68:22"},{"assignments":[7752],"declarations":[{"constant":false,"id":7752,"mutability":"mutable","name":"dataset","nameLocation":"8488:7:22","nodeType":"VariableDeclaration","scope":7803,"src":"8468:27:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo"},"typeName":{"id":7751,"nodeType":"UserDefinedTypeName","pathNode":{"id":7750,"name":"DatasetInfo","nameLocations":["8468:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":7191,"src":"8468:11:22"},"referencedDeclaration":7191,"src":"8468:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo"}},"visibility":"internal"}],"id":7756,"initialValue":{"baseExpression":{"id":7753,"name":"datasets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"8498:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DatasetInfo_$7191_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetInfo storage ref)"}},"id":7755,"indexExpression":{"id":7754,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"8507:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8498:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage","typeString":"struct Dataset.DatasetInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8468:50:22"},{"expression":{"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7757,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"8528:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8536:8:22","memberName":"dataHash","nodeType":"MemberAccess","referencedDeclaration":7169,"src":"8528:16:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7760,"name":"_newDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"8547:12:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8528:31:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7762,"nodeType":"ExpressionStatement","src":"8528:31:22"},{"expression":{"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7763,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"8569:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7765,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8577:12:22","memberName":"metadataHash","nodeType":"MemberAccess","referencedDeclaration":7171,"src":"8569:20:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7766,"name":"_newMetadataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"8592:16:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8569:39:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7768,"nodeType":"ExpressionStatement","src":"8569:39:22"},{"expression":{"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7769,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"8618:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8626:11:22","memberName":"lastUpdated","nodeType":"MemberAccess","referencedDeclaration":7175,"src":"8618:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7772,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8640:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8646:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"8640:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8618:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7775,"nodeType":"ExpressionStatement","src":"8618:37:22"},{"expression":{"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8665:17:22","subExpression":{"expression":{"id":7776,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"8665:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8673:7:22","memberName":"version","nodeType":"MemberAccess","referencedDeclaration":7177,"src":"8665:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7780,"nodeType":"ExpressionStatement","src":"8665:17:22"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":7786,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"8802:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8810:7:22","memberName":"version","nodeType":"MemberAccess","referencedDeclaration":7177,"src":"8802:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7788,"name":"_newDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"8841:12:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7789,"name":"_newMetadataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"8881:16:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7790,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8922:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8928:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"8922:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7792,"name":"_changeLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"8962:10:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7785,"name":"DatasetVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"8764:14:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DatasetVersion_$7217_storage_ptr_$","typeString":"type(struct Dataset.DatasetVersion storage pointer)"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8793:7:22","8831:8:22","8867:12:22","8911:9:22","8951:9:22"],"names":["version","dataHash","metadataHash","timestamp","changeLog"],"nodeType":"FunctionCall","src":"8764:219:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DatasetVersion_$7217_memory_ptr","typeString":"struct Dataset.DatasetVersion memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DatasetVersion_$7217_memory_ptr","typeString":"struct Dataset.DatasetVersion memory"}],"expression":{"baseExpression":{"id":7781,"name":"datasetVersions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"8731:15:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetVersion storage ref[] storage ref)"}},"id":7783,"indexExpression":{"id":7782,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"8747:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8731:27:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage","typeString":"struct Dataset.DatasetVersion storage ref[] storage ref"}},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8759:4:22","memberName":"push","nodeType":"MemberAccess","src":"8731:32:22","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage_ptr_$_t_struct$_DatasetVersion_$7217_storage_$returns$__$attached_to$_t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage_ptr_$","typeString":"function (struct Dataset.DatasetVersion storage ref[] storage pointer,struct Dataset.DatasetVersion storage ref)"}},"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8731:253:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7795,"nodeType":"ExpressionStatement","src":"8731:253:22"},{"eventCall":{"arguments":[{"id":7797,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"9015:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7798,"name":"dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"9027:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo storage pointer"}},"id":7799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9035:7:22","memberName":"version","nodeType":"MemberAccess","referencedDeclaration":7177,"src":"9027:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7800,"name":"_newDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"9044:12:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7796,"name":"DatasetUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"9000:14:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:57:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7802,"nodeType":"EmitStatement","src":"8995:62:22"}]},"documentation":{"id":7722,"nodeType":"StructuredDocumentation","src":"7907:236:22","text":" @dev Update dataset with new version\n @param _datasetId ID of the dataset\n @param _newDataHash New data hash\n @param _newMetadataHash New metadata hash\n @param _changeLog Description of changes"},"functionSelector":"a1d534cc","id":7804,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7733,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"8338:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7734,"kind":"modifierInvocation","modifierName":{"id":7732,"name":"datasetExists","nameLocations":["8324:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7330,"src":"8324:13:22"},"nodeType":"ModifierInvocation","src":"8324:25:22"},{"arguments":[{"id":7736,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"8367:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7737,"kind":"modifierInvocation","modifierName":{"id":7735,"name":"onlyDatasetOwner","nameLocations":["8350:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":7317,"src":"8350:16:22"},"nodeType":"ModifierInvocation","src":"8350:28:22"}],"name":"updateDataset","nameLocation":"8157:13:22","nodeType":"FunctionDefinition","parameters":{"id":7731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7724,"mutability":"mutable","name":"_datasetId","nameLocation":"8188:10:22","nodeType":"VariableDeclaration","scope":7804,"src":"8180:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7723,"name":"uint256","nodeType":"ElementaryTypeName","src":"8180:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7726,"mutability":"mutable","name":"_newDataHash","nameLocation":"8222:12:22","nodeType":"VariableDeclaration","scope":7804,"src":"8208:26:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7725,"name":"string","nodeType":"ElementaryTypeName","src":"8208:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7728,"mutability":"mutable","name":"_newMetadataHash","nameLocation":"8258:16:22","nodeType":"VariableDeclaration","scope":7804,"src":"8244:30:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7727,"name":"string","nodeType":"ElementaryTypeName","src":"8244:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7730,"mutability":"mutable","name":"_changeLog","nameLocation":"8298:10:22","nodeType":"VariableDeclaration","scope":7804,"src":"8284:24:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7729,"name":"string","nodeType":"ElementaryTypeName","src":"8284:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8170:144:22"},"returnParameters":{"id":7738,"nodeType":"ParameterList","parameters":[],"src":"8379:0:22"},"scope":8038,"src":"8148:916:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7830,"nodeType":"Block","src":"9362:113:22","statements":[{"expression":{"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7818,"name":"datasets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"9372:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DatasetInfo_$7191_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetInfo storage ref)"}},"id":7820,"indexExpression":{"id":7819,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"9381:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9372:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage","typeString":"struct Dataset.DatasetInfo storage ref"}},"id":7821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9393:10:22","memberName":"isVerified","nodeType":"MemberAccess","referencedDeclaration":7181,"src":"9372:31:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7822,"name":"_verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"9406:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9372:43:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7824,"nodeType":"ExpressionStatement","src":"9372:43:22"},{"eventCall":{"arguments":[{"id":7826,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"9446:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7827,"name":"_verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"9458:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7825,"name":"DatasetVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"9430:15:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9430:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7829,"nodeType":"EmitStatement","src":"9425:43:22"}]},"documentation":{"id":7805,"nodeType":"StructuredDocumentation","src":"9070:147:22","text":" @dev Verify a dataset (only by verifiers)\n @param _datasetId ID of the dataset\n @param _verified Verification status"},"functionSelector":"fe2cb4c5","id":7831,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7812,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"9326:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7813,"kind":"modifierInvocation","modifierName":{"id":7811,"name":"datasetExists","nameLocations":["9312:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7330,"src":"9312:13:22"},"nodeType":"ModifierInvocation","src":"9312:25:22"},{"arguments":[{"id":7815,"name":"VERIFIER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"9347:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7816,"kind":"modifierInvocation","modifierName":{"id":7814,"name":"onlyRole","nameLocations":["9338:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"9338:8:22"},"nodeType":"ModifierInvocation","src":"9338:23:22"}],"name":"verifyDataset","nameLocation":"9231:13:22","nodeType":"FunctionDefinition","parameters":{"id":7810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7807,"mutability":"mutable","name":"_datasetId","nameLocation":"9262:10:22","nodeType":"VariableDeclaration","scope":7831,"src":"9254:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7806,"name":"uint256","nodeType":"ElementaryTypeName","src":"9254:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7809,"mutability":"mutable","name":"_verified","nameLocation":"9287:9:22","nodeType":"VariableDeclaration","scope":7831,"src":"9282:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7808,"name":"bool","nodeType":"ElementaryTypeName","src":"9282:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9244:58:22"},"returnParameters":{"id":7817,"nodeType":"ParameterList","parameters":[],"src":"9362:0:22"},"scope":8038,"src":"9222:253:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7862,"nodeType":"Block","src":"9671:194:22","statements":[{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":7841,"name":"hasAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"9689:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7843,"indexExpression":{"id":7842,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"9699:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9689:21:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7846,"indexExpression":{"expression":{"id":7844,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9711:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9715:6:22","memberName":"sender","nodeType":"MemberAccess","src":"9711:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9689:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2061636365737320746f2064617461736574","id":7847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9724:22:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7f75cb1f331a62f3b209a05ae6efd0cb43162ccbe4b4f48dc8fbfa6470a285b","typeString":"literal_string \"No access to dataset\""},"value":"No access to dataset"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7f75cb1f331a62f3b209a05ae6efd0cb43162ccbe4b4f48dc8fbfa6470a285b","typeString":"literal_string \"No access to dataset\""}],"id":7840,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9681:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9681:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7849,"nodeType":"ExpressionStatement","src":"9681:66:22"},{"expression":{"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9766:36:22","subExpression":{"expression":{"baseExpression":{"id":7850,"name":"datasets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"9766:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DatasetInfo_$7191_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetInfo storage ref)"}},"id":7852,"indexExpression":{"id":7851,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"9775:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9766:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage","typeString":"struct Dataset.DatasetInfo storage ref"}},"id":7853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9787:13:22","memberName":"downloadCount","nodeType":"MemberAccess","referencedDeclaration":7188,"src":"9766:34:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7855,"nodeType":"ExpressionStatement","src":"9766:36:22"},{"eventCall":{"arguments":[{"id":7857,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"9835:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7858,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9847:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9851:6:22","memberName":"sender","nodeType":"MemberAccess","src":"9847:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7856,"name":"DatasetDownloaded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7300,"src":"9817:17:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":7860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7861,"nodeType":"EmitStatement","src":"9812:46:22"}]},"documentation":{"id":7832,"nodeType":"StructuredDocumentation","src":"9481:106:22","text":" @dev Record dataset download (for analytics)\n @param _datasetId ID of the dataset"},"functionSelector":"4b51c301","id":7863,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7837,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"9659:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7838,"kind":"modifierInvocation","modifierName":{"id":7836,"name":"datasetExists","nameLocations":["9645:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7330,"src":"9645:13:22"},"nodeType":"ModifierInvocation","src":"9645:25:22"}],"name":"recordDownload","nameLocation":"9601:14:22","nodeType":"FunctionDefinition","parameters":{"id":7835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7834,"mutability":"mutable","name":"_datasetId","nameLocation":"9624:10:22","nodeType":"VariableDeclaration","scope":7863,"src":"9616:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7833,"name":"uint256","nodeType":"ElementaryTypeName","src":"9616:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9615:20:22"},"returnParameters":{"id":7839,"nodeType":"ParameterList","parameters":[],"src":"9671:0:22"},"scope":8038,"src":"9592:273:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7884,"nodeType":"Block","src":"10155:60:22","statements":[{"expression":{"id":7882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7877,"name":"datasets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"10165:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DatasetInfo_$7191_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetInfo storage ref)"}},"id":7879,"indexExpression":{"id":7878,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"10174:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10165:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage","typeString":"struct Dataset.DatasetInfo storage ref"}},"id":7880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10186:13:22","memberName":"citationCount","nodeType":"MemberAccess","referencedDeclaration":7190,"src":"10165:34:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7881,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"10202:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10165:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7883,"nodeType":"ExpressionStatement","src":"10165:43:22"}]},"documentation":{"id":7864,"nodeType":"StructuredDocumentation","src":"9871:128:22","text":" @dev Update citation count\n @param _datasetId ID of the dataset\n @param _count New citation count"},"functionSelector":"fef7e61a","id":7885,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7871,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"10114:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7872,"kind":"modifierInvocation","modifierName":{"id":7870,"name":"datasetExists","nameLocations":["10100:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7330,"src":"10100:13:22"},"nodeType":"ModifierInvocation","src":"10100:25:22"},{"arguments":[{"id":7874,"name":"DATASET_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"10135:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7875,"kind":"modifierInvocation","modifierName":{"id":7873,"name":"onlyRole","nameLocations":["10126:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"10126:8:22"},"nodeType":"ModifierInvocation","src":"10126:28:22"}],"name":"updateCitationCount","nameLocation":"10013:19:22","nodeType":"FunctionDefinition","parameters":{"id":7869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7866,"mutability":"mutable","name":"_datasetId","nameLocation":"10050:10:22","nodeType":"VariableDeclaration","scope":7885,"src":"10042:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7865,"name":"uint256","nodeType":"ElementaryTypeName","src":"10042:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7868,"mutability":"mutable","name":"_count","nameLocation":"10078:6:22","nodeType":"VariableDeclaration","scope":7885,"src":"10070:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7867,"name":"uint256","nodeType":"ElementaryTypeName","src":"10070:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10032:58:22"},"returnParameters":{"id":7876,"nodeType":"ParameterList","parameters":[],"src":"10155:0:22"},"scope":8038,"src":"10004:211:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7901,"nodeType":"Block","src":"10459:44:22","statements":[{"expression":{"baseExpression":{"id":7897,"name":"datasets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"10476:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DatasetInfo_$7191_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetInfo storage ref)"}},"id":7899,"indexExpression":{"id":7898,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"10485:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10476:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage","typeString":"struct Dataset.DatasetInfo storage ref"}},"functionReturnParameters":7896,"id":7900,"nodeType":"Return","src":"10469:27:22"}]},"documentation":{"id":7886,"nodeType":"StructuredDocumentation","src":"10221:124:22","text":" @dev Get dataset information\n @param _datasetId ID of the dataset\n @return DatasetInfo struct"},"functionSelector":"ee004221","id":7902,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7891,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"10418:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7892,"kind":"modifierInvocation","modifierName":{"id":7890,"name":"datasetExists","nameLocations":["10404:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7330,"src":"10404:13:22"},"nodeType":"ModifierInvocation","src":"10404:25:22"}],"name":"getDataset","nameLocation":"10359:10:22","nodeType":"FunctionDefinition","parameters":{"id":7889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7888,"mutability":"mutable","name":"_datasetId","nameLocation":"10378:10:22","nodeType":"VariableDeclaration","scope":7902,"src":"10370:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7887,"name":"uint256","nodeType":"ElementaryTypeName","src":"10370:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10369:20:22"},"returnParameters":{"id":7896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7902,"src":"10439:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_memory_ptr","typeString":"struct Dataset.DatasetInfo"},"typeName":{"id":7894,"nodeType":"UserDefinedTypeName","pathNode":{"id":7893,"name":"DatasetInfo","nameLocations":["10439:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":7191,"src":"10439:11:22"},"referencedDeclaration":7191,"src":"10439:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage_ptr","typeString":"struct Dataset.DatasetInfo"}},"visibility":"internal"}],"src":"10438:20:22"},"scope":8038,"src":"10350:153:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7919,"nodeType":"Block","src":"10770:51:22","statements":[{"expression":{"baseExpression":{"id":7915,"name":"datasetVersions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"10787:15:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetVersion storage ref[] storage ref)"}},"id":7917,"indexExpression":{"id":7916,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"10803:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10787:27:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage","typeString":"struct Dataset.DatasetVersion storage ref[] storage ref"}},"functionReturnParameters":7914,"id":7918,"nodeType":"Return","src":"10780:34:22"}]},"documentation":{"id":7903,"nodeType":"StructuredDocumentation","src":"10509:134:22","text":" @dev Get dataset versions\n @param _datasetId ID of the dataset\n @return Array of DatasetVersion structs"},"functionSelector":"9abd9d62","id":7920,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7908,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"10724:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7909,"kind":"modifierInvocation","modifierName":{"id":7907,"name":"datasetExists","nameLocations":["10710:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7330,"src":"10710:13:22"},"nodeType":"ModifierInvocation","src":"10710:25:22"}],"name":"getDatasetVersions","nameLocation":"10657:18:22","nodeType":"FunctionDefinition","parameters":{"id":7906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7905,"mutability":"mutable","name":"_datasetId","nameLocation":"10684:10:22","nodeType":"VariableDeclaration","scope":7920,"src":"10676:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7904,"name":"uint256","nodeType":"ElementaryTypeName","src":"10676:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10675:20:22"},"returnParameters":{"id":7914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7920,"src":"10745:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DatasetVersion_$7217_memory_ptr_$dyn_memory_ptr","typeString":"struct Dataset.DatasetVersion[]"},"typeName":{"baseType":{"id":7911,"nodeType":"UserDefinedTypeName","pathNode":{"id":7910,"name":"DatasetVersion","nameLocations":["10745:14:22"],"nodeType":"IdentifierPath","referencedDeclaration":7217,"src":"10745:14:22"},"referencedDeclaration":7217,"src":"10745:14:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetVersion_$7217_storage_ptr","typeString":"struct Dataset.DatasetVersion"}},"id":7912,"nodeType":"ArrayTypeName","src":"10745:16:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DatasetVersion_$7217_storage_$dyn_storage_ptr","typeString":"struct Dataset.DatasetVersion[]"}},"visibility":"internal"}],"src":"10744:25:22"},"scope":8038,"src":"10648:173:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7954,"nodeType":"Block","src":"11098:228:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7934,"name":"datasets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"11129:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DatasetInfo_$7191_storage_$","typeString":"mapping(uint256 => struct Dataset.DatasetInfo storage ref)"}},"id":7936,"indexExpression":{"id":7935,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"11138:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11129:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_DatasetInfo_$7191_storage","typeString":"struct Dataset.DatasetInfo storage ref"}},"id":7937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11150:5:22","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":7167,"src":"11129:26:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7938,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11159:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11163:6:22","memberName":"sender","nodeType":"MemberAccess","src":"11159:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11129:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":7942,"name":"DATASET_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"11181:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7943,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11201:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11205:6:22","memberName":"sender","nodeType":"MemberAccess","src":"11201:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7941,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"11173:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11173:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11129:83:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f207669657720616363657373207265717565737473","id":7947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11226:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c4c87bd0fd0d85e7a265439057b4dc6365d4b2ecffb2a311f30a6925fb7993e2","typeString":"literal_string \"Not authorized to view access requests\""},"value":"Not authorized to view access requests"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c4c87bd0fd0d85e7a265439057b4dc6365d4b2ecffb2a311f30a6925fb7993e2","typeString":"literal_string \"Not authorized to view access requests\""}],"id":7933,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11108:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11108:168:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7949,"nodeType":"ExpressionStatement","src":"11108:168:22"},{"expression":{"baseExpression":{"id":7950,"name":"accessRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"11293:14:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Dataset.AccessRequest storage ref[] storage ref)"}},"id":7952,"indexExpression":{"id":7951,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"11308:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11293:26:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage","typeString":"struct Dataset.AccessRequest storage ref[] storage ref"}},"functionReturnParameters":7932,"id":7953,"nodeType":"Return","src":"11286:33:22"}]},"documentation":{"id":7921,"nodeType":"StructuredDocumentation","src":"10827:146:22","text":" @dev Get access requests for a dataset\n @param _datasetId ID of the dataset\n @return Array of AccessRequest structs"},"functionSelector":"c0b281f2","id":7955,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7926,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"11053:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7927,"kind":"modifierInvocation","modifierName":{"id":7925,"name":"datasetExists","nameLocations":["11039:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7330,"src":"11039:13:22"},"nodeType":"ModifierInvocation","src":"11039:25:22"}],"name":"getAccessRequests","nameLocation":"10987:17:22","nodeType":"FunctionDefinition","parameters":{"id":7924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7923,"mutability":"mutable","name":"_datasetId","nameLocation":"11013:10:22","nodeType":"VariableDeclaration","scope":7955,"src":"11005:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7922,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:20:22"},"returnParameters":{"id":7932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7955,"src":"11074:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessRequest_$7206_memory_ptr_$dyn_memory_ptr","typeString":"struct Dataset.AccessRequest[]"},"typeName":{"baseType":{"id":7929,"nodeType":"UserDefinedTypeName","pathNode":{"id":7928,"name":"AccessRequest","nameLocations":["11074:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7206,"src":"11074:13:22"},"referencedDeclaration":7206,"src":"11074:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRequest_$7206_storage_ptr","typeString":"struct Dataset.AccessRequest"}},"id":7930,"nodeType":"ArrayTypeName","src":"11074:15:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessRequest_$7206_storage_$dyn_storage_ptr","typeString":"struct Dataset.AccessRequest[]"}},"visibility":"internal"}],"src":"11073:24:22"},"scope":8038,"src":"10978:348:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7968,"nodeType":"Block","src":"11554:45:22","statements":[{"expression":{"baseExpression":{"id":7964,"name":"ownerDatasets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"11571:13:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7966,"indexExpression":{"id":7965,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"11585:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11571:21:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":7963,"id":7967,"nodeType":"Return","src":"11564:28:22"}]},"documentation":{"id":7956,"nodeType":"StructuredDocumentation","src":"11332:134:22","text":" @dev Get datasets owned by an address\n @param _owner Address of the owner\n @return Array of dataset IDs"},"functionSelector":"f1767ffd","id":7969,"implemented":true,"kind":"function","modifiers":[],"name":"getOwnerDatasets","nameLocation":"11480:16:22","nodeType":"FunctionDefinition","parameters":{"id":7959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7958,"mutability":"mutable","name":"_owner","nameLocation":"11505:6:22","nodeType":"VariableDeclaration","scope":7969,"src":"11497:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7957,"name":"address","nodeType":"ElementaryTypeName","src":"11497:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11496:16:22"},"returnParameters":{"id":7963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7969,"src":"11536:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7960,"name":"uint256","nodeType":"ElementaryTypeName","src":"11536:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7961,"nodeType":"ArrayTypeName","src":"11536:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11535:18:22"},"scope":8038,"src":"11471:128:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7985,"nodeType":"Block","src":"11876:52:22","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":7979,"name":"hasAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"11893:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7981,"indexExpression":{"id":7980,"name":"_datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"11903:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11893:21:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7983,"indexExpression":{"id":7982,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"11915:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11893:28:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7978,"id":7984,"nodeType":"Return","src":"11886:35:22"}]},"documentation":{"id":7970,"nodeType":"StructuredDocumentation","src":"11605:181:22","text":" @dev Check if user has access to dataset\n @param _datasetId ID of the dataset\n @param _user Address of the user\n @return Whether user has access"},"functionSelector":"d13c8703","id":7986,"implemented":true,"kind":"function","modifiers":[],"name":"checkAccess","nameLocation":"11800:11:22","nodeType":"FunctionDefinition","parameters":{"id":7975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7972,"mutability":"mutable","name":"_datasetId","nameLocation":"11820:10:22","nodeType":"VariableDeclaration","scope":7986,"src":"11812:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7971,"name":"uint256","nodeType":"ElementaryTypeName","src":"11812:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7974,"mutability":"mutable","name":"_user","nameLocation":"11840:5:22","nodeType":"VariableDeclaration","scope":7986,"src":"11832:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7973,"name":"address","nodeType":"ElementaryTypeName","src":"11832:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11811:35:22"},"returnParameters":{"id":7978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7986,"src":"11870:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7976,"name":"bool","nodeType":"ElementaryTypeName","src":"11870:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11869:6:22"},"scope":8038,"src":"11791:137:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7995,"nodeType":"Block","src":"12089:35:22","statements":[{"expression":{"id":7993,"name":"allDatasets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7254,"src":"12106:11:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":7992,"id":7994,"nodeType":"Return","src":"12099:18:22"}]},"documentation":{"id":7987,"nodeType":"StructuredDocumentation","src":"11934:83:22","text":" @dev Get all dataset IDs\n @return Array of all dataset IDs"},"functionSelector":"4d72cd12","id":7996,"implemented":true,"kind":"function","modifiers":[],"name":"getAllDatasets","nameLocation":"12031:14:22","nodeType":"FunctionDefinition","parameters":{"id":7988,"nodeType":"ParameterList","parameters":[],"src":"12045:2:22"},"returnParameters":{"id":7992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7996,"src":"12071:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7989,"name":"uint256","nodeType":"ElementaryTypeName","src":"12071:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7990,"nodeType":"ArrayTypeName","src":"12071:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12070:18:22"},"scope":8038,"src":"12022:102:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8006,"nodeType":"Block","src":"12282:41:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8002,"name":"nextDatasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"12299:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12315:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12299:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8001,"id":8005,"nodeType":"Return","src":"12292:24:22"}]},"documentation":{"id":7997,"nodeType":"StructuredDocumentation","src":"12130:87:22","text":" @dev Get total number of datasets\n @return Total dataset count"},"functionSelector":"1af8e976","id":8007,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalDatasets","nameLocation":"12231:16:22","nodeType":"FunctionDefinition","parameters":{"id":7998,"nodeType":"ParameterList","parameters":[],"src":"12247:2:22"},"returnParameters":{"id":8001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8007,"src":"12273:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7999,"name":"uint256","nodeType":"ElementaryTypeName","src":"12273:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12272:9:22"},"scope":8038,"src":"12222:101:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8021,"nodeType":"Block","src":"12518:52:22","statements":[{"expression":{"arguments":[{"id":8017,"name":"VERIFIER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"12538:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8018,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"12553:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8016,"name":"grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"12528:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12528:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8020,"nodeType":"ExpressionStatement","src":"12528:35:22"}]},"documentation":{"id":8008,"nodeType":"StructuredDocumentation","src":"12329:106:22","text":" @dev Add verifier role to an address\n @param _verifier Address to add as verifier"},"functionSelector":"9000b3d6","id":8022,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8013,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"12498:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8014,"kind":"modifierInvocation","modifierName":{"id":8012,"name":"onlyRole","nameLocations":["12489:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"12489:8:22"},"nodeType":"ModifierInvocation","src":"12489:28:22"}],"name":"addVerifier","nameLocation":"12449:11:22","nodeType":"FunctionDefinition","parameters":{"id":8011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8010,"mutability":"mutable","name":"_verifier","nameLocation":"12469:9:22","nodeType":"VariableDeclaration","scope":8022,"src":"12461:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8009,"name":"address","nodeType":"ElementaryTypeName","src":"12461:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12460:19:22"},"returnParameters":{"id":8015,"nodeType":"ParameterList","parameters":[],"src":"12518:0:22"},"scope":8038,"src":"12440:130:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8036,"nodeType":"Block","src":"12783:53:22","statements":[{"expression":{"arguments":[{"id":8032,"name":"VERIFIER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"12804:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8033,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"12819:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8031,"name":"revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"12793:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":8034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12793:36:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8035,"nodeType":"ExpressionStatement","src":"12793:36:22"}]},"documentation":{"id":8023,"nodeType":"StructuredDocumentation","src":"12576:121:22","text":" @dev Remove verifier role from an address\n @param _verifier Address to remove verifier role from"},"functionSelector":"ca2dfd0a","id":8037,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8028,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"12763:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8029,"kind":"modifierInvocation","modifierName":{"id":8027,"name":"onlyRole","nameLocations":["12754:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"12754:8:22"},"nodeType":"ModifierInvocation","src":"12754:28:22"}],"name":"removeVerifier","nameLocation":"12711:14:22","nodeType":"FunctionDefinition","parameters":{"id":8026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8025,"mutability":"mutable","name":"_verifier","nameLocation":"12734:9:22","nodeType":"VariableDeclaration","scope":8037,"src":"12726:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8024,"name":"address","nodeType":"ElementaryTypeName","src":"12726:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12725:19:22"},"returnParameters":{"id":8030,"nodeType":"ParameterList","parameters":[],"src":"12783:0:22"},"scope":8038,"src":"12702:134:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8039,"src":"231:12607:22","usedErrors":[306,309,393,398,2117],"usedEvents":[318,327,336,404,7264,7272,7280,7288,7294,7300]}],"src":"32:12807:22"},"id":22},"contracts/DeSciNFTSimple.sol":{"ast":{"absolutePath":"contracts/DeSciNFTSimple.sol","exportedSymbols":{"Context":[2051],"DeSciNFTSimple":[8408],"ERC165":[3598],"ERC721":[1653],"ERC721URIStorage":[1916],"ERC721Utils":[2021],"IERC165":[3610],"IERC4906":[555],"IERC721":[1770],"IERC721Errors":[649],"IERC721Metadata":[1944],"Ownable":[527],"ReentrancyGuard":[2172],"Strings":[3574]},"id":8409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8040,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":8041,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8409,"sourceUnit":1654,"src":"58:57:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":8042,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8409,"sourceUnit":1917,"src":"116:78:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8043,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8409,"sourceUnit":528,"src":"195:52:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":8044,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8409,"sourceUnit":2173,"src":"248:59:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8045,"name":"ERC721","nameLocations":["336:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"336:6:23"},"id":8046,"nodeType":"InheritanceSpecifier","src":"336:6:23"},{"baseName":{"id":8047,"name":"ERC721URIStorage","nameLocations":["344:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":1916,"src":"344:16:23"},"id":8048,"nodeType":"InheritanceSpecifier","src":"344:16:23"},{"baseName":{"id":8049,"name":"Ownable","nameLocations":["362:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"362:7:23"},"id":8050,"nodeType":"InheritanceSpecifier","src":"362:7:23"},{"baseName":{"id":8051,"name":"ReentrancyGuard","nameLocations":["371:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":2172,"src":"371:15:23"},"id":8052,"nodeType":"InheritanceSpecifier","src":"371:15:23"}],"canonicalName":"DeSciNFTSimple","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8408,"linearizedBaseContracts":[8408,2172,527,1916,1653,649,1944,555,1770,3598,3610,2051],"name":"DeSciNFTSimple","nameLocation":"318:14:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8054,"mutability":"mutable","name":"_tokenIdCounter","nameLocation":"409:15:23","nodeType":"VariableDeclaration","scope":8408,"src":"393:31:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8053,"name":"uint256","nodeType":"ElementaryTypeName","src":"393:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"canonicalName":"DeSciNFTSimple.ResearchNFT","id":8071,"members":[{"constant":false,"id":8056,"mutability":"mutable","name":"title","nameLocation":"467:5:23","nodeType":"VariableDeclaration","scope":8071,"src":"460:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8055,"name":"string","nodeType":"ElementaryTypeName","src":"460:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8058,"mutability":"mutable","name":"description","nameLocation":"489:11:23","nodeType":"VariableDeclaration","scope":8071,"src":"482:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8057,"name":"string","nodeType":"ElementaryTypeName","src":"482:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8060,"mutability":"mutable","name":"researcher","nameLocation":"518:10:23","nodeType":"VariableDeclaration","scope":8071,"src":"510:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8059,"name":"address","nodeType":"ElementaryTypeName","src":"510:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8062,"mutability":"mutable","name":"createdAt","nameLocation":"546:9:23","nodeType":"VariableDeclaration","scope":8071,"src":"538:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8061,"name":"uint256","nodeType":"ElementaryTypeName","src":"538:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8064,"mutability":"mutable","name":"researchType","nameLocation":"572:12:23","nodeType":"VariableDeclaration","scope":8071,"src":"565:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8063,"name":"string","nodeType":"ElementaryTypeName","src":"565:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8066,"mutability":"mutable","name":"citationCount","nameLocation":"642:13:23","nodeType":"VariableDeclaration","scope":8071,"src":"634:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8065,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8068,"mutability":"mutable","name":"impactScore","nameLocation":"673:11:23","nodeType":"VariableDeclaration","scope":8071,"src":"665:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8067,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8070,"mutability":"mutable","name":"isVerified","nameLocation":"699:10:23","nodeType":"VariableDeclaration","scope":8071,"src":"694:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8069,"name":"bool","nodeType":"ElementaryTypeName","src":"694:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ResearchNFT","nameLocation":"438:11:23","nodeType":"StructDefinition","scope":8408,"src":"431:285:23","visibility":"public"},{"constant":false,"functionSelector":"20a2b3a0","id":8076,"mutability":"mutable","name":"researchNFTs","nameLocation":"761:12:23","nodeType":"VariableDeclaration","scope":8408,"src":"722:51:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ResearchNFT_$8071_storage_$","typeString":"mapping(uint256 => struct DeSciNFTSimple.ResearchNFT)"},"typeName":{"id":8075,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8072,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"722:31:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ResearchNFT_$8071_storage_$","typeString":"mapping(uint256 => struct DeSciNFTSimple.ResearchNFT)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8074,"nodeType":"UserDefinedTypeName","pathNode":{"id":8073,"name":"ResearchNFT","nameLocations":["741:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":8071,"src":"741:11:23"},"referencedDeclaration":8071,"src":"741:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage_ptr","typeString":"struct DeSciNFTSimple.ResearchNFT"}}},"visibility":"public"},{"constant":false,"functionSelector":"2ef706ab","id":8081,"mutability":"mutable","name":"researcherNFTs","nameLocation":"816:14:23","nodeType":"VariableDeclaration","scope":8408,"src":"779:51:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":8080,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8077,"name":"address","nodeType":"ElementaryTypeName","src":"787:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"779:29:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8078,"name":"uint256","nodeType":"ElementaryTypeName","src":"798:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8079,"nodeType":"ArrayTypeName","src":"798:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"9e6b3f42","id":8085,"mutability":"mutable","name":"titleToTokenId","nameLocation":"870:14:23","nodeType":"VariableDeclaration","scope":8408,"src":"836:48:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"typeName":{"id":8084,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8082,"name":"string","nodeType":"ElementaryTypeName","src":"844:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"836:26:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8083,"name":"uint256","nodeType":"ElementaryTypeName","src":"854:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"0c1def36ef14836e9b195f50c1fbc0b8035e8c6c472625326c1add6bb08ccd76","id":8095,"name":"ResearchNFTMinted","nameLocation":"901:17:23","nodeType":"EventDefinition","parameters":{"id":8094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8087,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"944:7:23","nodeType":"VariableDeclaration","scope":8095,"src":"928:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8086,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8089,"indexed":true,"mutability":"mutable","name":"researcher","nameLocation":"977:10:23","nodeType":"VariableDeclaration","scope":8095,"src":"961:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8088,"name":"address","nodeType":"ElementaryTypeName","src":"961:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8091,"indexed":false,"mutability":"mutable","name":"title","nameLocation":"1004:5:23","nodeType":"VariableDeclaration","scope":8095,"src":"997:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8090,"name":"string","nodeType":"ElementaryTypeName","src":"997:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8093,"indexed":false,"mutability":"mutable","name":"researchType","nameLocation":"1026:12:23","nodeType":"VariableDeclaration","scope":8095,"src":"1019:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8092,"name":"string","nodeType":"ElementaryTypeName","src":"1019:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"918:126:23"},"src":"895:150:23"},{"anonymous":false,"eventSelector":"2e2699c09f8992c0d6290f13906bc2ee1123da7fcb3a7524e043593857094766","id":8101,"name":"CitationAdded","nameLocation":"1061:13:23","nodeType":"EventDefinition","parameters":{"id":8100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8097,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1091:7:23","nodeType":"VariableDeclaration","scope":8101,"src":"1075:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8099,"indexed":false,"mutability":"mutable","name":"newCount","nameLocation":"1108:8:23","nodeType":"VariableDeclaration","scope":8101,"src":"1100:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8098,"name":"uint256","nodeType":"ElementaryTypeName","src":"1100:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1074:43:23"},"src":"1055:63:23"},{"anonymous":false,"eventSelector":"bf72494abeb41ebcbebb2336bea955f18098ff14bc9264d4ab666168b67af0b3","id":8107,"name":"ImpactScoreUpdated","nameLocation":"1129:18:23","nodeType":"EventDefinition","parameters":{"id":8106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8103,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1164:7:23","nodeType":"VariableDeclaration","scope":8107,"src":"1148:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8105,"indexed":false,"mutability":"mutable","name":"newScore","nameLocation":"1181:8:23","nodeType":"VariableDeclaration","scope":8107,"src":"1173:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1173:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1147:43:23"},"src":"1123:68:23"},{"anonymous":false,"eventSelector":"4727b85a09e6ca94a7e26b46423373a951492773e32fbefde21a3ca644830351","id":8113,"name":"NFTVerified","nameLocation":"1202:11:23","nodeType":"EventDefinition","parameters":{"id":8112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8109,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1230:7:23","nodeType":"VariableDeclaration","scope":8113,"src":"1214:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1214:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8111,"indexed":false,"mutability":"mutable","name":"verified","nameLocation":"1244:8:23","nodeType":"VariableDeclaration","scope":8113,"src":"1239:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8110,"name":"bool","nodeType":"ElementaryTypeName","src":"1239:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1213:40:23"},"src":"1196:58:23"},{"body":{"id":8128,"nodeType":"Block","src":"1331:36:23","statements":[{"expression":{"id":8126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8124,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"1341:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":8125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1359:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1341:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8127,"nodeType":"ExpressionStatement","src":"1341:19:23"}]},"id":8129,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4465536369205265736561726368204e4654","id":8116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1281:20:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_55cbbf3acade541f74df997c45d00a5c237f9f88249320f43b3b57b205ae2999","typeString":"literal_string \"DeSci Research NFT\""},"value":"DeSci Research NFT"},{"hexValue":"44534349","id":8117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1303:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce58a3745d1cfe7509e63fa94709a4726f4e2a162d0634ef8de38fd0d7e5a21a","typeString":"literal_string \"DSCI\""},"value":"DSCI"}],"id":8118,"kind":"baseConstructorSpecifier","modifierName":{"id":8115,"name":"ERC721","nameLocations":["1274:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"1274:6:23"},"nodeType":"ModifierInvocation","src":"1274:36:23"},{"arguments":[{"expression":{"id":8120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1319:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1323:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1319:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8122,"kind":"baseConstructorSpecifier","modifierName":{"id":8119,"name":"Ownable","nameLocations":["1311:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1311:7:23"},"nodeType":"ModifierInvocation","src":"1311:19:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8114,"nodeType":"ParameterList","parameters":[],"src":"1271:2:23"},"returnParameters":{"id":8123,"nodeType":"ParameterList","parameters":[],"src":"1331:0:23"},"scope":8408,"src":"1260:107:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8222,"nodeType":"Block","src":"1872:805:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8150,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"1896:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1890:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8148,"name":"bytes","nodeType":"ElementaryTypeName","src":"1890:5:23","typeDescriptions":{}}},"id":8151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1890:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1903:6:23","memberName":"length","nodeType":"MemberAccess","src":"1890:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1912:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1890:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469746c652063616e6e6f7420626520656d707479","id":8155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1915:23:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_698ca3c7081ed8237247ee65908074972d8604d6a2052a29e97091f6cc36ebf4","typeString":"literal_string \"Title cannot be empty\""},"value":"Title cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_698ca3c7081ed8237247ee65908074972d8604d6a2052a29e97091f6cc36ebf4","typeString":"literal_string \"Title cannot be empty\""}],"id":8147,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1882:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1882:57:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8157,"nodeType":"ExpressionStatement","src":"1882:57:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8159,"name":"titleToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"1957:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":8161,"indexExpression":{"id":8160,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"1972:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1957:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1957:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526573656172636820776974682074686973207469746c6520616c726561647920657869737473","id":8164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1985:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_fd1897b767b48076908077cc2a0b6e69fc426948bc8f5970c79dae913ef9faad","typeString":"literal_string \"Research with this title already exists\""},"value":"Research with this title already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fd1897b767b48076908077cc2a0b6e69fc426948bc8f5970c79dae913ef9faad","typeString":"literal_string \"Research with this title already exists\""}],"id":8158,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1949:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8166,"nodeType":"ExpressionStatement","src":"1949:78:23"},{"assignments":[8168],"declarations":[{"constant":false,"id":8168,"mutability":"mutable","name":"tokenId","nameLocation":"2046:7:23","nodeType":"VariableDeclaration","scope":8222,"src":"2038:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2038:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8170,"initialValue":{"id":8169,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"2056:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2038:33:23"},{"expression":{"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2081:17:23","subExpression":{"id":8171,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"2081:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8173,"nodeType":"ExpressionStatement","src":"2081:17:23"},{"expression":{"arguments":[{"id":8175,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8132,"src":"2119:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8176,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"2123:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8174,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1331,1361],"referencedDeclaration":1331,"src":"2109:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2109:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8178,"nodeType":"ExpressionStatement","src":"2109:22:23"},{"expression":{"arguments":[{"id":8180,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"2154:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8181,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"2163:3:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8179,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2141:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":8182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8183,"nodeType":"ExpressionStatement","src":"2141:26:23"},{"expression":{"id":8198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8184,"name":"researchNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8076,"src":"2178:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ResearchNFT_$8071_storage_$","typeString":"mapping(uint256 => struct DeSciNFTSimple.ResearchNFT storage ref)"}},"id":8186,"indexExpression":{"id":8185,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"2191:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2178:21:23","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage","typeString":"struct DeSciNFTSimple.ResearchNFT storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8188,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"2235:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8189,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8136,"src":"2267:11:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8190,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8132,"src":"2304:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8191,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2331:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2337:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"2331:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8193,"name":"researchType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"2374:12:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":8194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":8196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2470:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8187,"name":"ResearchNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8071,"src":"2202:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ResearchNFT_$8071_storage_ptr_$","typeString":"type(struct DeSciNFTSimple.ResearchNFT storage pointer)"}},"id":8197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2228:5:23","2254:11:23","2292:10:23","2320:9:23","2360:12:23","2400:13:23","2430:11:23","2458:10:23"],"names":["title","description","researcher","createdAt","researchType","citationCount","impactScore","isVerified"],"nodeType":"FunctionCall","src":"2202:284:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_memory_ptr","typeString":"struct DeSciNFTSimple.ResearchNFT memory"}},"src":"2178:308:23","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage","typeString":"struct DeSciNFTSimple.ResearchNFT storage ref"}},"id":8199,"nodeType":"ExpressionStatement","src":"2178:308:23"},{"expression":{"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8200,"name":"titleToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"2497:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":8202,"indexExpression":{"id":8201,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"2512:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2497:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8203,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"2521:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8205,"nodeType":"ExpressionStatement","src":"2497:31:23"},{"expression":{"arguments":[{"id":8210,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"2562:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":8206,"name":"researcherNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"2538:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":8208,"indexExpression":{"id":8207,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8132,"src":"2553:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2538:18:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2557:4:23","memberName":"push","nodeType":"MemberAccess","src":"2538:23:23","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":8211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2538:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8212,"nodeType":"ExpressionStatement","src":"2538:32:23"},{"eventCall":{"arguments":[{"id":8214,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"2604:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8215,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8132,"src":"2613:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8216,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"2617:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8217,"name":"researchType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"2624:12:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8213,"name":"ResearchNFTMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"2586:17:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory,string memory)"}},"id":8218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2586:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8219,"nodeType":"EmitStatement","src":"2581:56:23"},{"expression":{"id":8220,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"2663:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8146,"id":8221,"nodeType":"Return","src":"2656:14:23"}]},"documentation":{"id":8130,"nodeType":"StructuredDocumentation","src":"1373:276:23","text":" @dev Mint a new research NFT\n @param to Address to mint the NFT to\n @param title Title of the research\n @param description Description of the research\n @param uri URI for the token metadata\n @param researchType Type of research"},"functionSelector":"4f7a3a75","id":8223,"implemented":true,"kind":"function","modifiers":[{"id":8143,"kind":"modifierInvocation","modifierName":{"id":8142,"name":"nonReentrant","nameLocations":["1841:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"1841:12:23"},"nodeType":"ModifierInvocation","src":"1841:12:23"}],"name":"mintResearchNFT","nameLocation":"1663:15:23","nodeType":"FunctionDefinition","parameters":{"id":8141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8132,"mutability":"mutable","name":"to","nameLocation":"1696:2:23","nodeType":"VariableDeclaration","scope":8223,"src":"1688:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8131,"name":"address","nodeType":"ElementaryTypeName","src":"1688:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8134,"mutability":"mutable","name":"title","nameLocation":"1722:5:23","nodeType":"VariableDeclaration","scope":8223,"src":"1708:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8133,"name":"string","nodeType":"ElementaryTypeName","src":"1708:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8136,"mutability":"mutable","name":"description","nameLocation":"1751:11:23","nodeType":"VariableDeclaration","scope":8223,"src":"1737:25:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8135,"name":"string","nodeType":"ElementaryTypeName","src":"1737:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8138,"mutability":"mutable","name":"uri","nameLocation":"1786:3:23","nodeType":"VariableDeclaration","scope":8223,"src":"1772:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8137,"name":"string","nodeType":"ElementaryTypeName","src":"1772:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8140,"mutability":"mutable","name":"researchType","nameLocation":"1813:12:23","nodeType":"VariableDeclaration","scope":8223,"src":"1799:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8139,"name":"string","nodeType":"ElementaryTypeName","src":"1799:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1678:153:23"},"returnParameters":{"id":8146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8223,"src":"1863:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8144,"name":"uint256","nodeType":"ElementaryTypeName","src":"1863:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1862:9:23"},"scope":8408,"src":"1654:1023:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8259,"nodeType":"Block","src":"2850:256:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8231,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"2876:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8230,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"2868:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2868:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2896:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2888:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8233,"name":"address","nodeType":"ElementaryTypeName","src":"2888:7:23","typeDescriptions":{}}},"id":8236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2888:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2868:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2900:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2860:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8240,"nodeType":"ExpressionStatement","src":"2860:63:23"},{"expression":{"id":8245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2942:37:23","subExpression":{"expression":{"baseExpression":{"id":8241,"name":"researchNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8076,"src":"2942:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ResearchNFT_$8071_storage_$","typeString":"mapping(uint256 => struct DeSciNFTSimple.ResearchNFT storage ref)"}},"id":8243,"indexExpression":{"id":8242,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"2955:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2942:21:23","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage","typeString":"struct DeSciNFTSimple.ResearchNFT storage ref"}},"id":8244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2964:13:23","memberName":"citationCount","nodeType":"MemberAccess","referencedDeclaration":8066,"src":"2942:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8246,"nodeType":"ExpressionStatement","src":"2942:37:23"},{"expression":{"arguments":[{"id":8248,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"3008:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8247,"name":"_updateImpactScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"2989:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2989:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8250,"nodeType":"ExpressionStatement","src":"2989:27:23"},{"eventCall":{"arguments":[{"id":8252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"3054:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":8253,"name":"researchNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8076,"src":"3063:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ResearchNFT_$8071_storage_$","typeString":"mapping(uint256 => struct DeSciNFTSimple.ResearchNFT storage ref)"}},"id":8255,"indexExpression":{"id":8254,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"3076:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3063:21:23","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage","typeString":"struct DeSciNFTSimple.ResearchNFT storage ref"}},"id":8256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3085:13:23","memberName":"citationCount","nodeType":"MemberAccess","referencedDeclaration":8066,"src":"3063:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8251,"name":"CitationAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"3040:13:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3040:59:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8258,"nodeType":"EmitStatement","src":"3035:64:23"}]},"documentation":{"id":8224,"nodeType":"StructuredDocumentation","src":"2683:115:23","text":" @dev Add a citation to increase citation count\n @param tokenId Token ID to add citation to"},"functionSelector":"f9202f00","id":8260,"implemented":true,"kind":"function","modifiers":[],"name":"addCitation","nameLocation":"2812:11:23","nodeType":"FunctionDefinition","parameters":{"id":8227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8226,"mutability":"mutable","name":"tokenId","nameLocation":"2832:7:23","nodeType":"VariableDeclaration","scope":8260,"src":"2824:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2823:17:23"},"returnParameters":{"id":8228,"nodeType":"ParameterList","parameters":[],"src":"2850:0:23"},"scope":8408,"src":"2803:303:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8288,"nodeType":"Block","src":"3277:193:23","statements":[{"assignments":[8268],"declarations":[{"constant":false,"id":8268,"mutability":"mutable","name":"research","nameLocation":"3307:8:23","nodeType":"VariableDeclaration","scope":8288,"src":"3287:28:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage_ptr","typeString":"struct DeSciNFTSimple.ResearchNFT"},"typeName":{"id":8267,"nodeType":"UserDefinedTypeName","pathNode":{"id":8266,"name":"ResearchNFT","nameLocations":["3287:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":8071,"src":"3287:11:23"},"referencedDeclaration":8071,"src":"3287:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage_ptr","typeString":"struct DeSciNFTSimple.ResearchNFT"}},"visibility":"internal"}],"id":8272,"initialValue":{"baseExpression":{"id":8269,"name":"researchNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8076,"src":"3318:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ResearchNFT_$8071_storage_$","typeString":"mapping(uint256 => struct DeSciNFTSimple.ResearchNFT storage ref)"}},"id":8271,"indexExpression":{"id":8270,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8263,"src":"3331:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3318:21:23","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage","typeString":"struct DeSciNFTSimple.ResearchNFT storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3287:52:23"},{"expression":{"id":8280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8273,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8268,"src":"3349:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage_ptr","typeString":"struct DeSciNFTSimple.ResearchNFT storage pointer"}},"id":8275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3358:11:23","memberName":"impactScore","nodeType":"MemberAccess","referencedDeclaration":8068,"src":"3349:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8276,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8268,"src":"3372:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage_ptr","typeString":"struct DeSciNFTSimple.ResearchNFT storage pointer"}},"id":8277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3381:13:23","memberName":"citationCount","nodeType":"MemberAccess","referencedDeclaration":8066,"src":"3372:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":8278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3397:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3372:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3349:50:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8281,"nodeType":"ExpressionStatement","src":"3349:50:23"},{"eventCall":{"arguments":[{"id":8283,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8263,"src":"3433:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8284,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8268,"src":"3442:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage_ptr","typeString":"struct DeSciNFTSimple.ResearchNFT storage pointer"}},"id":8285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3451:11:23","memberName":"impactScore","nodeType":"MemberAccess","referencedDeclaration":8068,"src":"3442:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8282,"name":"ImpactScoreUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8107,"src":"3414:18:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":8286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:49:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8287,"nodeType":"EmitStatement","src":"3409:54:23"}]},"documentation":{"id":8261,"nodeType":"StructuredDocumentation","src":"3112:106:23","text":" @dev Update the impact score of a research NFT\n @param tokenId Token ID to update"},"id":8289,"implemented":true,"kind":"function","modifiers":[],"name":"_updateImpactScore","nameLocation":"3232:18:23","nodeType":"FunctionDefinition","parameters":{"id":8264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8263,"mutability":"mutable","name":"tokenId","nameLocation":"3259:7:23","nodeType":"VariableDeclaration","scope":8289,"src":"3251:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8262,"name":"uint256","nodeType":"ElementaryTypeName","src":"3251:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3250:17:23"},"returnParameters":{"id":8265,"nodeType":"ParameterList","parameters":[],"src":"3277:0:23"},"scope":8408,"src":"3223:247:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8323,"nodeType":"Block","src":"3685:187:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8301,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8292,"src":"3711:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8300,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"3703:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3703:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3731:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3723:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8303,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:23","typeDescriptions":{}}},"id":8306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3723:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3703:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3735:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3695:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3695:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8310,"nodeType":"ExpressionStatement","src":"3695:63:23"},{"expression":{"id":8316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8311,"name":"researchNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8076,"src":"3777:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ResearchNFT_$8071_storage_$","typeString":"mapping(uint256 => struct DeSciNFTSimple.ResearchNFT storage ref)"}},"id":8313,"indexExpression":{"id":8312,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8292,"src":"3790:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3777:21:23","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage","typeString":"struct DeSciNFTSimple.ResearchNFT storage ref"}},"id":8314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3799:10:23","memberName":"isVerified","nodeType":"MemberAccess","referencedDeclaration":8070,"src":"3777:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8315,"name":"verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8294,"src":"3812:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3777:43:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8317,"nodeType":"ExpressionStatement","src":"3777:43:23"},{"eventCall":{"arguments":[{"id":8319,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8292,"src":"3847:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8320,"name":"verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8294,"src":"3856:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8318,"name":"NFTVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"3835:11:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":8321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3835:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8322,"nodeType":"EmitStatement","src":"3830:35:23"}]},"documentation":{"id":8290,"nodeType":"StructuredDocumentation","src":"3476:129:23","text":" @dev Verify a research NFT\n @param tokenId Token ID to verify\n @param verified Verification status"},"functionSelector":"507d34a5","id":8324,"implemented":true,"kind":"function","modifiers":[{"id":8297,"kind":"modifierInvocation","modifierName":{"id":8296,"name":"onlyOwner","nameLocations":["3675:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"3675:9:23"},"nodeType":"ModifierInvocation","src":"3675:9:23"}],"name":"verifyResearch","nameLocation":"3619:14:23","nodeType":"FunctionDefinition","parameters":{"id":8295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8292,"mutability":"mutable","name":"tokenId","nameLocation":"3642:7:23","nodeType":"VariableDeclaration","scope":8324,"src":"3634:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8291,"name":"uint256","nodeType":"ElementaryTypeName","src":"3634:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8294,"mutability":"mutable","name":"verified","nameLocation":"3656:8:23","nodeType":"VariableDeclaration","scope":8324,"src":"3651:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8293,"name":"bool","nodeType":"ElementaryTypeName","src":"3651:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3633:32:23"},"returnParameters":{"id":8298,"nodeType":"ParameterList","parameters":[],"src":"3685:0:23"},"scope":8408,"src":"3610:262:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8349,"nodeType":"Block","src":"4080:118:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8335,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"4106:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8334,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4098:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8337,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:23","typeDescriptions":{}}},"id":8340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4098:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4130:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8333,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4090:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4090:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8344,"nodeType":"ExpressionStatement","src":"4090:63:23"},{"expression":{"baseExpression":{"id":8345,"name":"researchNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8076,"src":"4170:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ResearchNFT_$8071_storage_$","typeString":"mapping(uint256 => struct DeSciNFTSimple.ResearchNFT storage ref)"}},"id":8347,"indexExpression":{"id":8346,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"4183:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4170:21:23","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage","typeString":"struct DeSciNFTSimple.ResearchNFT storage ref"}},"functionReturnParameters":8332,"id":8348,"nodeType":"Return","src":"4163:28:23"}]},"documentation":{"id":8325,"nodeType":"StructuredDocumentation","src":"3878:113:23","text":" @dev Get research NFT details\n @param tokenId Token ID\n @return ResearchNFT struct"},"functionSelector":"9a60f5be","id":8350,"implemented":true,"kind":"function","modifiers":[],"name":"getResearchNFT","nameLocation":"4005:14:23","nodeType":"FunctionDefinition","parameters":{"id":8328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8327,"mutability":"mutable","name":"tokenId","nameLocation":"4028:7:23","nodeType":"VariableDeclaration","scope":8350,"src":"4020:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8326,"name":"uint256","nodeType":"ElementaryTypeName","src":"4020:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4019:17:23"},"returnParameters":{"id":8332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8350,"src":"4060:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_memory_ptr","typeString":"struct DeSciNFTSimple.ResearchNFT"},"typeName":{"id":8330,"nodeType":"UserDefinedTypeName","pathNode":{"id":8329,"name":"ResearchNFT","nameLocations":["4060:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":8071,"src":"4060:11:23"},"referencedDeclaration":8071,"src":"4060:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_ResearchNFT_$8071_storage_ptr","typeString":"struct DeSciNFTSimple.ResearchNFT"}},"visibility":"internal"}],"src":"4059:20:23"},"scope":8408,"src":"3996:202:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8363,"nodeType":"Block","src":"4440:50:23","statements":[{"expression":{"baseExpression":{"id":8359,"name":"researcherNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"4457:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":8361,"indexExpression":{"id":8360,"name":"researcher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8353,"src":"4472:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4457:26:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":8358,"id":8362,"nodeType":"Return","src":"4450:33:23"}]},"documentation":{"id":8351,"nodeType":"StructuredDocumentation","src":"4204:143:23","text":" @dev Get all NFTs owned by a researcher\n @param researcher Address of the researcher\n @return Array of token IDs"},"functionSelector":"2bc6c4e3","id":8364,"implemented":true,"kind":"function","modifiers":[],"name":"getResearcherNFTs","nameLocation":"4361:17:23","nodeType":"FunctionDefinition","parameters":{"id":8354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8353,"mutability":"mutable","name":"researcher","nameLocation":"4387:10:23","nodeType":"VariableDeclaration","scope":8364,"src":"4379:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8352,"name":"address","nodeType":"ElementaryTypeName","src":"4379:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4378:20:23"},"returnParameters":{"id":8358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8364,"src":"4422:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8355,"name":"uint256","nodeType":"ElementaryTypeName","src":"4422:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8356,"nodeType":"ArrayTypeName","src":"4422:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4421:18:23"},"scope":8408,"src":"4352:138:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8374,"nodeType":"Block","src":"4643:43:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8370,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"4660:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4678:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4660:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8369,"id":8373,"nodeType":"Return","src":"4653:26:23"}]},"documentation":{"id":8365,"nodeType":"StructuredDocumentation","src":"4496:86:23","text":" @dev Get total number of minted NFTs\n @return Total NFT count"},"functionSelector":"30bdb351","id":8375,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalNFTs","nameLocation":"4596:12:23","nodeType":"FunctionDefinition","parameters":{"id":8366,"nodeType":"ParameterList","parameters":[],"src":"4608:2:23"},"returnParameters":{"id":8369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8375,"src":"4634:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8367,"name":"uint256","nodeType":"ElementaryTypeName","src":"4634:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:9:23"},"scope":8408,"src":"4587:99:23","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[892,1896],"body":{"id":8390,"nodeType":"Block","src":"4824:47:23","statements":[{"expression":{"arguments":[{"id":8387,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"4856:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8385,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4841:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_DeSciNFTSimple_$8408_$","typeString":"type(contract super DeSciNFTSimple)"}},"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4847:8:23","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1896,"src":"4841:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4841:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":8384,"id":8389,"nodeType":"Return","src":"4834:30:23"}]},"functionSelector":"c87b56dd","id":8391,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"4727:8:23","nodeType":"FunctionDefinition","overrides":{"id":8381,"nodeType":"OverrideSpecifier","overrides":[{"id":8379,"name":"ERC721","nameLocations":["4774:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"4774:6:23"},{"id":8380,"name":"ERC721URIStorage","nameLocations":["4782:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":1916,"src":"4782:16:23"}],"src":"4765:34:23"},"parameters":{"id":8378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8377,"mutability":"mutable","name":"tokenId","nameLocation":"4744:7:23","nodeType":"VariableDeclaration","scope":8391,"src":"4736:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8376,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4735:17:23"},"returnParameters":{"id":8384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8391,"src":"4809:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8382,"name":"string","nodeType":"ElementaryTypeName","src":"4809:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4808:15:23"},"scope":8408,"src":"4718:153:23","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[797,1839],"body":{"id":8406,"nodeType":"Block","src":"4986:60:23","statements":[{"expression":{"arguments":[{"id":8403,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8393,"src":"5027:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":8401,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5003:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_DeSciNFTSimple_$8408_$","typeString":"type(contract super DeSciNFTSimple)"}},"id":8402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5009:17:23","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1839,"src":"5003:23:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5003:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8400,"id":8405,"nodeType":"Return","src":"4996:43:23"}]},"functionSelector":"01ffc9a7","id":8407,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"4886:17:23","nodeType":"FunctionDefinition","overrides":{"id":8397,"nodeType":"OverrideSpecifier","overrides":[{"id":8395,"name":"ERC721","nameLocations":["4945:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"4945:6:23"},{"id":8396,"name":"ERC721URIStorage","nameLocations":["4953:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":1916,"src":"4953:16:23"}],"src":"4936:34:23"},"parameters":{"id":8394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8393,"mutability":"mutable","name":"interfaceId","nameLocation":"4911:11:23","nodeType":"VariableDeclaration","scope":8407,"src":"4904:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8392,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4904:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4903:20:23"},"returnParameters":{"id":8400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8407,"src":"4980:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8398,"name":"bool","nodeType":"ElementaryTypeName","src":"4980:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4979:6:23"},"scope":8408,"src":"4877:169:23","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":8409,"src":"309:4739:23","usedErrors":[393,398,607,612,621,626,631,638,643,648,2117],"usedEvents":[404,547,554,1669,1678,1687,8095,8101,8107,8113]}],"src":"32:5017:23"},"id":23},"contracts/DeSciPlatform.sol":{"ast":{"absolutePath":"contracts/DeSciPlatform.sol","exportedSymbols":{"AccessControl":[296],"Context":[2051],"Dataset":[8038],"DeSciNFTSimple":[8408],"DeSciPlatform":[9357],"ERC165":[3598],"ERC721":[1653],"ERC721URIStorage":[1916],"ERC721Utils":[2021],"IAccessControl":[379],"IERC165":[3610],"IERC4906":[555],"IERC721":[1770],"IERC721Errors":[649],"IERC721Metadata":[1944],"Ownable":[527],"ReentrancyGuard":[2172],"Strings":[3574],"UserProfile":[9824],"ZKProof":[10325]},"id":9358,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8410,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9358,"sourceUnit":528,"src":"58:52:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":8412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9358,"sourceUnit":2173,"src":"111:59:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/UserProfile.sol","file":"./UserProfile.sol","id":8413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9358,"sourceUnit":9825,"src":"171:27:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ZKProof.sol","file":"./ZKProof.sol","id":8414,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9358,"sourceUnit":10326,"src":"199:23:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/DeSciNFTSimple.sol","file":"./DeSciNFTSimple.sol","id":8415,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9358,"sourceUnit":8409,"src":"223:30:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Dataset.sol","file":"./Dataset.sol","id":8416,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9358,"sourceUnit":8039,"src":"254:23:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8417,"name":"Ownable","nameLocations":["305:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"305:7:24"},"id":8418,"nodeType":"InheritanceSpecifier","src":"305:7:24"},{"baseName":{"id":8419,"name":"ReentrancyGuard","nameLocations":["314:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":2172,"src":"314:15:24"},"id":8420,"nodeType":"InheritanceSpecifier","src":"314:15:24"}],"canonicalName":"DeSciPlatform","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9357,"linearizedBaseContracts":[9357,2172,527,2051],"name":"DeSciPlatform","nameLocation":"288:13:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"1c5f3099","id":8423,"mutability":"mutable","name":"userProfileContract","nameLocation":"355:19:24","nodeType":"VariableDeclaration","scope":9357,"src":"336:38:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"},"typeName":{"id":8422,"nodeType":"UserDefinedTypeName","pathNode":{"id":8421,"name":"UserProfile","nameLocations":["336:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":9824,"src":"336:11:24"},"referencedDeclaration":9824,"src":"336:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"}},"visibility":"public"},{"constant":false,"functionSelector":"7788bc6c","id":8426,"mutability":"mutable","name":"zkProofContract","nameLocation":"395:15:24","nodeType":"VariableDeclaration","scope":9357,"src":"380:30:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProof_$10325","typeString":"contract ZKProof"},"typeName":{"id":8425,"nodeType":"UserDefinedTypeName","pathNode":{"id":8424,"name":"ZKProof","nameLocations":["380:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":10325,"src":"380:7:24"},"referencedDeclaration":10325,"src":"380:7:24","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProof_$10325","typeString":"contract ZKProof"}},"visibility":"public"},{"constant":false,"functionSelector":"d56d229d","id":8429,"mutability":"mutable","name":"nftContract","nameLocation":"438:11:24","nodeType":"VariableDeclaration","scope":9357,"src":"416:33:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_DeSciNFTSimple_$8408","typeString":"contract DeSciNFTSimple"},"typeName":{"id":8428,"nodeType":"UserDefinedTypeName","pathNode":{"id":8427,"name":"DeSciNFTSimple","nameLocations":["416:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":8408,"src":"416:14:24"},"referencedDeclaration":8408,"src":"416:14:24","typeDescriptions":{"typeIdentifier":"t_contract$_DeSciNFTSimple_$8408","typeString":"contract DeSciNFTSimple"}},"visibility":"public"},{"constant":false,"functionSelector":"b0c82266","id":8432,"mutability":"mutable","name":"datasetContract","nameLocation":"470:15:24","nodeType":"VariableDeclaration","scope":9357,"src":"455:30:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Dataset_$8038","typeString":"contract Dataset"},"typeName":{"id":8431,"nodeType":"UserDefinedTypeName","pathNode":{"id":8430,"name":"Dataset","nameLocations":["455:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":8038,"src":"455:7:24"},"referencedDeclaration":8038,"src":"455:7:24","typeDescriptions":{"typeIdentifier":"t_contract$_Dataset_$8038","typeString":"contract Dataset"}},"visibility":"public"},{"canonicalName":"DeSciPlatform.Research","id":8459,"members":[{"constant":false,"id":8434,"mutability":"mutable","name":"id","nameLocation":"526:2:24","nodeType":"VariableDeclaration","scope":8459,"src":"518:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8433,"name":"uint256","nodeType":"ElementaryTypeName","src":"518:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8436,"mutability":"mutable","name":"title","nameLocation":"545:5:24","nodeType":"VariableDeclaration","scope":8459,"src":"538:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8435,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8438,"mutability":"mutable","name":"description","nameLocation":"567:11:24","nodeType":"VariableDeclaration","scope":8459,"src":"560:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8437,"name":"string","nodeType":"ElementaryTypeName","src":"560:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8440,"mutability":"mutable","name":"researcher","nameLocation":"596:10:24","nodeType":"VariableDeclaration","scope":8459,"src":"588:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8439,"name":"address","nodeType":"ElementaryTypeName","src":"588:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8442,"mutability":"mutable","name":"datasetId","nameLocation":"624:9:24","nodeType":"VariableDeclaration","scope":8459,"src":"616:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8441,"name":"uint256","nodeType":"ElementaryTypeName","src":"616:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8444,"mutability":"mutable","name":"nftTokenId","nameLocation":"651:10:24","nodeType":"VariableDeclaration","scope":8459,"src":"643:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8443,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8447,"mutability":"mutable","name":"zkProofIds","nameLocation":"681:10:24","nodeType":"VariableDeclaration","scope":8459,"src":"671:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8445,"name":"uint256","nodeType":"ElementaryTypeName","src":"671:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8446,"nodeType":"ArrayTypeName","src":"671:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8449,"mutability":"mutable","name":"metadataHash","nameLocation":"708:12:24","nodeType":"VariableDeclaration","scope":8459,"src":"701:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8448,"name":"string","nodeType":"ElementaryTypeName","src":"701:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8451,"mutability":"mutable","name":"publishedAt","nameLocation":"738:11:24","nodeType":"VariableDeclaration","scope":8459,"src":"730:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8450,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8454,"mutability":"mutable","name":"status","nameLocation":"774:6:24","nodeType":"VariableDeclaration","scope":8459,"src":"759:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"},"typeName":{"id":8453,"nodeType":"UserDefinedTypeName","pathNode":{"id":8452,"name":"ResearchStatus","nameLocations":["759:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":8480,"src":"759:14:24"},"referencedDeclaration":8480,"src":"759:14:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"visibility":"internal"},{"constant":false,"id":8456,"mutability":"mutable","name":"peerReviewCount","nameLocation":"798:15:24","nodeType":"VariableDeclaration","scope":8459,"src":"790:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8455,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8458,"mutability":"mutable","name":"averageRating","nameLocation":"831:13:24","nodeType":"VariableDeclaration","scope":8459,"src":"823:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8457,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Research","nameLocation":"499:8:24","nodeType":"StructDefinition","scope":9357,"src":"492:359:24","visibility":"public"},{"canonicalName":"DeSciPlatform.PeerReview","id":8474,"members":[{"constant":false,"id":8461,"mutability":"mutable","name":"researchId","nameLocation":"893:10:24","nodeType":"VariableDeclaration","scope":8474,"src":"885:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8460,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8463,"mutability":"mutable","name":"reviewer","nameLocation":"921:8:24","nodeType":"VariableDeclaration","scope":8474,"src":"913:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8462,"name":"address","nodeType":"ElementaryTypeName","src":"913:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8465,"mutability":"mutable","name":"rating","nameLocation":"947:6:24","nodeType":"VariableDeclaration","scope":8474,"src":"939:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8464,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8467,"mutability":"mutable","name":"comments","nameLocation":"984:8:24","nodeType":"VariableDeclaration","scope":8474,"src":"977:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8466,"name":"string","nodeType":"ElementaryTypeName","src":"977:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8469,"mutability":"mutable","name":"ipfsHash","nameLocation":"1009:8:24","nodeType":"VariableDeclaration","scope":8474,"src":"1002:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8468,"name":"string","nodeType":"ElementaryTypeName","src":"1002:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8471,"mutability":"mutable","name":"reviewedAt","nameLocation":"1035:10:24","nodeType":"VariableDeclaration","scope":8474,"src":"1027:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8473,"mutability":"mutable","name":"isVerified","nameLocation":"1060:10:24","nodeType":"VariableDeclaration","scope":8474,"src":"1055:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8472,"name":"bool","nodeType":"ElementaryTypeName","src":"1055:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PeerReview","nameLocation":"864:10:24","nodeType":"StructDefinition","scope":9357,"src":"857:220:24","visibility":"public"},{"canonicalName":"DeSciPlatform.ResearchStatus","id":8480,"members":[{"id":8475,"name":"Draft","nameLocation":"1113:5:24","nodeType":"EnumValue","src":"1113:5:24"},{"id":8476,"name":"Submitted","nameLocation":"1128:9:24","nodeType":"EnumValue","src":"1128:9:24"},{"id":8477,"name":"UnderReview","nameLocation":"1147:11:24","nodeType":"EnumValue","src":"1147:11:24"},{"id":8478,"name":"Published","nameLocation":"1168:9:24","nodeType":"EnumValue","src":"1168:9:24"},{"id":8479,"name":"Rejected","nameLocation":"1187:8:24","nodeType":"EnumValue","src":"1187:8:24"}],"name":"ResearchStatus","nameLocation":"1088:14:24","nodeType":"EnumDefinition","src":"1083:118:24"},{"constant":false,"functionSelector":"5f7d0704","id":8485,"mutability":"mutable","name":"researches","nameLocation":"1243:10:24","nodeType":"VariableDeclaration","scope":9357,"src":"1207:46:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Research_$8459_storage_$","typeString":"mapping(uint256 => struct DeSciPlatform.Research)"},"typeName":{"id":8484,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8481,"name":"uint256","nodeType":"ElementaryTypeName","src":"1215:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1207:28:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Research_$8459_storage_$","typeString":"mapping(uint256 => struct DeSciPlatform.Research)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8483,"nodeType":"UserDefinedTypeName","pathNode":{"id":8482,"name":"Research","nameLocations":["1226:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":8459,"src":"1226:8:24"},"referencedDeclaration":8459,"src":"1226:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research"}}},"visibility":"public"},{"constant":false,"functionSelector":"cecd8306","id":8491,"mutability":"mutable","name":"peerReviews","nameLocation":"1299:11:24","nodeType":"VariableDeclaration","scope":9357,"src":"1259:51:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct DeSciPlatform.PeerReview[])"},"typeName":{"id":8490,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8486,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1259:32:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct DeSciPlatform.PeerReview[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8488,"nodeType":"UserDefinedTypeName","pathNode":{"id":8487,"name":"PeerReview","nameLocations":["1278:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":8474,"src":"1278:10:24"},"referencedDeclaration":8474,"src":"1278:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_PeerReview_$8474_storage_ptr","typeString":"struct DeSciPlatform.PeerReview"}},"id":8489,"nodeType":"ArrayTypeName","src":"1278:12:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_ptr","typeString":"struct DeSciPlatform.PeerReview[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"d6f13d54","id":8496,"mutability":"mutable","name":"researcherPublications","nameLocation":"1353:22:24","nodeType":"VariableDeclaration","scope":9357,"src":"1316:59:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":8495,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8492,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1316:29:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8494,"nodeType":"ArrayTypeName","src":"1335:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"7c7198cc","id":8502,"mutability":"mutable","name":"hasReviewed","nameLocation":"1433:11:24","nodeType":"VariableDeclaration","scope":9357,"src":"1381:63:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":8501,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1389:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1381:44:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8500,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8498,"name":"address","nodeType":"ElementaryTypeName","src":"1408:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1400:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8499,"name":"bool","nodeType":"ElementaryTypeName","src":"1419:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"9423d321","id":8504,"mutability":"mutable","name":"nextResearchId","nameLocation":"1470:14:24","nodeType":"VariableDeclaration","scope":9357,"src":"1455:29:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4dd8eb1c","id":8507,"mutability":"mutable","name":"allResearches","nameLocation":"1507:13:24","nodeType":"VariableDeclaration","scope":9357,"src":"1490:30:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":8505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1490:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8506,"nodeType":"ArrayTypeName","src":"1490:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"0699b9d4","id":8510,"mutability":"mutable","name":"minimumReputationToReview","nameLocation":"1571:25:24","nodeType":"VariableDeclaration","scope":9357,"src":"1556:45:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1556:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530","id":8509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1599:2:24","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"visibility":"public"},{"constant":false,"functionSelector":"47d0fa76","id":8513,"mutability":"mutable","name":"minimumReviewsToPublish","nameLocation":"1622:23:24","nodeType":"VariableDeclaration","scope":9357,"src":"1607:42:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":8512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1648:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":false,"functionSelector":"e07bc592","id":8516,"mutability":"mutable","name":"reviewReward","nameLocation":"1670:12:24","nodeType":"VariableDeclaration","scope":9357,"src":"1655:40:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8514,"name":"uint256","nodeType":"ElementaryTypeName","src":"1655:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e3031","id":8515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1685:10:24","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"0.01"},"visibility":"public"},{"anonymous":false,"eventSelector":"7a4ae4a41033f0aa82dc3cc2d18817fcaa2691062e3b16227b5381250e038399","id":8526,"name":"ResearchSubmitted","nameLocation":"1712:17:24","nodeType":"EventDefinition","parameters":{"id":8525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8518,"indexed":true,"mutability":"mutable","name":"researchId","nameLocation":"1755:10:24","nodeType":"VariableDeclaration","scope":8526,"src":"1739:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8517,"name":"uint256","nodeType":"ElementaryTypeName","src":"1739:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8520,"indexed":true,"mutability":"mutable","name":"researcher","nameLocation":"1791:10:24","nodeType":"VariableDeclaration","scope":8526,"src":"1775:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8519,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8522,"indexed":false,"mutability":"mutable","name":"title","nameLocation":"1818:5:24","nodeType":"VariableDeclaration","scope":8526,"src":"1811:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8521,"name":"string","nodeType":"ElementaryTypeName","src":"1811:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8524,"indexed":false,"mutability":"mutable","name":"datasetId","nameLocation":"1841:9:24","nodeType":"VariableDeclaration","scope":8526,"src":"1833:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8523,"name":"uint256","nodeType":"ElementaryTypeName","src":"1833:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1729:127:24"},"src":"1706:151:24"},{"anonymous":false,"eventSelector":"d8ce22afd7e21e21188ad06f8603f1d280d2c289bca98a7e29ccb17934c5bea4","id":8534,"name":"ResearchPublished","nameLocation":"1873:17:24","nodeType":"EventDefinition","parameters":{"id":8533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8528,"indexed":true,"mutability":"mutable","name":"researchId","nameLocation":"1916:10:24","nodeType":"VariableDeclaration","scope":8534,"src":"1900:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8530,"indexed":true,"mutability":"mutable","name":"nftTokenId","nameLocation":"1952:10:24","nodeType":"VariableDeclaration","scope":8534,"src":"1936:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1936:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8532,"indexed":true,"mutability":"mutable","name":"researcher","nameLocation":"1988:10:24","nodeType":"VariableDeclaration","scope":8534,"src":"1972:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8531,"name":"address","nodeType":"ElementaryTypeName","src":"1972:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1890:114:24"},"src":"1867:138:24"},{"anonymous":false,"eventSelector":"c365c5f538389984d687768c80d5d858622fa9f66a9290efdc9defca6b0c973a","id":8542,"name":"PeerReviewSubmitted","nameLocation":"2021:19:24","nodeType":"EventDefinition","parameters":{"id":8541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8536,"indexed":true,"mutability":"mutable","name":"researchId","nameLocation":"2066:10:24","nodeType":"VariableDeclaration","scope":8542,"src":"2050:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8535,"name":"uint256","nodeType":"ElementaryTypeName","src":"2050:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8538,"indexed":true,"mutability":"mutable","name":"reviewer","nameLocation":"2102:8:24","nodeType":"VariableDeclaration","scope":8542,"src":"2086:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8537,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8540,"indexed":false,"mutability":"mutable","name":"rating","nameLocation":"2128:6:24","nodeType":"VariableDeclaration","scope":8542,"src":"2120:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8539,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2040:100:24"},"src":"2015:126:24"},{"anonymous":false,"eventSelector":"0bf769e221fd48094869eacdbf9de22b6870f4f9fdf03fd35d6ab5cf72ede70d","id":8552,"name":"ResearchStatusChanged","nameLocation":"2157:21:24","nodeType":"EventDefinition","parameters":{"id":8551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8544,"indexed":true,"mutability":"mutable","name":"researchId","nameLocation":"2204:10:24","nodeType":"VariableDeclaration","scope":8552,"src":"2188:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8543,"name":"uint256","nodeType":"ElementaryTypeName","src":"2188:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8547,"indexed":false,"mutability":"mutable","name":"oldStatus","nameLocation":"2239:9:24","nodeType":"VariableDeclaration","scope":8552,"src":"2224:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"},"typeName":{"id":8546,"nodeType":"UserDefinedTypeName","pathNode":{"id":8545,"name":"ResearchStatus","nameLocations":["2224:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":8480,"src":"2224:14:24"},"referencedDeclaration":8480,"src":"2224:14:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"visibility":"internal"},{"constant":false,"id":8550,"indexed":false,"mutability":"mutable","name":"newStatus","nameLocation":"2273:9:24","nodeType":"VariableDeclaration","scope":8552,"src":"2258:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"},"typeName":{"id":8549,"nodeType":"UserDefinedTypeName","pathNode":{"id":8548,"name":"ResearchStatus","nameLocations":["2258:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":8480,"src":"2258:14:24"},"referencedDeclaration":8480,"src":"2258:14:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"visibility":"internal"}],"src":"2178:110:24"},"src":"2151:138:24"},{"body":{"id":8564,"nodeType":"Block","src":"2325:102:24","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":8557,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2374:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2378:6:24","memberName":"sender","nodeType":"MemberAccess","src":"2374:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8555,"name":"userProfileContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8423,"src":"2343:19:24","typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"}},"id":8556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2363:10:24","memberName":"hasProfile","nodeType":"MemberAccess","referencedDeclaration":9428,"src":"2343:30:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":8559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55736572206e6f742072656769737465726564","id":8560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2387:21:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_263f68979ab8493dfb876baf1251b5bb5d13d94765abbd21388b0d254d48747c","typeString":"literal_string \"User not registered\""},"value":"User not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_263f68979ab8493dfb876baf1251b5bb5d13d94765abbd21388b0d254d48747c","typeString":"literal_string \"User not registered\""}],"id":8554,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2335:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:74:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8562,"nodeType":"ExpressionStatement","src":"2335:74:24"},{"id":8563,"nodeType":"PlaceholderStatement","src":"2419:1:24"}]},"id":8565,"name":"onlyRegisteredUser","nameLocation":"2304:18:24","nodeType":"ModifierDefinition","parameters":{"id":8553,"nodeType":"ParameterList","parameters":[],"src":"2322:2:24"},"src":"2295:132:24","virtual":false,"visibility":"internal"},{"body":{"id":8577,"nodeType":"Block","src":"2478:92:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8570,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"2496:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8571,"name":"nextResearchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8504,"src":"2510:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2496:28:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526573656172636820646f6573206e6f74206578697374","id":8573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2526:25:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_48567b562a28c744dba76ce6943cf1c17ec4b60da09661342613b80a5b797077","typeString":"literal_string \"Research does not exist\""},"value":"Research does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48567b562a28c744dba76ce6943cf1c17ec4b60da09661342613b80a5b797077","typeString":"literal_string \"Research does not exist\""}],"id":8569,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2488:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2488:64:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8575,"nodeType":"ExpressionStatement","src":"2488:64:24"},{"id":8576,"nodeType":"PlaceholderStatement","src":"2562:1:24"}]},"id":8578,"name":"researchExists","nameLocation":"2442:14:24","nodeType":"ModifierDefinition","parameters":{"id":8568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8567,"mutability":"mutable","name":"_researchId","nameLocation":"2465:11:24","nodeType":"VariableDeclaration","scope":8578,"src":"2457:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8566,"name":"uint256","nodeType":"ElementaryTypeName","src":"2457:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2456:21:24"},"src":"2433:137:24","virtual":false,"visibility":"internal"},{"body":{"id":8594,"nodeType":"Block","src":"2621:107:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8583,"name":"researches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8485,"src":"2639:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Research_$8459_storage_$","typeString":"mapping(uint256 => struct DeSciPlatform.Research storage ref)"}},"id":8585,"indexExpression":{"id":8584,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8580,"src":"2650:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2639:23:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage","typeString":"struct DeSciPlatform.Research storage ref"}},"id":8586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2663:10:24","memberName":"researcher","nodeType":"MemberAccess","referencedDeclaration":8440,"src":"2639:34:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2677:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2681:6:24","memberName":"sender","nodeType":"MemberAccess","src":"2677:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2639:48:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74207468652072657365617263686572","id":8590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2689:20:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5dcc4cb1e93ddcd41dc1af4f2a1378b49fc5a87e60e79d99c7f953f62a33d189","typeString":"literal_string \"Not the researcher\""},"value":"Not the researcher"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5dcc4cb1e93ddcd41dc1af4f2a1378b49fc5a87e60e79d99c7f953f62a33d189","typeString":"literal_string \"Not the researcher\""}],"id":8582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2631:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:79:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8592,"nodeType":"ExpressionStatement","src":"2631:79:24"},{"id":8593,"nodeType":"PlaceholderStatement","src":"2720:1:24"}]},"id":8595,"name":"onlyResearcher","nameLocation":"2585:14:24","nodeType":"ModifierDefinition","parameters":{"id":8581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8580,"mutability":"mutable","name":"_researchId","nameLocation":"2608:11:24","nodeType":"VariableDeclaration","scope":8595,"src":"2600:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2600:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2599:21:24"},"src":"2576:152:24","virtual":false,"visibility":"internal"},{"body":{"id":8638,"nodeType":"Block","src":"2908:258:24","statements":[{"expression":{"id":8614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8610,"name":"userProfileContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8423,"src":"2918:19:24","typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8612,"name":"_userProfileContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8597,"src":"2952:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8611,"name":"UserProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9824,"src":"2940:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserProfile_$9824_$","typeString":"type(contract UserProfile)"}},"id":8613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2940:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"}},"src":"2918:55:24","typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"}},"id":8615,"nodeType":"ExpressionStatement","src":"2918:55:24"},{"expression":{"id":8620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8616,"name":"zkProofContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8426,"src":"2983:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProof_$10325","typeString":"contract ZKProof"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8618,"name":"_zkProofContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8599,"src":"3009:16:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8617,"name":"ZKProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10325,"src":"3001:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ZKProof_$10325_$","typeString":"type(contract ZKProof)"}},"id":8619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ZKProof_$10325","typeString":"contract ZKProof"}},"src":"2983:43:24","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProof_$10325","typeString":"contract ZKProof"}},"id":8621,"nodeType":"ExpressionStatement","src":"2983:43:24"},{"expression":{"id":8626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8622,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8429,"src":"3036:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_DeSciNFTSimple_$8408","typeString":"contract DeSciNFTSimple"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8624,"name":"_nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"3065:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8623,"name":"DeSciNFTSimple","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"3050:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DeSciNFTSimple_$8408_$","typeString":"type(contract DeSciNFTSimple)"}},"id":8625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_DeSciNFTSimple_$8408","typeString":"contract DeSciNFTSimple"}},"src":"3036:42:24","typeDescriptions":{"typeIdentifier":"t_contract$_DeSciNFTSimple_$8408","typeString":"contract DeSciNFTSimple"}},"id":8627,"nodeType":"ExpressionStatement","src":"3036:42:24"},{"expression":{"id":8632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8628,"name":"datasetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8432,"src":"3088:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_Dataset_$8038","typeString":"contract Dataset"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8630,"name":"_datasetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"3114:16:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8629,"name":"Dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"3106:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Dataset_$8038_$","typeString":"type(contract Dataset)"}},"id":8631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3106:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Dataset_$8038","typeString":"contract Dataset"}},"src":"3088:43:24","typeDescriptions":{"typeIdentifier":"t_contract$_Dataset_$8038","typeString":"contract Dataset"}},"id":8633,"nodeType":"ExpressionStatement","src":"3088:43:24"},{"expression":{"id":8636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8634,"name":"nextResearchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8504,"src":"3141:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":8635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3158:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3141:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8637,"nodeType":"ExpressionStatement","src":"3141:18:24"}]},"id":8639,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":8606,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2896:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2900:6:24","memberName":"sender","nodeType":"MemberAccess","src":"2896:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8608,"kind":"baseConstructorSpecifier","modifierName":{"id":8605,"name":"Ownable","nameLocations":["2888:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2888:7:24"},"nodeType":"ModifierInvocation","src":"2888:19:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8597,"mutability":"mutable","name":"_userProfileContract","nameLocation":"2763:20:24","nodeType":"VariableDeclaration","scope":8639,"src":"2755:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8596,"name":"address","nodeType":"ElementaryTypeName","src":"2755:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8599,"mutability":"mutable","name":"_zkProofContract","nameLocation":"2801:16:24","nodeType":"VariableDeclaration","scope":8639,"src":"2793:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8598,"name":"address","nodeType":"ElementaryTypeName","src":"2793:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8601,"mutability":"mutable","name":"_nftContract","nameLocation":"2835:12:24","nodeType":"VariableDeclaration","scope":8639,"src":"2827:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8600,"name":"address","nodeType":"ElementaryTypeName","src":"2827:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8603,"mutability":"mutable","name":"_datasetContract","nameLocation":"2865:16:24","nodeType":"VariableDeclaration","scope":8639,"src":"2857:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8602,"name":"address","nodeType":"ElementaryTypeName","src":"2857:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2745:142:24"},"returnParameters":{"id":8609,"nodeType":"ParameterList","parameters":[],"src":"2908:0:24"},"scope":9357,"src":"2734:432:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8812,"nodeType":"Block","src":"4188:1765:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8671,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8642,"src":"4212:6:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4206:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8669,"name":"bytes","nodeType":"ElementaryTypeName","src":"4206:5:24","typeDescriptions":{}}},"id":8672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4206:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:24","memberName":"length","nodeType":"MemberAccess","src":"4206:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4229:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4206:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469746c652063616e6e6f7420626520656d707479","id":8676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4232:23:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_698ca3c7081ed8237247ee65908074972d8604d6a2052a29e97091f6cc36ebf4","typeString":"literal_string \"Title cannot be empty\""},"value":"Title cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_698ca3c7081ed8237247ee65908074972d8604d6a2052a29e97091f6cc36ebf4","typeString":"literal_string \"Title cannot be empty\""}],"id":8668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4198:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:58:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8678,"nodeType":"ExpressionStatement","src":"4198:58:24"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8682,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4309:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4313:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4309:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8680,"name":"userProfileContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8423,"src":"4274:19:24","typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"}},"id":8681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4294:14:24","memberName":"isUserVerified","nodeType":"MemberAccess","referencedDeclaration":9802,"src":"4274:34:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":8684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4274:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55736572206d757374206265207665726966696564","id":8685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4322:23:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c8f5ba974d26edfe7c329b01f3cfa758107ea34c2b63c3803ea7a480d5e370d","typeString":"literal_string \"User must be verified\""},"value":"User must be verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c8f5ba974d26edfe7c329b01f3cfa758107ea34c2b63c3803ea7a480d5e370d","typeString":"literal_string \"User must be verified\""}],"id":8679,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4266:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4266:80:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8687,"nodeType":"ExpressionStatement","src":"4266:80:24"},{"body":{"id":8730,"nodeType":"Block","src":"4471:272:24","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":8702,"name":"_zkProofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8655,"src":"4525:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8704,"indexExpression":{"id":8703,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"4537:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4525:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8700,"name":"zkProofContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8426,"src":"4493:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProof_$10325","typeString":"contract ZKProof"}},"id":8701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4509:15:24","memberName":"isProofVerified","nodeType":"MemberAccess","referencedDeclaration":10299,"src":"4493:31:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view external returns (bool)"}},"id":8705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4493:47:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964205a4b2070726f6f66","id":8706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4542:18:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2670b698a3ca54039cc7737a74ea9d3f04d008a5c80b1e156e54e1e6a532b313","typeString":"literal_string \"Invalid ZK proof\""},"value":"Invalid ZK proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2670b698a3ca54039cc7737a74ea9d3f04d008a5c80b1e156e54e1e6a532b313","typeString":"literal_string \"Invalid ZK proof\""}],"id":8699,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4485:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8708,"nodeType":"ExpressionStatement","src":"4485:76:24"},{"assignments":[8713],"declarations":[{"constant":false,"id":8713,"mutability":"mutable","name":"proof","nameLocation":"4596:5:24","nodeType":"VariableDeclaration","scope":8730,"src":"4575:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_memory_ptr","typeString":"struct ZKProof.Proof"},"typeName":{"id":8712,"nodeType":"UserDefinedTypeName","pathNode":{"id":8711,"name":"ZKProof.Proof","nameLocations":["4575:7:24","4583:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":9853,"src":"4575:13:24"},"referencedDeclaration":9853,"src":"4575:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage_ptr","typeString":"struct ZKProof.Proof"}},"visibility":"internal"}],"id":8720,"initialValue":{"arguments":[{"baseExpression":{"id":8716,"name":"_zkProofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8655,"src":"4629:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8718,"indexExpression":{"id":8717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"4641:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4629:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8714,"name":"zkProofContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8426,"src":"4604:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProof_$10325","typeString":"contract ZKProof"}},"id":8715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4620:8:24","memberName":"getProof","nodeType":"MemberAccess","referencedDeclaration":10255,"src":"4604:24:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Proof_$9853_memory_ptr_$","typeString":"function (uint256) view external returns (struct ZKProof.Proof memory)"}},"id":8719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4604:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_memory_ptr","typeString":"struct ZKProof.Proof memory"}},"nodeType":"VariableDeclarationStatement","src":"4575:69:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8722,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"4666:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_memory_ptr","typeString":"struct ZKProof.Proof memory"}},"id":8723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4672:9:24","memberName":"submitter","nodeType":"MemberAccess","referencedDeclaration":9834,"src":"4666:15:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8724,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4685:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4689:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4685:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4666:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a4b2070726f6f66206e6f74206f776e65642062792072657365617263686572","id":8727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4697:34:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_dc8b1f865f0db82d136b4cd0e15a6fc12f0b1cd01857d12fa22086764a909a02","typeString":"literal_string \"ZK proof not owned by researcher\""},"value":"ZK proof not owned by researcher"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dc8b1f865f0db82d136b4cd0e15a6fc12f0b1cd01857d12fa22086764a909a02","typeString":"literal_string \"ZK proof not owned by researcher\""}],"id":8721,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4658:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4658:74:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8729,"nodeType":"ExpressionStatement","src":"4658:74:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8692,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"4442:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8693,"name":"_zkProofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8655,"src":"4446:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4458:6:24","memberName":"length","nodeType":"MemberAccess","src":"4446:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4442:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8731,"initializationExpression":{"assignments":[8689],"declarations":[{"constant":false,"id":8689,"mutability":"mutable","name":"i","nameLocation":"4435:1:24","nodeType":"VariableDeclaration","scope":8731,"src":"4427:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8688,"name":"uint256","nodeType":"ElementaryTypeName","src":"4427:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8691,"initialValue":{"hexValue":"30","id":8690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4439:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4427:13:24"},"loopExpression":{"expression":{"id":8697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4466:3:24","subExpression":{"id":8696,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"4466:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8698,"nodeType":"ExpressionStatement","src":"4466:3:24"},"nodeType":"ForStatement","src":"4422:321:24"},{"assignments":[8736],"declarations":[{"constant":false,"id":8736,"mutability":"mutable","name":"tags","nameLocation":"4797:4:24","nodeType":"VariableDeclaration","scope":8812,"src":"4781:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8734,"name":"string","nodeType":"ElementaryTypeName","src":"4781:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8735,"nodeType":"ArrayTypeName","src":"4781:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":8742,"initialValue":{"arguments":[{"hexValue":"31","id":8740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4817:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":8739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4804:12:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":8737,"name":"string","nodeType":"ElementaryTypeName","src":"4808:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8738,"nodeType":"ArrayTypeName","src":"4808:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":8741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4804:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4781:38:24"},{"expression":{"id":8747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8743,"name":"tags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"4829:4:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8745,"indexExpression":{"hexValue":"30","id":8744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4834:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4829:7:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"7265736561726368","id":8746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4839:10:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_95f7801c97b17401c2c5a5b8fdb4f956cc377f647e35794f5b5da6aed60cd40d","typeString":"literal_string \"research\""},"value":"research"},"src":"4829:20:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8748,"nodeType":"ExpressionStatement","src":"4829:20:24"},{"assignments":[8750],"declarations":[{"constant":false,"id":8750,"mutability":"mutable","name":"datasetId","nameLocation":"4876:9:24","nodeType":"VariableDeclaration","scope":8812,"src":"4868:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8749,"name":"uint256","nodeType":"ElementaryTypeName","src":"4868:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8761,"initialValue":{"arguments":[{"id":8753,"name":"_datasetName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8646,"src":"4933:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8754,"name":"_datasetDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8648,"src":"4959:19:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8755,"name":"_datasetHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"4992:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8756,"name":"_metadataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"5018:13:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8757,"name":"_isDatasetPublic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8657,"src":"5045:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8758,"name":"_datasetAccessPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"5075:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8759,"name":"tags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"5108:4:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"expression":{"id":8751,"name":"datasetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8432,"src":"4888:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_Dataset_$8038","typeString":"contract Dataset"}},"id":8752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4904:15:24","memberName":"registerDataset","nodeType":"MemberAccess","referencedDeclaration":7497,"src":"4888:31:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory,string memory,string memory,string memory,bool,uint256,string memory[] memory) external returns (uint256)"}},"id":8760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4888:234:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4868:254:24"},{"assignments":[8763],"declarations":[{"constant":false,"id":8763,"mutability":"mutable","name":"researchId","nameLocation":"5174:10:24","nodeType":"VariableDeclaration","scope":8812,"src":"5166:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8762,"name":"uint256","nodeType":"ElementaryTypeName","src":"5166:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8766,"initialValue":{"id":8765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5187:16:24","subExpression":{"id":8764,"name":"nextResearchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8504,"src":"5187:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5166:37:24"},{"expression":{"id":8786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8767,"name":"researches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8485,"src":"5222:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Research_$8459_storage_$","typeString":"mapping(uint256 => struct DeSciPlatform.Research storage ref)"}},"id":8769,"indexExpression":{"id":8768,"name":"researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"5233:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5222:22:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage","typeString":"struct DeSciPlatform.Research storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8771,"name":"researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"5274:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8772,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8642,"src":"5305:6:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8773,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8644,"src":"5338:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8774,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5376:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5380:6:24","memberName":"sender","nodeType":"MemberAccess","src":"5376:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8776,"name":"datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"5411:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":8777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5446:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8778,"name":"_zkProofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8655,"src":"5503:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":8779,"name":"_metadataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"5542:13:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":8780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5582:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":8781,"name":"ResearchStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"5635:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ResearchStatus_$8480_$","typeString":"type(enum DeSciPlatform.ResearchStatus)"}},"id":8782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5650:9:24","memberName":"Submitted","nodeType":"MemberAccess","referencedDeclaration":8476,"src":"5635:24:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},{"hexValue":"30","id":8783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5720:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8770,"name":"Research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8459,"src":"5247:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Research_$8459_storage_ptr_$","typeString":"type(struct DeSciPlatform.Research storage pointer)"}},"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5270:2:24","5298:5:24","5325:11:24","5364:10:24","5400:9:24","5434:10:24","5491:10:24","5528:12:24","5569:11:24","5627:6:24","5673:15:24","5705:13:24"],"names":["id","title","description","researcher","datasetId","nftTokenId","zkProofIds","metadataHash","publishedAt","status","peerReviewCount","averageRating"],"nodeType":"FunctionCall","src":"5247:485:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_memory_ptr","typeString":"struct DeSciPlatform.Research memory"}},"src":"5222:510:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage","typeString":"struct DeSciPlatform.Research storage ref"}},"id":8787,"nodeType":"ExpressionStatement","src":"5222:510:24"},{"expression":{"arguments":[{"id":8793,"name":"researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"5783:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":8788,"name":"researcherPublications","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"5743:22:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":8791,"indexExpression":{"expression":{"id":8789,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5766:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5770:6:24","memberName":"sender","nodeType":"MemberAccess","src":"5766:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5743:34:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":8792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5778:4:24","memberName":"push","nodeType":"MemberAccess","src":"5743:39:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":8794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5743:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8795,"nodeType":"ExpressionStatement","src":"5743:51:24"},{"expression":{"arguments":[{"id":8799,"name":"researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"5823:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8796,"name":"allResearches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"5804:13:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":8798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5818:4:24","memberName":"push","nodeType":"MemberAccess","src":"5804:18:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":8800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5804:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8801,"nodeType":"ExpressionStatement","src":"5804:30:24"},{"eventCall":{"arguments":[{"id":8803,"name":"researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"5868:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8804,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5880:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5884:6:24","memberName":"sender","nodeType":"MemberAccess","src":"5880:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8806,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8642,"src":"5892:6:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8807,"name":"datasetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"5900:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8802,"name":"ResearchSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8526,"src":"5850:17:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,address,string memory,uint256)"}},"id":8808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5850:60:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8809,"nodeType":"EmitStatement","src":"5845:65:24"},{"expression":{"id":8810,"name":"researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"5936:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8667,"id":8811,"nodeType":"Return","src":"5929:17:24"}]},"documentation":{"id":8640,"nodeType":"StructuredDocumentation","src":"3172:597:24","text":" @dev Publish research with integrated dataset and ZK proofs\n @param _title Title of the research\n @param _description Description of the research\n @param _datasetName Name of the dataset\n @param _datasetDescription Description of the dataset\n @param _datasetHash Hash of the dataset\n @param _metadataHash IPFS hash for research metadata\n @param _zkProofIds Array of ZK proof IDs that validate this research\n @param _isDatasetPublic Whether the dataset should be public\n @param _datasetAccessPrice Price to access the dataset"},"functionSelector":"c1ecfefa","id":8813,"implemented":true,"kind":"function","modifiers":[{"id":8662,"kind":"modifierInvocation","modifierName":{"id":8661,"name":"onlyRegisteredUser","nameLocations":["4138:18:24"],"nodeType":"IdentifierPath","referencedDeclaration":8565,"src":"4138:18:24"},"nodeType":"ModifierInvocation","src":"4138:18:24"},{"id":8664,"kind":"modifierInvocation","modifierName":{"id":8663,"name":"nonReentrant","nameLocations":["4157:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"4157:12:24"},"nodeType":"ModifierInvocation","src":"4157:12:24"}],"name":"publishResearch","nameLocation":"3783:15:24","nodeType":"FunctionDefinition","parameters":{"id":8660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8642,"mutability":"mutable","name":"_title","nameLocation":"3822:6:24","nodeType":"VariableDeclaration","scope":8813,"src":"3808:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8641,"name":"string","nodeType":"ElementaryTypeName","src":"3808:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8644,"mutability":"mutable","name":"_description","nameLocation":"3852:12:24","nodeType":"VariableDeclaration","scope":8813,"src":"3838:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8643,"name":"string","nodeType":"ElementaryTypeName","src":"3838:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8646,"mutability":"mutable","name":"_datasetName","nameLocation":"3888:12:24","nodeType":"VariableDeclaration","scope":8813,"src":"3874:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8645,"name":"string","nodeType":"ElementaryTypeName","src":"3874:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8648,"mutability":"mutable","name":"_datasetDescription","nameLocation":"3924:19:24","nodeType":"VariableDeclaration","scope":8813,"src":"3910:33:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8647,"name":"string","nodeType":"ElementaryTypeName","src":"3910:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8650,"mutability":"mutable","name":"_datasetHash","nameLocation":"3967:12:24","nodeType":"VariableDeclaration","scope":8813,"src":"3953:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8649,"name":"string","nodeType":"ElementaryTypeName","src":"3953:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8652,"mutability":"mutable","name":"_metadataHash","nameLocation":"4003:13:24","nodeType":"VariableDeclaration","scope":8813,"src":"3989:27:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8651,"name":"string","nodeType":"ElementaryTypeName","src":"3989:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8655,"mutability":"mutable","name":"_zkProofIds","nameLocation":"4043:11:24","nodeType":"VariableDeclaration","scope":8813,"src":"4026:28:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8653,"name":"uint256","nodeType":"ElementaryTypeName","src":"4026:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8654,"nodeType":"ArrayTypeName","src":"4026:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8657,"mutability":"mutable","name":"_isDatasetPublic","nameLocation":"4069:16:24","nodeType":"VariableDeclaration","scope":8813,"src":"4064:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8656,"name":"bool","nodeType":"ElementaryTypeName","src":"4064:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8659,"mutability":"mutable","name":"_datasetAccessPrice","nameLocation":"4103:19:24","nodeType":"VariableDeclaration","scope":8813,"src":"4095:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8658,"name":"uint256","nodeType":"ElementaryTypeName","src":"4095:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3798:330:24"},"returnParameters":{"id":8667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8813,"src":"4179:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8665,"name":"uint256","nodeType":"ElementaryTypeName","src":"4179:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4178:9:24"},"scope":9357,"src":"3774:2179:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9001,"nodeType":"Block","src":"6430:1987:24","statements":[{"assignments":[8834],"declarations":[{"constant":false,"id":8834,"mutability":"mutable","name":"research","nameLocation":"6457:8:24","nodeType":"VariableDeclaration","scope":9001,"src":"6440:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research"},"typeName":{"id":8833,"nodeType":"UserDefinedTypeName","pathNode":{"id":8832,"name":"Research","nameLocations":["6440:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":8459,"src":"6440:8:24"},"referencedDeclaration":8459,"src":"6440:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research"}},"visibility":"internal"}],"id":8838,"initialValue":{"baseExpression":{"id":8835,"name":"researches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8485,"src":"6468:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Research_$8459_storage_$","typeString":"mapping(uint256 => struct DeSciPlatform.Research storage ref)"}},"id":8837,"indexExpression":{"id":8836,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8816,"src":"6479:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6468:23:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage","typeString":"struct DeSciPlatform.Research storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6440:51:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"},"id":8844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8840,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"6509:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":8841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6518:6:24","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":8454,"src":"6509:15:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8842,"name":"ResearchStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"6528:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ResearchStatus_$8480_$","typeString":"type(enum DeSciPlatform.ResearchStatus)"}},"id":8843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6543:9:24","memberName":"Submitted","nodeType":"MemberAccess","referencedDeclaration":8476,"src":"6528:24:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"src":"6509:43:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"},"id":8849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8845,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"6556:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":8846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6565:6:24","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":8454,"src":"6556:15:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8847,"name":"ResearchStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"6575:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ResearchStatus_$8480_$","typeString":"type(enum DeSciPlatform.ResearchStatus)"}},"id":8848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6590:11:24","memberName":"UnderReview","nodeType":"MemberAccess","referencedDeclaration":8477,"src":"6575:26:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"src":"6556:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6509:92:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265736561726368206e6f7420617661696c61626c6520666f7220726576696577","id":8851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6603:35:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_b3bb20aa76b5299e3a55e97e3d11de7e45a590931e359c78debfa532aa9682d7","typeString":"literal_string \"Research not available for review\""},"value":"Research not available for review"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b3bb20aa76b5299e3a55e97e3d11de7e45a590931e359c78debfa532aa9682d7","typeString":"literal_string \"Research not available for review\""}],"id":8839,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6501:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6501:138:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8853,"nodeType":"ExpressionStatement","src":"6501:138:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8855,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"6657:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":8856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6666:10:24","memberName":"researcher","nodeType":"MemberAccess","referencedDeclaration":8440,"src":"6657:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8857,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6680:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6684:6:24","memberName":"sender","nodeType":"MemberAccess","src":"6680:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6657:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420726576696577206f776e207265736561726368","id":8860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6692:28:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_1fecc728cd9b150ec1edd21bf49df3b4109f1e586d66f8691e6d015ee3509895","typeString":"literal_string \"Cannot review own research\""},"value":"Cannot review own research"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1fecc728cd9b150ec1edd21bf49df3b4109f1e586d66f8691e6d015ee3509895","typeString":"literal_string \"Cannot review own research\""}],"id":8854,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6649:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:72:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8862,"nodeType":"ExpressionStatement","src":"6649:72:24"},{"expression":{"arguments":[{"id":8870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6739:37:24","subExpression":{"baseExpression":{"baseExpression":{"id":8864,"name":"hasReviewed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8502,"src":"6740:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":8866,"indexExpression":{"id":8865,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8816,"src":"6752:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6740:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8869,"indexExpression":{"expression":{"id":8867,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6765:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6769:6:24","memberName":"sender","nodeType":"MemberAccess","src":"6765:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6740:36:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792072657669657765642074686973207265736561726368","id":8871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6778:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a38cf0a4f5c5564936630c672626ba6ac615a4fb5d3d246000aa97aebe4cad0","typeString":"literal_string \"Already reviewed this research\""},"value":"Already reviewed this research"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a38cf0a4f5c5564936630c672626ba6ac615a4fb5d3d246000aa97aebe4cad0","typeString":"literal_string \"Already reviewed this research\""}],"id":8863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6731:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6731:80:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8873,"nodeType":"ExpressionStatement","src":"6731:80:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8875,"name":"_rating","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8818,"src":"6829:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":8876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6840:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6829:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8878,"name":"_rating","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8818,"src":"6845:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130","id":8879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6856:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6845:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6829:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526174696e67206d757374206265206265747765656e20312d3130","id":8882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6860:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_99789be608afdc649c7a0b2ba1a2639e3c8a6a8e486c66f774a2175901ad0d0d","typeString":"literal_string \"Rating must be between 1-10\""},"value":"Rating must be between 1-10"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99789be608afdc649c7a0b2ba1a2639e3c8a6a8e486c66f774a2175901ad0d0d","typeString":"literal_string \"Rating must be between 1-10\""}],"id":8874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6821:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6821:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8884,"nodeType":"ExpressionStatement","src":"6821:69:24"},{"assignments":[8886],"declarations":[{"constant":false,"id":8886,"mutability":"mutable","name":"reviewerReputation","nameLocation":"6954:18:24","nodeType":"VariableDeclaration","scope":9001,"src":"6946:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8885,"name":"uint256","nodeType":"ElementaryTypeName","src":"6946:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8892,"initialValue":{"arguments":[{"expression":{"id":8889,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7013:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7017:6:24","memberName":"sender","nodeType":"MemberAccess","src":"7013:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8887,"name":"userProfileContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8423,"src":"6975:19:24","typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"}},"id":8888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6995:17:24","memberName":"getUserReputation","nodeType":"MemberAccess","referencedDeclaration":9823,"src":"6975:37:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6975:49:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6946:78:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8894,"name":"reviewerReputation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8886,"src":"7042:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8895,"name":"minimumReputationToReview","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"7064:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:47:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742072657075746174696f6e20746f20726576696577","id":8897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7091:35:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_66b1440fc9ec32d91f9cd75b37a52d3d6e64713c2974039e4dcc7fb0de89cad3","typeString":"literal_string \"Insufficient reputation to review\""},"value":"Insufficient reputation to review"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_66b1440fc9ec32d91f9cd75b37a52d3d6e64713c2974039e4dcc7fb0de89cad3","typeString":"literal_string \"Insufficient reputation to review\""}],"id":8893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7034:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:93:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8899,"nodeType":"ExpressionStatement","src":"7034:93:24"},{"expression":{"arguments":[{"arguments":[{"id":8905,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8816,"src":"7232:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8906,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7267:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7271:6:24","memberName":"sender","nodeType":"MemberAccess","src":"7267:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8908,"name":"_rating","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8818,"src":"7299:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8909,"name":"_comments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8820,"src":"7330:9:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8910,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8822,"src":"7363:9:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8911,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7398:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7404:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"7398:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":8915,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7474:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7478:6:24","memberName":"sender","nodeType":"MemberAccess","src":"7474:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8913,"name":"userProfileContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8423,"src":"7439:19:24","typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"}},"id":8914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7459:14:24","memberName":"isUserVerified","nodeType":"MemberAccess","referencedDeclaration":9802,"src":"7439:34:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8904,"name":"PeerReview","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8474,"src":"7195:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PeerReview_$8474_storage_ptr_$","typeString":"type(struct DeSciPlatform.PeerReview storage pointer)"}},"id":8918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7220:10:24","7257:8:24","7291:6:24","7320:8:24","7353:8:24","7386:10:24","7427:10:24"],"names":["researchId","reviewer","rating","comments","ipfsHash","reviewedAt","isVerified"],"nodeType":"FunctionCall","src":"7195:301:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PeerReview_$8474_memory_ptr","typeString":"struct DeSciPlatform.PeerReview memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PeerReview_$8474_memory_ptr","typeString":"struct DeSciPlatform.PeerReview memory"}],"expression":{"baseExpression":{"id":8900,"name":"peerReviews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8491,"src":"7165:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct DeSciPlatform.PeerReview storage ref[] storage ref)"}},"id":8902,"indexExpression":{"id":8901,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8816,"src":"7177:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7165:24:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage","typeString":"struct DeSciPlatform.PeerReview storage ref[] storage ref"}},"id":8903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7190:4:24","memberName":"push","nodeType":"MemberAccess","src":"7165:29:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_ptr_$_t_struct$_PeerReview_$8474_storage_$returns$__$attached_to$_t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_ptr_$","typeString":"function (struct DeSciPlatform.PeerReview storage ref[] storage pointer,struct DeSciPlatform.PeerReview storage ref)"}},"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7165:332:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8920,"nodeType":"ExpressionStatement","src":"7165:332:24"},{"expression":{"id":8928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8921,"name":"hasReviewed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8502,"src":"7508:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":8925,"indexExpression":{"id":8922,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8816,"src":"7520:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7508:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8926,"indexExpression":{"expression":{"id":8923,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7533:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7537:6:24","memberName":"sender","nodeType":"MemberAccess","src":"7533:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7508:36:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7547:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7508:43:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8929,"nodeType":"ExpressionStatement","src":"7508:43:24"},{"expression":{"id":8933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7561:26:24","subExpression":{"expression":{"id":8930,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"7561:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":8932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7570:15:24","memberName":"peerReviewCount","nodeType":"MemberAccess","referencedDeclaration":8456,"src":"7561:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8934,"nodeType":"ExpressionStatement","src":"7561:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"},"id":8939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8935,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"7636:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":8936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7645:6:24","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":8454,"src":"7636:15:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8937,"name":"ResearchStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"7655:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ResearchStatus_$8480_$","typeString":"type(enum DeSciPlatform.ResearchStatus)"}},"id":8938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7670:9:24","memberName":"Submitted","nodeType":"MemberAccess","referencedDeclaration":8476,"src":"7655:24:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"src":"7636:43:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8956,"nodeType":"IfStatement","src":"7632:225:24","trueBody":{"id":8955,"nodeType":"Block","src":"7681:176:24","statements":[{"expression":{"id":8945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8940,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"7695:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":8942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7704:6:24","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":8454,"src":"7695:15:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8943,"name":"ResearchStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"7713:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ResearchStatus_$8480_$","typeString":"type(enum DeSciPlatform.ResearchStatus)"}},"id":8944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7728:11:24","memberName":"UnderReview","nodeType":"MemberAccess","referencedDeclaration":8477,"src":"7713:26:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"src":"7695:44:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"id":8946,"nodeType":"ExpressionStatement","src":"7695:44:24"},{"eventCall":{"arguments":[{"id":8948,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8816,"src":"7780:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8949,"name":"ResearchStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"7793:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ResearchStatus_$8480_$","typeString":"type(enum DeSciPlatform.ResearchStatus)"}},"id":8950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7808:9:24","memberName":"Submitted","nodeType":"MemberAccess","referencedDeclaration":8476,"src":"7793:24:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},{"expression":{"id":8951,"name":"ResearchStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"7819:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ResearchStatus_$8480_$","typeString":"type(enum DeSciPlatform.ResearchStatus)"}},"id":8952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7834:11:24","memberName":"UnderReview","nodeType":"MemberAccess","referencedDeclaration":8477,"src":"7819:26:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"},{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}],"id":8947,"name":"ResearchStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8552,"src":"7758:21:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_ResearchStatus_$8480_$_t_enum$_ResearchStatus_$8480_$returns$__$","typeString":"function (uint256,enum DeSciPlatform.ResearchStatus,enum DeSciPlatform.ResearchStatus)"}},"id":8953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7758:88:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8954,"nodeType":"EmitStatement","src":"7753:93:24"}]}},{"expression":{"arguments":[{"id":8958,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8816,"src":"7928:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8957,"name":"_updateAverageRating","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9195,"src":"7907:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7907:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8960,"nodeType":"ExpressionStatement","src":"7907:33:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8963,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8014:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_DeSciPlatform_$9357","typeString":"contract DeSciPlatform"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DeSciPlatform_$9357","typeString":"contract DeSciPlatform"}],"id":8962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8961,"name":"address","nodeType":"ElementaryTypeName","src":"8006:7:24","typeDescriptions":{}}},"id":8964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8006:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8020:7:24","memberName":"balance","nodeType":"MemberAccess","src":"8006:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8966,"name":"reviewReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8516,"src":"8031:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8006:37:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8978,"nodeType":"IfStatement","src":"8002:110:24","trueBody":{"id":8977,"nodeType":"Block","src":"8045:67:24","statements":[{"expression":{"arguments":[{"id":8974,"name":"reviewReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8516,"src":"8088:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":8970,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8067:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8071:6:24","memberName":"sender","nodeType":"MemberAccess","src":"8067:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8059:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":8968,"name":"address","nodeType":"ElementaryTypeName","src":"8059:8:24","stateMutability":"payable","typeDescriptions":{}}},"id":8972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8059:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":8973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8079:8:24","memberName":"transfer","nodeType":"MemberAccess","src":"8059:28:24","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8059:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8976,"nodeType":"ExpressionStatement","src":"8059:42:24"}]}},{"eventCall":{"arguments":[{"id":8980,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8816,"src":"8147:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8981,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8160:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8164:6:24","memberName":"sender","nodeType":"MemberAccess","src":"8160:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8983,"name":"_rating","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8818,"src":"8172:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8979,"name":"PeerReviewSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8542,"src":"8127:19:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":8984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8127:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8985,"nodeType":"EmitStatement","src":"8122:58:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8986,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"8273:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":8987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8282:15:24","memberName":"peerReviewCount","nodeType":"MemberAccess","referencedDeclaration":8456,"src":"8273:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8988,"name":"minimumReviewsToPublish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8513,"src":"8301:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8273:51:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8990,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"8328:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":8991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8337:13:24","memberName":"averageRating","nodeType":"MemberAccess","referencedDeclaration":8458,"src":"8328:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"37","id":8992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8354:1:24","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"8328:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8273:82:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9000,"nodeType":"IfStatement","src":"8269:142:24","trueBody":{"id":8999,"nodeType":"Block","src":"8357:54:24","statements":[{"expression":{"arguments":[{"id":8996,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8816,"src":"8388:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8995,"name":"_publishResearch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9100,"src":"8371:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8371:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8998,"nodeType":"ExpressionStatement","src":"8371:29:24"}]}}]},"documentation":{"id":8814,"nodeType":"StructuredDocumentation","src":"5959:245:24","text":" @dev Submit a peer review for research\n @param _researchId ID of the research to review\n @param _rating Rating from 1-10\n @param _comments Review comments\n @param _ipfsHash IPFS hash for detailed review"},"functionSelector":"b8f02b30","id":9002,"implemented":true,"kind":"function","modifiers":[{"id":8825,"kind":"modifierInvocation","modifierName":{"id":8824,"name":"onlyRegisteredUser","nameLocations":["6370:18:24"],"nodeType":"IdentifierPath","referencedDeclaration":8565,"src":"6370:18:24"},"nodeType":"ModifierInvocation","src":"6370:18:24"},{"arguments":[{"id":8827,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8816,"src":"6404:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8828,"kind":"modifierInvocation","modifierName":{"id":8826,"name":"researchExists","nameLocations":["6389:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":8578,"src":"6389:14:24"},"nodeType":"ModifierInvocation","src":"6389:27:24"},{"id":8830,"kind":"modifierInvocation","modifierName":{"id":8829,"name":"nonReentrant","nameLocations":["6417:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"6417:12:24"},"nodeType":"ModifierInvocation","src":"6417:12:24"}],"name":"submitPeerReview","nameLocation":"6218:16:24","nodeType":"FunctionDefinition","parameters":{"id":8823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8816,"mutability":"mutable","name":"_researchId","nameLocation":"6252:11:24","nodeType":"VariableDeclaration","scope":9002,"src":"6244:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8815,"name":"uint256","nodeType":"ElementaryTypeName","src":"6244:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8818,"mutability":"mutable","name":"_rating","nameLocation":"6281:7:24","nodeType":"VariableDeclaration","scope":9002,"src":"6273:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8817,"name":"uint256","nodeType":"ElementaryTypeName","src":"6273:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8820,"mutability":"mutable","name":"_comments","nameLocation":"6312:9:24","nodeType":"VariableDeclaration","scope":9002,"src":"6298:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8819,"name":"string","nodeType":"ElementaryTypeName","src":"6298:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8822,"mutability":"mutable","name":"_ipfsHash","nameLocation":"6345:9:24","nodeType":"VariableDeclaration","scope":9002,"src":"6331:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8821,"name":"string","nodeType":"ElementaryTypeName","src":"6331:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6234:126:24"},"returnParameters":{"id":8831,"nodeType":"ParameterList","parameters":[],"src":"6430:0:24"},"scope":9357,"src":"6209:2208:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9099,"nodeType":"Block","src":"8608:1122:24","statements":[{"assignments":[9010],"declarations":[{"constant":false,"id":9010,"mutability":"mutable","name":"research","nameLocation":"8635:8:24","nodeType":"VariableDeclaration","scope":9099,"src":"8618:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research"},"typeName":{"id":9009,"nodeType":"UserDefinedTypeName","pathNode":{"id":9008,"name":"Research","nameLocations":["8618:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":8459,"src":"8618:8:24"},"referencedDeclaration":8459,"src":"8618:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research"}},"visibility":"internal"}],"id":9014,"initialValue":{"baseExpression":{"id":9011,"name":"researches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8485,"src":"8646:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Research_$8459_storage_$","typeString":"mapping(uint256 => struct DeSciPlatform.Research storage ref)"}},"id":9013,"indexExpression":{"id":9012,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9005,"src":"8657:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8646:23:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage","typeString":"struct DeSciPlatform.Research storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8618:51:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"},"id":9020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9016,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"8687:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":9017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8696:6:24","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":8454,"src":"8687:15:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9018,"name":"ResearchStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"8706:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ResearchStatus_$8480_$","typeString":"type(enum DeSciPlatform.ResearchStatus)"}},"id":9019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8721:11:24","memberName":"UnderReview","nodeType":"MemberAccess","referencedDeclaration":8477,"src":"8706:26:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"src":"8687:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265736561726368206e6f7420726561647920666f72207075626c697368696e67","id":9021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8734:35:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2e879a15f5d3f06ade5ee30af9a4a38c68e323fc502a341bd1b05ad7f187f06","typeString":"literal_string \"Research not ready for publishing\""},"value":"Research not ready for publishing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2e879a15f5d3f06ade5ee30af9a4a38c68e323fc502a341bd1b05ad7f187f06","typeString":"literal_string \"Research not ready for publishing\""}],"id":9015,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8679:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8679:91:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9023,"nodeType":"ExpressionStatement","src":"8679:91:24"},{"assignments":[9025],"declarations":[{"constant":false,"id":9025,"mutability":"mutable","name":"nftTokenId","nameLocation":"8826:10:24","nodeType":"VariableDeclaration","scope":9099,"src":"8818:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9024,"name":"uint256","nodeType":"ElementaryTypeName","src":"8818:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9038,"initialValue":{"arguments":[{"expression":{"id":9028,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"8880:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":9029,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8889:10:24","memberName":"researcher","nodeType":"MemberAccess","referencedDeclaration":8440,"src":"8880:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9030,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"8913:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":9031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8922:5:24","memberName":"title","nodeType":"MemberAccess","referencedDeclaration":8436,"src":"8913:14:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":9032,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"8941:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":9033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8950:11:24","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":8438,"src":"8941:20:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":9034,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"8975:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":9035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8984:12:24","memberName":"metadataHash","nodeType":"MemberAccess","referencedDeclaration":8449,"src":"8975:21:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"7061706572","id":9036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9010:7:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea923ca2cdda6b54f4fb2bf6a063e5a59a6369ca4c4ae2c4ce02a147b3036a21","typeString":"literal_string \"paper\""},"value":"paper"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_ea923ca2cdda6b54f4fb2bf6a063e5a59a6369ca4c4ae2c4ce02a147b3036a21","typeString":"literal_string \"paper\""}],"expression":{"id":9026,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8429,"src":"8839:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_DeSciNFTSimple_$8408","typeString":"contract DeSciNFTSimple"}},"id":9027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8851:15:24","memberName":"mintResearchNFT","nodeType":"MemberAccess","referencedDeclaration":8223,"src":"8839:27:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,string memory,string memory,string memory,string memory) external returns (uint256)"}},"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8839:188:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8818:209:24"},{"expression":{"id":9043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9039,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"9072:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":9041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9081:10:24","memberName":"nftTokenId","nodeType":"MemberAccess","referencedDeclaration":8444,"src":"9072:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9042,"name":"nftTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9025,"src":"9094:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9072:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9044,"nodeType":"ExpressionStatement","src":"9072:32:24"},{"expression":{"id":9050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9045,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"9114:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":9047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9123:11:24","memberName":"publishedAt","nodeType":"MemberAccess","referencedDeclaration":8451,"src":"9114:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9048,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9137:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9143:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"9137:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9114:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9051,"nodeType":"ExpressionStatement","src":"9114:38:24"},{"expression":{"id":9057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9052,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"9162:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":9054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9171:6:24","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":8454,"src":"9162:15:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9055,"name":"ResearchStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"9180:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ResearchStatus_$8480_$","typeString":"type(enum DeSciPlatform.ResearchStatus)"}},"id":9056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9195:9:24","memberName":"Published","nodeType":"MemberAccess","referencedDeclaration":8478,"src":"9180:24:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"src":"9162:42:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},"id":9058,"nodeType":"ExpressionStatement","src":"9162:42:24"},{"assignments":[9060],"declarations":[{"constant":false,"id":9060,"mutability":"mutable","name":"currentReputation","nameLocation":"9263:17:24","nodeType":"VariableDeclaration","scope":9099,"src":"9255:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9059,"name":"uint256","nodeType":"ElementaryTypeName","src":"9255:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9066,"initialValue":{"arguments":[{"expression":{"id":9063,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"9321:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":9064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9330:10:24","memberName":"researcher","nodeType":"MemberAccess","referencedDeclaration":8440,"src":"9321:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9061,"name":"userProfileContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8423,"src":"9283:19:24","typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"}},"id":9062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9303:17:24","memberName":"getUserReputation","nodeType":"MemberAccess","referencedDeclaration":9823,"src":"9283:37:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9283:58:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9255:86:24"},{"assignments":[9068],"declarations":[{"constant":false,"id":9068,"mutability":"mutable","name":"bonusReputation","nameLocation":"9359:15:24","nodeType":"VariableDeclaration","scope":9099,"src":"9351:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9067,"name":"uint256","nodeType":"ElementaryTypeName","src":"9351:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9073,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9069,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"9377:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":9070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9386:13:24","memberName":"averageRating","nodeType":"MemberAccess","referencedDeclaration":8458,"src":"9377:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":9071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9402:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"9377:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9351:53:24"},{"expression":{"arguments":[{"expression":{"id":9077,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"9484:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":9078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9493:10:24","memberName":"researcher","nodeType":"MemberAccess","referencedDeclaration":8440,"src":"9484:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9079,"name":"currentReputation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"9505:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9080,"name":"bonusReputation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"9525:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9505:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9074,"name":"userProfileContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8423,"src":"9447:19:24","typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"}},"id":9076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9467:16:24","memberName":"updateReputation","nodeType":"MemberAccess","referencedDeclaration":9758,"src":"9447:36:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":9082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9447:94:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9083,"nodeType":"ExpressionStatement","src":"9447:94:24"},{"eventCall":{"arguments":[{"id":9085,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9005,"src":"9575:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9086,"name":"nftTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9025,"src":"9588:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9087,"name":"research","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"9600:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research storage pointer"}},"id":9088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9609:10:24","memberName":"researcher","nodeType":"MemberAccess","referencedDeclaration":8440,"src":"9600:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9084,"name":"ResearchPublished","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8534,"src":"9557:17:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":9089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9557:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9090,"nodeType":"EmitStatement","src":"9552:68:24"},{"eventCall":{"arguments":[{"id":9092,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9005,"src":"9657:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9093,"name":"ResearchStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"9670:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ResearchStatus_$8480_$","typeString":"type(enum DeSciPlatform.ResearchStatus)"}},"id":9094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9685:11:24","memberName":"UnderReview","nodeType":"MemberAccess","referencedDeclaration":8477,"src":"9670:26:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}},{"expression":{"id":9095,"name":"ResearchStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"9698:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ResearchStatus_$8480_$","typeString":"type(enum DeSciPlatform.ResearchStatus)"}},"id":9096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9713:9:24","memberName":"Published","nodeType":"MemberAccess","referencedDeclaration":8478,"src":"9698:24:24","typeDescriptions":{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"},{"typeIdentifier":"t_enum$_ResearchStatus_$8480","typeString":"enum DeSciPlatform.ResearchStatus"}],"id":9091,"name":"ResearchStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8552,"src":"9635:21:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_ResearchStatus_$8480_$_t_enum$_ResearchStatus_$8480_$returns$__$","typeString":"function (uint256,enum DeSciPlatform.ResearchStatus,enum DeSciPlatform.ResearchStatus)"}},"id":9097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9635:88:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9098,"nodeType":"EmitStatement","src":"9630:93:24"}]},"documentation":{"id":9003,"nodeType":"StructuredDocumentation","src":"8423:124:24","text":" @dev Internal function to publish research as NFT\n @param _researchId ID of the research to publish"},"id":9100,"implemented":true,"kind":"function","modifiers":[],"name":"_publishResearch","nameLocation":"8561:16:24","nodeType":"FunctionDefinition","parameters":{"id":9006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9005,"mutability":"mutable","name":"_researchId","nameLocation":"8586:11:24","nodeType":"VariableDeclaration","scope":9100,"src":"8578:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9004,"name":"uint256","nodeType":"ElementaryTypeName","src":"8578:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8577:21:24"},"returnParameters":{"id":9007,"nodeType":"ParameterList","parameters":[],"src":"8608:0:24"},"scope":9357,"src":"8552:1178:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9115,"nodeType":"Block","src":"9960:46:24","statements":[{"expression":{"arguments":[{"id":9112,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9103,"src":"9987:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9111,"name":"_publishResearch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9100,"src":"9970:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":9113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9114,"nodeType":"ExpressionStatement","src":"9970:29:24"}]},"documentation":{"id":9101,"nodeType":"StructuredDocumentation","src":"9736:118:24","text":" @dev Manually publish research (owner only)\n @param _researchId ID of the research to publish"},"functionSelector":"53d26380","id":9116,"implemented":true,"kind":"function","modifiers":[{"id":9106,"kind":"modifierInvocation","modifierName":{"id":9105,"name":"onlyOwner","nameLocations":["9922:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"9922:9:24"},"nodeType":"ModifierInvocation","src":"9922:9:24"},{"arguments":[{"id":9108,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9103,"src":"9947:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9109,"kind":"modifierInvocation","modifierName":{"id":9107,"name":"researchExists","nameLocations":["9932:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":8578,"src":"9932:14:24"},"nodeType":"ModifierInvocation","src":"9932:27:24"}],"name":"manuallyPublishResearch","nameLocation":"9868:23:24","nodeType":"FunctionDefinition","parameters":{"id":9104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9103,"mutability":"mutable","name":"_researchId","nameLocation":"9900:11:24","nodeType":"VariableDeclaration","scope":9116,"src":"9892:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9102,"name":"uint256","nodeType":"ElementaryTypeName","src":"9892:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9891:21:24"},"returnParameters":{"id":9110,"nodeType":"ParameterList","parameters":[],"src":"9960:0:24"},"scope":9357,"src":"9859:147:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9194,"nodeType":"Block","src":"10180:575:24","statements":[{"assignments":[9126],"declarations":[{"constant":false,"id":9126,"mutability":"mutable","name":"reviews","nameLocation":"10211:7:24","nodeType":"VariableDeclaration","scope":9194,"src":"10190:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_ptr","typeString":"struct DeSciPlatform.PeerReview[]"},"typeName":{"baseType":{"id":9124,"nodeType":"UserDefinedTypeName","pathNode":{"id":9123,"name":"PeerReview","nameLocations":["10190:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":8474,"src":"10190:10:24"},"referencedDeclaration":8474,"src":"10190:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_PeerReview_$8474_storage_ptr","typeString":"struct DeSciPlatform.PeerReview"}},"id":9125,"nodeType":"ArrayTypeName","src":"10190:12:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_ptr","typeString":"struct DeSciPlatform.PeerReview[]"}},"visibility":"internal"}],"id":9130,"initialValue":{"baseExpression":{"id":9127,"name":"peerReviews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8491,"src":"10221:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct DeSciPlatform.PeerReview storage ref[] storage ref)"}},"id":9129,"indexExpression":{"id":9128,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9119,"src":"10233:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10221:24:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage","typeString":"struct DeSciPlatform.PeerReview storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10190:55:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9131,"name":"reviews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9126,"src":"10259:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_ptr","typeString":"struct DeSciPlatform.PeerReview storage ref[] storage pointer"}},"id":9132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10267:6:24","memberName":"length","nodeType":"MemberAccess","src":"10259:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10277:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10259:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9136,"nodeType":"IfStatement","src":"10255:32:24","trueBody":{"functionReturnParameters":9121,"id":9135,"nodeType":"Return","src":"10280:7:24"}},{"assignments":[9138],"declarations":[{"constant":false,"id":9138,"mutability":"mutable","name":"totalRating","nameLocation":"10305:11:24","nodeType":"VariableDeclaration","scope":9194,"src":"10297:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9137,"name":"uint256","nodeType":"ElementaryTypeName","src":"10297:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9140,"initialValue":{"hexValue":"30","id":9139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10297:23:24"},{"assignments":[9142],"declarations":[{"constant":false,"id":9142,"mutability":"mutable","name":"verifiedReviews","nameLocation":"10338:15:24","nodeType":"VariableDeclaration","scope":9194,"src":"10330:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9141,"name":"uint256","nodeType":"ElementaryTypeName","src":"10330:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9144,"initialValue":{"hexValue":"30","id":9143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10356:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10330:27:24"},{"body":{"id":9179,"nodeType":"Block","src":"10413:237:24","statements":[{"expression":{"id":9161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9156,"name":"totalRating","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9138,"src":"10427:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":9157,"name":"reviews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9126,"src":"10442:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_ptr","typeString":"struct DeSciPlatform.PeerReview storage ref[] storage pointer"}},"id":9159,"indexExpression":{"id":9158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"10450:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10442:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_PeerReview_$8474_storage","typeString":"struct DeSciPlatform.PeerReview storage ref"}},"id":9160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10453:6:24","memberName":"rating","nodeType":"MemberAccess","referencedDeclaration":8465,"src":"10442:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10427:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9162,"nodeType":"ExpressionStatement","src":"10427:32:24"},{"condition":{"expression":{"baseExpression":{"id":9163,"name":"reviews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9126,"src":"10477:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_ptr","typeString":"struct DeSciPlatform.PeerReview storage ref[] storage pointer"}},"id":9165,"indexExpression":{"id":9164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"10485:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10477:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_PeerReview_$8474_storage","typeString":"struct DeSciPlatform.PeerReview storage ref"}},"id":9166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10488:10:24","memberName":"isVerified","nodeType":"MemberAccess","referencedDeclaration":8473,"src":"10477:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9178,"nodeType":"IfStatement","src":"10473:167:24","trueBody":{"id":9177,"nodeType":"Block","src":"10500:140:24","statements":[{"expression":{"id":9168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10518:17:24","subExpression":{"id":9167,"name":"verifiedReviews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9142,"src":"10518:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9169,"nodeType":"ExpressionStatement","src":"10518:17:24"},{"expression":{"id":9175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9170,"name":"totalRating","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9138,"src":"10553:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":9171,"name":"reviews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9126,"src":"10568:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_ptr","typeString":"struct DeSciPlatform.PeerReview storage ref[] storage pointer"}},"id":9173,"indexExpression":{"id":9172,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"10576:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10568:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_PeerReview_$8474_storage","typeString":"struct DeSciPlatform.PeerReview storage ref"}},"id":9174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10579:6:24","memberName":"rating","nodeType":"MemberAccess","referencedDeclaration":8465,"src":"10568:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10553:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9176,"nodeType":"ExpressionStatement","src":"10553:32:24"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9149,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"10388:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9150,"name":"reviews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9126,"src":"10392:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_ptr","typeString":"struct DeSciPlatform.PeerReview storage ref[] storage pointer"}},"id":9151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10400:6:24","memberName":"length","nodeType":"MemberAccess","src":"10392:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10388:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9180,"initializationExpression":{"assignments":[9146],"declarations":[{"constant":false,"id":9146,"mutability":"mutable","name":"i","nameLocation":"10381:1:24","nodeType":"VariableDeclaration","scope":9180,"src":"10373:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9145,"name":"uint256","nodeType":"ElementaryTypeName","src":"10373:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9148,"initialValue":{"hexValue":"30","id":9147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10385:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10373:13:24"},"loopExpression":{"expression":{"id":9154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10408:3:24","subExpression":{"id":9153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"10408:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9155,"nodeType":"ExpressionStatement","src":"10408:3:24"},"nodeType":"ForStatement","src":"10368:282:24"},{"expression":{"id":9192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":9181,"name":"researches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8485,"src":"10660:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Research_$8459_storage_$","typeString":"mapping(uint256 => struct DeSciPlatform.Research storage ref)"}},"id":9183,"indexExpression":{"id":9182,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9119,"src":"10671:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10660:23:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage","typeString":"struct DeSciPlatform.Research storage ref"}},"id":9184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10684:13:24","memberName":"averageRating","nodeType":"MemberAccess","referencedDeclaration":8458,"src":"10660:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9185,"name":"totalRating","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9138,"src":"10700:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9186,"name":"reviews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9126,"src":"10715:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_ptr","typeString":"struct DeSciPlatform.PeerReview storage ref[] storage pointer"}},"id":9187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10723:6:24","memberName":"length","nodeType":"MemberAccess","src":"10715:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9188,"name":"verifiedReviews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9142,"src":"10732:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10715:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10714:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10700:48:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10660:88:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9193,"nodeType":"ExpressionStatement","src":"10660:88:24"}]},"documentation":{"id":9117,"nodeType":"StructuredDocumentation","src":"10012:103:24","text":" @dev Update average rating for research\n @param _researchId ID of the research"},"id":9195,"implemented":true,"kind":"function","modifiers":[],"name":"_updateAverageRating","nameLocation":"10129:20:24","nodeType":"FunctionDefinition","parameters":{"id":9120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9119,"mutability":"mutable","name":"_researchId","nameLocation":"10158:11:24","nodeType":"VariableDeclaration","scope":9195,"src":"10150:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9118,"name":"uint256","nodeType":"ElementaryTypeName","src":"10150:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10149:21:24"},"returnParameters":{"id":9121,"nodeType":"ParameterList","parameters":[],"src":"10180:0:24"},"scope":9357,"src":"10120:635:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9211,"nodeType":"Block","src":"10996:47:24","statements":[{"expression":{"baseExpression":{"id":9207,"name":"researches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8485,"src":"11013:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Research_$8459_storage_$","typeString":"mapping(uint256 => struct DeSciPlatform.Research storage ref)"}},"id":9209,"indexExpression":{"id":9208,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"11024:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11013:23:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage","typeString":"struct DeSciPlatform.Research storage ref"}},"functionReturnParameters":9206,"id":9210,"nodeType":"Return","src":"11006:30:24"}]},"documentation":{"id":9196,"nodeType":"StructuredDocumentation","src":"10761:120:24","text":" @dev Get research details\n @param _researchId ID of the research\n @return Research struct"},"functionSelector":"e3e02ba7","id":9212,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9201,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"10957:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9202,"kind":"modifierInvocation","modifierName":{"id":9200,"name":"researchExists","nameLocations":["10942:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":8578,"src":"10942:14:24"},"nodeType":"ModifierInvocation","src":"10942:27:24"}],"name":"getResearch","nameLocation":"10895:11:24","nodeType":"FunctionDefinition","parameters":{"id":9199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9198,"mutability":"mutable","name":"_researchId","nameLocation":"10915:11:24","nodeType":"VariableDeclaration","scope":9212,"src":"10907:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9197,"name":"uint256","nodeType":"ElementaryTypeName","src":"10907:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10906:21:24"},"returnParameters":{"id":9206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9212,"src":"10979:15:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_memory_ptr","typeString":"struct DeSciPlatform.Research"},"typeName":{"id":9204,"nodeType":"UserDefinedTypeName","pathNode":{"id":9203,"name":"Research","nameLocations":["10979:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":8459,"src":"10979:8:24"},"referencedDeclaration":8459,"src":"10979:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Research_$8459_storage_ptr","typeString":"struct DeSciPlatform.Research"}},"visibility":"internal"}],"src":"10978:17:24"},"scope":9357,"src":"10886:157:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9229,"nodeType":"Block","src":"11312:48:24","statements":[{"expression":{"baseExpression":{"id":9225,"name":"peerReviews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8491,"src":"11329:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct DeSciPlatform.PeerReview storage ref[] storage ref)"}},"id":9227,"indexExpression":{"id":9226,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9215,"src":"11341:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11329:24:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage","typeString":"struct DeSciPlatform.PeerReview storage ref[] storage ref"}},"functionReturnParameters":9224,"id":9228,"nodeType":"Return","src":"11322:31:24"}]},"documentation":{"id":9213,"nodeType":"StructuredDocumentation","src":"11049:141:24","text":" @dev Get peer reviews for research\n @param _researchId ID of the research\n @return Array of PeerReview structs"},"functionSelector":"ea41608a","id":9230,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9218,"name":"_researchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9215,"src":"11269:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9219,"kind":"modifierInvocation","modifierName":{"id":9217,"name":"researchExists","nameLocations":["11254:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":8578,"src":"11254:14:24"},"nodeType":"ModifierInvocation","src":"11254:27:24"}],"name":"getPeerReviews","nameLocation":"11204:14:24","nodeType":"FunctionDefinition","parameters":{"id":9216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9215,"mutability":"mutable","name":"_researchId","nameLocation":"11227:11:24","nodeType":"VariableDeclaration","scope":9230,"src":"11219:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9214,"name":"uint256","nodeType":"ElementaryTypeName","src":"11219:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11218:21:24"},"returnParameters":{"id":9224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9230,"src":"11291:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_memory_ptr_$dyn_memory_ptr","typeString":"struct DeSciPlatform.PeerReview[]"},"typeName":{"baseType":{"id":9221,"nodeType":"UserDefinedTypeName","pathNode":{"id":9220,"name":"PeerReview","nameLocations":["11291:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":8474,"src":"11291:10:24"},"referencedDeclaration":8474,"src":"11291:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_PeerReview_$8474_storage_ptr","typeString":"struct DeSciPlatform.PeerReview"}},"id":9222,"nodeType":"ArrayTypeName","src":"11291:12:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PeerReview_$8474_storage_$dyn_storage_ptr","typeString":"struct DeSciPlatform.PeerReview[]"}},"visibility":"internal"}],"src":"11290:21:24"},"scope":9357,"src":"11195:165:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9243,"nodeType":"Block","src":"11617:59:24","statements":[{"expression":{"baseExpression":{"id":9239,"name":"researcherPublications","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"11634:22:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":9241,"indexExpression":{"id":9240,"name":"_researcher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"11657:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11634:35:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":9238,"id":9242,"nodeType":"Return","src":"11627:42:24"}]},"documentation":{"id":9231,"nodeType":"StructuredDocumentation","src":"11366:149:24","text":" @dev Get all research IDs by a researcher\n @param _researcher Address of the researcher\n @return Array of research IDs"},"functionSelector":"55018530","id":9244,"implemented":true,"kind":"function","modifiers":[],"name":"getResearcherPublications","nameLocation":"11529:25:24","nodeType":"FunctionDefinition","parameters":{"id":9234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9233,"mutability":"mutable","name":"_researcher","nameLocation":"11563:11:24","nodeType":"VariableDeclaration","scope":9244,"src":"11555:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9232,"name":"address","nodeType":"ElementaryTypeName","src":"11555:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11554:21:24"},"returnParameters":{"id":9238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9244,"src":"11599:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9235,"name":"uint256","nodeType":"ElementaryTypeName","src":"11599:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9236,"nodeType":"ArrayTypeName","src":"11599:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11598:18:24"},"scope":9357,"src":"11520:156:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9253,"nodeType":"Block","src":"11841:37:24","statements":[{"expression":{"id":9251,"name":"allResearches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"11858:13:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":9250,"id":9252,"nodeType":"Return","src":"11851:20:24"}]},"documentation":{"id":9245,"nodeType":"StructuredDocumentation","src":"11682:85:24","text":" @dev Get all research IDs\n @return Array of all research IDs"},"functionSelector":"2f3f4b92","id":9254,"implemented":true,"kind":"function","modifiers":[],"name":"getAllResearches","nameLocation":"11781:16:24","nodeType":"FunctionDefinition","parameters":{"id":9246,"nodeType":"ParameterList","parameters":[],"src":"11797:2:24"},"returnParameters":{"id":9250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9254,"src":"11823:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9247,"name":"uint256","nodeType":"ElementaryTypeName","src":"11823:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9248,"nodeType":"ArrayTypeName","src":"11823:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11822:18:24"},"scope":9357,"src":"11772:106:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9278,"nodeType":"Block","src":"12124:169:24","statements":[{"expression":{"id":9268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9266,"name":"minimumReputationToReview","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"12134:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9267,"name":"_minimumReputationToReview","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"12162:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12134:54:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9269,"nodeType":"ExpressionStatement","src":"12134:54:24"},{"expression":{"id":9272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9270,"name":"minimumReviewsToPublish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8513,"src":"12198:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9271,"name":"_minimumReviewsToPublish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"12224:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12198:50:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9273,"nodeType":"ExpressionStatement","src":"12198:50:24"},{"expression":{"id":9276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9274,"name":"reviewReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8516,"src":"12258:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9275,"name":"_reviewReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9261,"src":"12273:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12258:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9277,"nodeType":"ExpressionStatement","src":"12258:28:24"}]},"documentation":{"id":9255,"nodeType":"StructuredDocumentation","src":"11884:61:24","text":" @dev Update platform settings (owner only)"},"functionSelector":"ff438552","id":9279,"implemented":true,"kind":"function","modifiers":[{"id":9264,"kind":"modifierInvocation","modifierName":{"id":9263,"name":"onlyOwner","nameLocations":["12114:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"12114:9:24"},"nodeType":"ModifierInvocation","src":"12114:9:24"}],"name":"updatePlatformSettings","nameLocation":"11959:22:24","nodeType":"FunctionDefinition","parameters":{"id":9262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9257,"mutability":"mutable","name":"_minimumReputationToReview","nameLocation":"11999:26:24","nodeType":"VariableDeclaration","scope":9279,"src":"11991:34:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9256,"name":"uint256","nodeType":"ElementaryTypeName","src":"11991:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9259,"mutability":"mutable","name":"_minimumReviewsToPublish","nameLocation":"12043:24:24","nodeType":"VariableDeclaration","scope":9279,"src":"12035:32:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9258,"name":"uint256","nodeType":"ElementaryTypeName","src":"12035:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9261,"mutability":"mutable","name":"_reviewReward","nameLocation":"12085:13:24","nodeType":"VariableDeclaration","scope":9279,"src":"12077:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9260,"name":"uint256","nodeType":"ElementaryTypeName","src":"12077:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11981:123:24"},"returnParameters":{"id":9265,"nodeType":"ParameterList","parameters":[],"src":"12124:0:24"},"scope":9357,"src":"11950:343:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9285,"nodeType":"Block","src":"12420:2:24","statements":[]},"documentation":{"id":9280,"nodeType":"StructuredDocumentation","src":"12299:60:24","text":" @dev Fund the contract for review rewards"},"functionSelector":"eb2093e0","id":9286,"implemented":true,"kind":"function","modifiers":[{"id":9283,"kind":"modifierInvocation","modifierName":{"id":9282,"name":"onlyOwner","nameLocations":["12410:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"12410:9:24"},"nodeType":"ModifierInvocation","src":"12410:9:24"}],"name":"fundReviewRewards","nameLocation":"12373:17:24","nodeType":"FunctionDefinition","parameters":{"id":9281,"nodeType":"ParameterList","parameters":[],"src":"12390:2:24"},"returnParameters":{"id":9284,"nodeType":"ParameterList","parameters":[],"src":"12420:0:24"},"scope":9357,"src":"12364:58:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9305,"nodeType":"Block","src":"12523:65:24","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":9300,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12567:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_DeSciPlatform_$9357","typeString":"contract DeSciPlatform"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DeSciPlatform_$9357","typeString":"contract DeSciPlatform"}],"id":9299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12559:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9298,"name":"address","nodeType":"ElementaryTypeName","src":"12559:7:24","typeDescriptions":{}}},"id":9301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12559:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12573:7:24","memberName":"balance","nodeType":"MemberAccess","src":"12559:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":9294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"12541:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12541:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12533:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":9292,"name":"address","nodeType":"ElementaryTypeName","src":"12533:8:24","stateMutability":"payable","typeDescriptions":{}}},"id":9296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12533:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":9297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12550:8:24","memberName":"transfer","nodeType":"MemberAccess","src":"12533:25:24","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":9303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12533:48:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9304,"nodeType":"ExpressionStatement","src":"12533:48:24"}]},"documentation":{"id":9287,"nodeType":"StructuredDocumentation","src":"12428:51:24","text":" @dev Withdraw funds (owner only)"},"functionSelector":"3ccfd60b","id":9306,"implemented":true,"kind":"function","modifiers":[{"id":9290,"kind":"modifierInvocation","modifierName":{"id":9289,"name":"onlyOwner","nameLocations":["12513:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"12513:9:24"},"nodeType":"ModifierInvocation","src":"12513:9:24"}],"name":"withdraw","nameLocation":"12493:8:24","nodeType":"FunctionDefinition","parameters":{"id":9288,"nodeType":"ParameterList","parameters":[],"src":"12501:2:24"},"returnParameters":{"id":9291,"nodeType":"ParameterList","parameters":[],"src":"12523:0:24"},"scope":9357,"src":"12484:104:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9316,"nodeType":"Block","src":"12751:42:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9312,"name":"nextResearchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8504,"src":"12768:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12785:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12768:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9311,"id":9315,"nodeType":"Return","src":"12761:25:24"}]},"documentation":{"id":9307,"nodeType":"StructuredDocumentation","src":"12594:90:24","text":" @dev Get total number of researches\n @return Total research count"},"functionSelector":"8fa37b46","id":9317,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalResearches","nameLocation":"12698:18:24","nodeType":"FunctionDefinition","parameters":{"id":9308,"nodeType":"ParameterList","parameters":[],"src":"12716:2:24"},"returnParameters":{"id":9311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9317,"src":"12742:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9309,"name":"uint256","nodeType":"ElementaryTypeName","src":"12742:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12741:9:24"},"scope":9357,"src":"12689:104:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9355,"nodeType":"Block","src":"13060:230:24","statements":[{"expression":{"id":9335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9331,"name":"userProfileContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8423,"src":"13070:19:24","typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9333,"name":"_userProfileContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"13104:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9332,"name":"UserProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9824,"src":"13092:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserProfile_$9824_$","typeString":"type(contract UserProfile)"}},"id":9334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13092:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"}},"src":"13070:55:24","typeDescriptions":{"typeIdentifier":"t_contract$_UserProfile_$9824","typeString":"contract UserProfile"}},"id":9336,"nodeType":"ExpressionStatement","src":"13070:55:24"},{"expression":{"id":9341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9337,"name":"zkProofContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8426,"src":"13135:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProof_$10325","typeString":"contract ZKProof"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9339,"name":"_zkProofContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9322,"src":"13161:16:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9338,"name":"ZKProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10325,"src":"13153:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ZKProof_$10325_$","typeString":"type(contract ZKProof)"}},"id":9340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13153:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ZKProof_$10325","typeString":"contract ZKProof"}},"src":"13135:43:24","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProof_$10325","typeString":"contract ZKProof"}},"id":9342,"nodeType":"ExpressionStatement","src":"13135:43:24"},{"expression":{"id":9347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9343,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8429,"src":"13188:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_DeSciNFTSimple_$8408","typeString":"contract DeSciNFTSimple"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9345,"name":"_nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9324,"src":"13217:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9344,"name":"DeSciNFTSimple","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"13202:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DeSciNFTSimple_$8408_$","typeString":"type(contract DeSciNFTSimple)"}},"id":9346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13202:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_DeSciNFTSimple_$8408","typeString":"contract DeSciNFTSimple"}},"src":"13188:42:24","typeDescriptions":{"typeIdentifier":"t_contract$_DeSciNFTSimple_$8408","typeString":"contract DeSciNFTSimple"}},"id":9348,"nodeType":"ExpressionStatement","src":"13188:42:24"},{"expression":{"id":9353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9349,"name":"datasetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8432,"src":"13240:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_Dataset_$8038","typeString":"contract Dataset"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9351,"name":"_datasetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9326,"src":"13266:16:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9350,"name":"Dataset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"13258:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Dataset_$8038_$","typeString":"type(contract Dataset)"}},"id":9352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13258:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Dataset_$8038","typeString":"contract Dataset"}},"src":"13240:43:24","typeDescriptions":{"typeIdentifier":"t_contract$_Dataset_$8038","typeString":"contract Dataset"}},"id":9354,"nodeType":"ExpressionStatement","src":"13240:43:24"}]},"documentation":{"id":9318,"nodeType":"StructuredDocumentation","src":"12799:62:24","text":" @dev Update contract addresses (owner only)"},"functionSelector":"8a61809c","id":9356,"implemented":true,"kind":"function","modifiers":[{"id":9329,"kind":"modifierInvocation","modifierName":{"id":9328,"name":"onlyOwner","nameLocations":["13050:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"13050:9:24"},"nodeType":"ModifierInvocation","src":"13050:9:24"}],"name":"updateContractAddresses","nameLocation":"12875:23:24","nodeType":"FunctionDefinition","parameters":{"id":9327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9320,"mutability":"mutable","name":"_userProfileContract","nameLocation":"12916:20:24","nodeType":"VariableDeclaration","scope":9356,"src":"12908:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9319,"name":"address","nodeType":"ElementaryTypeName","src":"12908:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9322,"mutability":"mutable","name":"_zkProofContract","nameLocation":"12954:16:24","nodeType":"VariableDeclaration","scope":9356,"src":"12946:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9321,"name":"address","nodeType":"ElementaryTypeName","src":"12946:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9324,"mutability":"mutable","name":"_nftContract","nameLocation":"12988:12:24","nodeType":"VariableDeclaration","scope":9356,"src":"12980:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9323,"name":"address","nodeType":"ElementaryTypeName","src":"12980:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9326,"mutability":"mutable","name":"_datasetContract","nameLocation":"13018:16:24","nodeType":"VariableDeclaration","scope":9356,"src":"13010:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9325,"name":"address","nodeType":"ElementaryTypeName","src":"13010:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12898:142:24"},"returnParameters":{"id":9330,"nodeType":"ParameterList","parameters":[],"src":"13060:0:24"},"scope":9357,"src":"12866:424:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9358,"src":"279:13013:24","usedErrors":[393,398,2117],"usedEvents":[404,8526,8534,8542,8552]}],"src":"32:13261:24"},"id":24},"contracts/Greeter.sol":{"ast":{"absolutePath":"contracts/Greeter.sol","exportedSymbols":{"Greeter":[9390]},"id":9391,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9359,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"Greeter","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9390,"linearizedBaseContracts":[9390],"name":"Greeter","nameLocation":"67:7:25","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":9361,"mutability":"mutable","name":"greeting","nameLocation":"96:8:25","nodeType":"VariableDeclaration","scope":9390,"src":"81:23:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9360,"name":"string","nodeType":"ElementaryTypeName","src":"81:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":9370,"nodeType":"Block","src":"148:37:25","statements":[{"expression":{"id":9368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9366,"name":"greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"158:8:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9367,"name":"_greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"169:9:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"158:20:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9369,"nodeType":"ExpressionStatement","src":"158:20:25"}]},"id":9371,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9363,"mutability":"mutable","name":"_greeting","nameLocation":"137:9:25","nodeType":"VariableDeclaration","scope":9371,"src":"123:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9362,"name":"string","nodeType":"ElementaryTypeName","src":"123:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"122:25:25"},"returnParameters":{"id":9365,"nodeType":"ParameterList","parameters":[],"src":"148:0:25"},"scope":9390,"src":"111:74:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9378,"nodeType":"Block","src":"244:32:25","statements":[{"expression":{"id":9376,"name":"greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"261:8:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":9375,"id":9377,"nodeType":"Return","src":"254:15:25"}]},"functionSelector":"cfae3217","id":9379,"implemented":true,"kind":"function","modifiers":[],"name":"greet","nameLocation":"200:5:25","nodeType":"FunctionDefinition","parameters":{"id":9372,"nodeType":"ParameterList","parameters":[],"src":"205:2:25"},"returnParameters":{"id":9375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9379,"src":"229:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9373,"name":"string","nodeType":"ElementaryTypeName","src":"229:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"228:15:25"},"scope":9390,"src":"191:85:25","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9388,"nodeType":"Block","src":"335:37:25","statements":[{"expression":{"id":9386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9384,"name":"greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"345:8:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9385,"name":"_greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9381,"src":"356:9:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"345:20:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9387,"nodeType":"ExpressionStatement","src":"345:20:25"}]},"functionSelector":"a4136862","id":9389,"implemented":true,"kind":"function","modifiers":[],"name":"setGreeting","nameLocation":"291:11:25","nodeType":"FunctionDefinition","parameters":{"id":9382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9381,"mutability":"mutable","name":"_greeting","nameLocation":"317:9:25","nodeType":"VariableDeclaration","scope":9389,"src":"303:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9380,"name":"string","nodeType":"ElementaryTypeName","src":"303:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"302:25:25"},"returnParameters":{"id":9383,"nodeType":"ParameterList","parameters":[],"src":"335:0:25"},"scope":9390,"src":"282:90:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":9391,"src":"58:316:25","usedErrors":[],"usedEvents":[]}],"src":"32:343:25"},"id":25},"contracts/UserProfile.sol":{"ast":{"absolutePath":"contracts/UserProfile.sol","exportedSymbols":{"Context":[2051],"Ownable":[527],"ReentrancyGuard":[2172],"UserProfile":[9824]},"id":9825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9392,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9825,"sourceUnit":528,"src":"58:52:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":9394,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9825,"sourceUnit":2173,"src":"111:59:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9395,"name":"Ownable","nameLocations":["196:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"196:7:26"},"id":9396,"nodeType":"InheritanceSpecifier","src":"196:7:26"},{"baseName":{"id":9397,"name":"ReentrancyGuard","nameLocations":["205:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":2172,"src":"205:15:26"},"id":9398,"nodeType":"InheritanceSpecifier","src":"205:15:26"}],"canonicalName":"UserProfile","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9824,"linearizedBaseContracts":[9824,2172,527,2051],"name":"UserProfile","nameLocation":"181:11:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"UserProfile.Profile","id":9415,"members":[{"constant":false,"id":9400,"mutability":"mutable","name":"fullName","nameLocation":"259:8:26","nodeType":"VariableDeclaration","scope":9415,"src":"252:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9399,"name":"string","nodeType":"ElementaryTypeName","src":"252:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9402,"mutability":"mutable","name":"age","nameLocation":"285:3:26","nodeType":"VariableDeclaration","scope":9415,"src":"277:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9401,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9404,"mutability":"mutable","name":"email","nameLocation":"305:5:26","nodeType":"VariableDeclaration","scope":9415,"src":"298:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9403,"name":"string","nodeType":"ElementaryTypeName","src":"298:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9406,"mutability":"mutable","name":"ipfsHash","nameLocation":"327:8:26","nodeType":"VariableDeclaration","scope":9415,"src":"320:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9405,"name":"string","nodeType":"ElementaryTypeName","src":"320:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9408,"mutability":"mutable","name":"isVerified","nameLocation":"350:10:26","nodeType":"VariableDeclaration","scope":9415,"src":"345:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9407,"name":"bool","nodeType":"ElementaryTypeName","src":"345:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9410,"mutability":"mutable","name":"createdAt","nameLocation":"378:9:26","nodeType":"VariableDeclaration","scope":9415,"src":"370:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9409,"name":"uint256","nodeType":"ElementaryTypeName","src":"370:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9412,"mutability":"mutable","name":"updatedAt","nameLocation":"405:9:26","nodeType":"VariableDeclaration","scope":9415,"src":"397:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9411,"name":"uint256","nodeType":"ElementaryTypeName","src":"397:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9414,"mutability":"mutable","name":"reputation","nameLocation":"432:10:26","nodeType":"VariableDeclaration","scope":9415,"src":"424:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9413,"name":"uint256","nodeType":"ElementaryTypeName","src":"424:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Profile","nameLocation":"234:7:26","nodeType":"StructDefinition","scope":9824,"src":"227:222:26","visibility":"public"},{"constant":false,"functionSelector":"bbe15627","id":9420,"mutability":"mutable","name":"profiles","nameLocation":"490:8:26","nodeType":"VariableDeclaration","scope":9824,"src":"455:43:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Profile_$9415_storage_$","typeString":"mapping(address => struct UserProfile.Profile)"},"typeName":{"id":9419,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9416,"name":"address","nodeType":"ElementaryTypeName","src":"463:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"455:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Profile_$9415_storage_$","typeString":"mapping(address => struct UserProfile.Profile)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9418,"nodeType":"UserDefinedTypeName","pathNode":{"id":9417,"name":"Profile","nameLocations":["474:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":9415,"src":"474:7:26"},"referencedDeclaration":9415,"src":"474:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage_ptr","typeString":"struct UserProfile.Profile"}}},"visibility":"public"},{"constant":false,"functionSelector":"ea78dcbf","id":9424,"mutability":"mutable","name":"emailToAddress","nameLocation":"538:14:26","nodeType":"VariableDeclaration","scope":9824,"src":"504:48:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"typeName":{"id":9423,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9421,"name":"string","nodeType":"ElementaryTypeName","src":"512:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"504:26:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9422,"name":"address","nodeType":"ElementaryTypeName","src":"522:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"a787c80b","id":9428,"mutability":"mutable","name":"hasProfile","nameLocation":"590:10:26","nodeType":"VariableDeclaration","scope":9824,"src":"558:42:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":9427,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9425,"name":"address","nodeType":"ElementaryTypeName","src":"566:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"558:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9426,"name":"bool","nodeType":"ElementaryTypeName","src":"577:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"a2bdedf4","id":9431,"mutability":"mutable","name":"allUsers","nameLocation":"628:8:26","nodeType":"VariableDeclaration","scope":9824,"src":"611:25:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":9429,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9430,"nodeType":"ArrayTypeName","src":"611:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"6b4494367229a908b0585b361e2871a21f8eb4cd852c02f55c9e06989f4bb2aa","id":9439,"name":"ProfileCreated","nameLocation":"653:14:26","nodeType":"EventDefinition","parameters":{"id":9438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9433,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"684:4:26","nodeType":"VariableDeclaration","scope":9439,"src":"668:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9432,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9435,"indexed":false,"mutability":"mutable","name":"email","nameLocation":"697:5:26","nodeType":"VariableDeclaration","scope":9439,"src":"690:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9434,"name":"string","nodeType":"ElementaryTypeName","src":"690:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9437,"indexed":false,"mutability":"mutable","name":"ipfsHash","nameLocation":"711:8:26","nodeType":"VariableDeclaration","scope":9439,"src":"704:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9436,"name":"string","nodeType":"ElementaryTypeName","src":"704:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"667:53:26"},"src":"647:74:26"},{"anonymous":false,"eventSelector":"dd635a4cd84864e37e4479dbfc2ec667acfa473c83c8422a8ac9d9d07599b01c","id":9445,"name":"ProfileUpdated","nameLocation":"732:14:26","nodeType":"EventDefinition","parameters":{"id":9444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9441,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"763:4:26","nodeType":"VariableDeclaration","scope":9445,"src":"747:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9440,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9443,"indexed":false,"mutability":"mutable","name":"ipfsHash","nameLocation":"776:8:26","nodeType":"VariableDeclaration","scope":9445,"src":"769:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9442,"name":"string","nodeType":"ElementaryTypeName","src":"769:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"746:39:26"},"src":"726:60:26"},{"anonymous":false,"eventSelector":"1a54de57409cde881501535c2cd15fafdcc1cfee166b0f7de867255b850c76d5","id":9451,"name":"ProfileVerified","nameLocation":"797:15:26","nodeType":"EventDefinition","parameters":{"id":9450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9447,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"829:4:26","nodeType":"VariableDeclaration","scope":9451,"src":"813:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9446,"name":"address","nodeType":"ElementaryTypeName","src":"813:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9449,"indexed":false,"mutability":"mutable","name":"verified","nameLocation":"840:8:26","nodeType":"VariableDeclaration","scope":9451,"src":"835:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9448,"name":"bool","nodeType":"ElementaryTypeName","src":"835:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"812:37:26"},"src":"791:59:26"},{"anonymous":false,"eventSelector":"fc577563f1b9a0461e24abef1e1fcc0d33d3d881f20b5df6dda59de4aae2c821","id":9457,"name":"ReputationUpdated","nameLocation":"861:17:26","nodeType":"EventDefinition","parameters":{"id":9456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9453,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"895:4:26","nodeType":"VariableDeclaration","scope":9457,"src":"879:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9452,"name":"address","nodeType":"ElementaryTypeName","src":"879:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9455,"indexed":false,"mutability":"mutable","name":"newReputation","nameLocation":"909:13:26","nodeType":"VariableDeclaration","scope":9457,"src":"901:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9454,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"878:45:26"},"src":"855:69:26"},{"body":{"id":9468,"nodeType":"Block","src":"958:85:26","statements":[{"expression":{"arguments":[{"baseExpression":{"id":9460,"name":"hasProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9428,"src":"976:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9463,"indexExpression":{"expression":{"id":9461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"987:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"991:6:26","memberName":"sender","nodeType":"MemberAccess","src":"987:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"976:22:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f66696c6520646f6573206e6f74206578697374","id":9464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1000:24:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6dbf3d2354088a74d750ac99af7e17669fcda6fdcfa63918e5c6b6c75aef1db","typeString":"literal_string \"Profile does not exist\""},"value":"Profile does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e6dbf3d2354088a74d750ac99af7e17669fcda6fdcfa63918e5c6b6c75aef1db","typeString":"literal_string \"Profile does not exist\""}],"id":9459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"968:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"968:57:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9466,"nodeType":"ExpressionStatement","src":"968:57:26"},{"id":9467,"nodeType":"PlaceholderStatement","src":"1035:1:26"}]},"id":9469,"name":"onlyProfileOwner","nameLocation":"939:16:26","nodeType":"ModifierDefinition","parameters":{"id":9458,"nodeType":"ParameterList","parameters":[],"src":"955:2:26"},"src":"930:113:26","virtual":false,"visibility":"internal"},{"body":{"id":9486,"nodeType":"Block","src":"1094:101:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9474,"name":"emailToAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"1112:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":9476,"indexExpression":{"id":9475,"name":"_email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9471,"src":"1127:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1112:22:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1146:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1138:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9477,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:26","typeDescriptions":{}}},"id":9480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1138:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1112:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456d61696c20616c72656164792072656769737465726564","id":9482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1150:26:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfc3076c495571b2fb3650a2cdd16d4a1a62305bb442410bb93dedf8baa8eb85","typeString":"literal_string \"Email already registered\""},"value":"Email already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfc3076c495571b2fb3650a2cdd16d4a1a62305bb442410bb93dedf8baa8eb85","typeString":"literal_string \"Email already registered\""}],"id":9473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1104:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1104:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9484,"nodeType":"ExpressionStatement","src":"1104:73:26"},{"id":9485,"nodeType":"PlaceholderStatement","src":"1187:1:26"}]},"id":9487,"name":"emailNotTaken","nameLocation":"1058:13:26","nodeType":"ModifierDefinition","parameters":{"id":9472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9471,"mutability":"mutable","name":"_email","nameLocation":"1086:6:26","nodeType":"VariableDeclaration","scope":9487,"src":"1072:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9470,"name":"string","nodeType":"ElementaryTypeName","src":"1072:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1071:22:26"},"src":"1049:146:26","virtual":false,"visibility":"internal"},{"body":{"id":9494,"nodeType":"Block","src":"1235:2:26","statements":[]},"id":9495,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":9490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1223:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1227:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1223:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9492,"kind":"baseConstructorSpecifier","modifierName":{"id":9489,"name":"Ownable","nameLocations":["1215:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1215:7:26"},"nodeType":"ModifierInvocation","src":"1215:19:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9488,"nodeType":"ParameterList","parameters":[],"src":"1212:2:26"},"returnParameters":{"id":9493,"nodeType":"ParameterList","parameters":[],"src":"1235:0:26"},"scope":9824,"src":"1201:36:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9600,"nodeType":"Block","src":"1683:762:26","statements":[{"expression":{"arguments":[{"id":9517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1701:23:26","subExpression":{"baseExpression":{"id":9513,"name":"hasProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9428,"src":"1702:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9516,"indexExpression":{"expression":{"id":9514,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1713:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1717:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1713:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1702:22:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f66696c6520616c726561647920657869737473","id":9518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1726:24:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_f15d98af370fc331d72a5468563f79e7d1bc24524c669fd4e08e10d0b421d5af","typeString":"literal_string \"Profile already exists\""},"value":"Profile already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f15d98af370fc331d72a5468563f79e7d1bc24524c669fd4e08e10d0b421d5af","typeString":"literal_string \"Profile already exists\""}],"id":9512,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1693:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1693:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9520,"nodeType":"ExpressionStatement","src":"1693:58:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9524,"name":"_fullName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9498,"src":"1775:9:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1769:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9522,"name":"bytes","nodeType":"ElementaryTypeName","src":"1769:5:26","typeDescriptions":{}}},"id":9525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1786:6:26","memberName":"length","nodeType":"MemberAccess","src":"1769:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1795:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1769:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756c6c206e616d652063616e6e6f7420626520656d707479","id":9529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1798:27:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_8638f8061b59515910e81e9e506bee7150de8da8508f411c86e913843f4d1964","typeString":"literal_string \"Full name cannot be empty\""},"value":"Full name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8638f8061b59515910e81e9e506bee7150de8da8508f411c86e913843f4d1964","typeString":"literal_string \"Full name cannot be empty\""}],"id":9521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1761:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1761:65:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9531,"nodeType":"ExpressionStatement","src":"1761:65:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9533,"name":"_age","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9500,"src":"1844:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1851:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1844:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9536,"name":"_age","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9500,"src":"1856:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313530","id":9537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:3:26","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"},"src":"1856:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1844:22:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616765","id":9540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1868:13:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1c59e3116c3ac1aa457890867ed59455e27f7c2097445123220e9c87ffa42bc","typeString":"literal_string \"Invalid age\""},"value":"Invalid age"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f1c59e3116c3ac1aa457890867ed59455e27f7c2097445123220e9c87ffa42bc","typeString":"literal_string \"Invalid age\""}],"id":9532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1836:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1836:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9542,"nodeType":"ExpressionStatement","src":"1836:46:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9546,"name":"_email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9502,"src":"1906:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1900:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9544,"name":"bytes","nodeType":"ElementaryTypeName","src":"1900:5:26","typeDescriptions":{}}},"id":9547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1900:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1914:6:26","memberName":"length","nodeType":"MemberAccess","src":"1900:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1923:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1900:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456d61696c2063616e6e6f7420626520656d707479","id":9551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1926:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_b3607c987e388a7f92a035b83a314b9b07f615f37f414009dfb740ad0592c6de","typeString":"literal_string \"Email cannot be empty\""},"value":"Email cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b3607c987e388a7f92a035b83a314b9b07f615f37f414009dfb740ad0592c6de","typeString":"literal_string \"Email cannot be empty\""}],"id":9543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1892:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9553,"nodeType":"ExpressionStatement","src":"1892:58:26"},{"expression":{"id":9570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9554,"name":"profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9420,"src":"1961:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Profile_$9415_storage_$","typeString":"mapping(address => struct UserProfile.Profile storage ref)"}},"id":9557,"indexExpression":{"expression":{"id":9555,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1970:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1974:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1970:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1961:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage","typeString":"struct UserProfile.Profile storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9559,"name":"_fullName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9498,"src":"2016:9:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9560,"name":"_age","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9500,"src":"2044:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9561,"name":"_email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9502,"src":"2069:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9562,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9504,"src":"2099:9:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"66616c7365","id":9563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2134:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":9564,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2164:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2170:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"2164:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9566,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2204:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2210:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"2204:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":9568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2245:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9558,"name":"Profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9415,"src":"1984:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Profile_$9415_storage_ptr_$","typeString":"type(struct UserProfile.Profile storage pointer)"}},"id":9569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2006:8:26","2039:3:26","2062:5:26","2089:8:26","2122:10:26","2153:9:26","2193:9:26","2233:10:26"],"names":["fullName","age","email","ipfsHash","isVerified","createdAt","updatedAt","reputation"],"nodeType":"FunctionCall","src":"1984:273:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_memory_ptr","typeString":"struct UserProfile.Profile memory"}},"src":"1961:296:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage","typeString":"struct UserProfile.Profile storage ref"}},"id":9571,"nodeType":"ExpressionStatement","src":"1961:296:26"},{"expression":{"id":9577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9572,"name":"emailToAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"2268:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":9574,"indexExpression":{"id":9573,"name":"_email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9502,"src":"2283:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2268:22:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9575,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2293:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2297:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2293:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2268:35:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9578,"nodeType":"ExpressionStatement","src":"2268:35:26"},{"expression":{"id":9584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9579,"name":"hasProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9428,"src":"2313:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9582,"indexExpression":{"expression":{"id":9580,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2324:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2328:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2324:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2313:22:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2338:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2313:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9585,"nodeType":"ExpressionStatement","src":"2313:29:26"},{"expression":{"arguments":[{"expression":{"id":9589,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2366:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2370:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2366:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9586,"name":"allUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9431,"src":"2352:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2361:4:26","memberName":"push","nodeType":"MemberAccess","src":"2352:13:26","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":9591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2352:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9592,"nodeType":"ExpressionStatement","src":"2352:25:26"},{"eventCall":{"arguments":[{"expression":{"id":9594,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2408:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2412:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2408:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9596,"name":"_email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9502,"src":"2420:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9597,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9504,"src":"2428:9:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9593,"name":"ProfileCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9439,"src":"2393:14:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory,string memory)"}},"id":9598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2393:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9599,"nodeType":"EmitStatement","src":"2388:50:26"}]},"documentation":{"id":9496,"nodeType":"StructuredDocumentation","src":"1243:244:26","text":" @dev Create a new user profile\n @param _fullName Full name of the user\n @param _age Age of the user\n @param _email Email address (must be unique)\n @param _ipfsHash IPFS hash for additional profile data"},"functionSelector":"0d1b21fa","id":9601,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9507,"name":"_email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9502,"src":"1662:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":9508,"kind":"modifierInvocation","modifierName":{"id":9506,"name":"emailNotTaken","nameLocations":["1648:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":9487,"src":"1648:13:26"},"nodeType":"ModifierInvocation","src":"1648:21:26"},{"id":9510,"kind":"modifierInvocation","modifierName":{"id":9509,"name":"nonReentrant","nameLocations":["1670:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"1670:12:26"},"nodeType":"ModifierInvocation","src":"1670:12:26"}],"name":"createProfile","nameLocation":"1501:13:26","nodeType":"FunctionDefinition","parameters":{"id":9505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9498,"mutability":"mutable","name":"_fullName","nameLocation":"1538:9:26","nodeType":"VariableDeclaration","scope":9601,"src":"1524:23:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9497,"name":"string","nodeType":"ElementaryTypeName","src":"1524:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9500,"mutability":"mutable","name":"_age","nameLocation":"1565:4:26","nodeType":"VariableDeclaration","scope":9601,"src":"1557:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1557:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9502,"mutability":"mutable","name":"_email","nameLocation":"1593:6:26","nodeType":"VariableDeclaration","scope":9601,"src":"1579:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9501,"name":"string","nodeType":"ElementaryTypeName","src":"1579:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9504,"mutability":"mutable","name":"_ipfsHash","nameLocation":"1623:9:26","nodeType":"VariableDeclaration","scope":9601,"src":"1609:23:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9503,"name":"string","nodeType":"ElementaryTypeName","src":"1609:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1514:124:26"},"returnParameters":{"id":9511,"nodeType":"ParameterList","parameters":[],"src":"1683:0:26"},"scope":9824,"src":"1492:953:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9676,"nodeType":"Block","src":"2762:397:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9618,"name":"_fullName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9604,"src":"2786:9:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2780:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9616,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:26","typeDescriptions":{}}},"id":9619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2780:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2797:6:26","memberName":"length","nodeType":"MemberAccess","src":"2780:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2780:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756c6c206e616d652063616e6e6f7420626520656d707479","id":9623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2809:27:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_8638f8061b59515910e81e9e506bee7150de8da8508f411c86e913843f4d1964","typeString":"literal_string \"Full name cannot be empty\""},"value":"Full name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8638f8061b59515910e81e9e506bee7150de8da8508f411c86e913843f4d1964","typeString":"literal_string \"Full name cannot be empty\""}],"id":9615,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2772:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:65:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9625,"nodeType":"ExpressionStatement","src":"2772:65:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9627,"name":"_age","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9606,"src":"2855:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2862:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2855:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9630,"name":"_age","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9606,"src":"2867:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313530","id":9631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2874:3:26","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"},"src":"2867:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2855:22:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616765","id":9634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2879:13:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1c59e3116c3ac1aa457890867ed59455e27f7c2097445123220e9c87ffa42bc","typeString":"literal_string \"Invalid age\""},"value":"Invalid age"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f1c59e3116c3ac1aa457890867ed59455e27f7c2097445123220e9c87ffa42bc","typeString":"literal_string \"Invalid age\""}],"id":9626,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2847:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2847:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9636,"nodeType":"ExpressionStatement","src":"2847:46:26"},{"assignments":[9639],"declarations":[{"constant":false,"id":9639,"mutability":"mutable","name":"profile","nameLocation":"2920:7:26","nodeType":"VariableDeclaration","scope":9676,"src":"2904:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage_ptr","typeString":"struct UserProfile.Profile"},"typeName":{"id":9638,"nodeType":"UserDefinedTypeName","pathNode":{"id":9637,"name":"Profile","nameLocations":["2904:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":9415,"src":"2904:7:26"},"referencedDeclaration":9415,"src":"2904:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage_ptr","typeString":"struct UserProfile.Profile"}},"visibility":"internal"}],"id":9644,"initialValue":{"baseExpression":{"id":9640,"name":"profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9420,"src":"2930:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Profile_$9415_storage_$","typeString":"mapping(address => struct UserProfile.Profile storage ref)"}},"id":9643,"indexExpression":{"expression":{"id":9641,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2939:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2943:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2939:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage","typeString":"struct UserProfile.Profile storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2904:46:26"},{"expression":{"id":9649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9645,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9639,"src":"2960:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage_ptr","typeString":"struct UserProfile.Profile storage pointer"}},"id":9647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2968:8:26","memberName":"fullName","nodeType":"MemberAccess","referencedDeclaration":9400,"src":"2960:16:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9648,"name":"_fullName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9604,"src":"2979:9:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2960:28:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9650,"nodeType":"ExpressionStatement","src":"2960:28:26"},{"expression":{"id":9655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9651,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9639,"src":"2998:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage_ptr","typeString":"struct UserProfile.Profile storage pointer"}},"id":9653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3006:3:26","memberName":"age","nodeType":"MemberAccess","referencedDeclaration":9402,"src":"2998:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9654,"name":"_age","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9606,"src":"3012:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2998:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9656,"nodeType":"ExpressionStatement","src":"2998:18:26"},{"expression":{"id":9661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9657,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9639,"src":"3026:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage_ptr","typeString":"struct UserProfile.Profile storage pointer"}},"id":9659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3034:8:26","memberName":"ipfsHash","nodeType":"MemberAccess","referencedDeclaration":9406,"src":"3026:16:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9660,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9608,"src":"3045:9:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3026:28:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9662,"nodeType":"ExpressionStatement","src":"3026:28:26"},{"expression":{"id":9668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9663,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9639,"src":"3064:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage_ptr","typeString":"struct UserProfile.Profile storage pointer"}},"id":9665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3072:9:26","memberName":"updatedAt","nodeType":"MemberAccess","referencedDeclaration":9412,"src":"3064:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9666,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3084:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3090:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"3084:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3064:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9669,"nodeType":"ExpressionStatement","src":"3064:35:26"},{"eventCall":{"arguments":[{"expression":{"id":9671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3130:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3134:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3130:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9673,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9608,"src":"3142:9:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9670,"name":"ProfileUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9445,"src":"3115:14:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":9674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3115:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9675,"nodeType":"EmitStatement","src":"3110:42:26"}]},"documentation":{"id":9602,"nodeType":"StructuredDocumentation","src":"2451:150:26","text":" @dev Update existing profile\n @param _fullName New full name\n @param _age New age\n @param _ipfsHash New IPFS hash"},"functionSelector":"a5fb1fb8","id":9677,"implemented":true,"kind":"function","modifiers":[{"id":9611,"kind":"modifierInvocation","modifierName":{"id":9610,"name":"onlyProfileOwner","nameLocations":["2732:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":9469,"src":"2732:16:26"},"nodeType":"ModifierInvocation","src":"2732:16:26"},{"id":9613,"kind":"modifierInvocation","modifierName":{"id":9612,"name":"nonReentrant","nameLocations":["2749:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"2749:12:26"},"nodeType":"ModifierInvocation","src":"2749:12:26"}],"name":"updateProfile","nameLocation":"2615:13:26","nodeType":"FunctionDefinition","parameters":{"id":9609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9604,"mutability":"mutable","name":"_fullName","nameLocation":"2652:9:26","nodeType":"VariableDeclaration","scope":9677,"src":"2638:23:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9603,"name":"string","nodeType":"ElementaryTypeName","src":"2638:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9606,"mutability":"mutable","name":"_age","nameLocation":"2679:4:26","nodeType":"VariableDeclaration","scope":9677,"src":"2671:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9605,"name":"uint256","nodeType":"ElementaryTypeName","src":"2671:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9608,"mutability":"mutable","name":"_ipfsHash","nameLocation":"2707:9:26","nodeType":"VariableDeclaration","scope":9677,"src":"2693:23:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9607,"name":"string","nodeType":"ElementaryTypeName","src":"2693:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2628:94:26"},"returnParameters":{"id":9614,"nodeType":"ParameterList","parameters":[],"src":"2762:0:26"},"scope":9824,"src":"2606:553:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9697,"nodeType":"Block","src":"3361:101:26","statements":[{"expression":{"arguments":[{"baseExpression":{"id":9687,"name":"hasProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9428,"src":"3379:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9689,"indexExpression":{"id":9688,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9680,"src":"3390:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3379:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f66696c6520646f6573206e6f74206578697374","id":9690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3398:24:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6dbf3d2354088a74d750ac99af7e17669fcda6fdcfa63918e5c6b6c75aef1db","typeString":"literal_string \"Profile does not exist\""},"value":"Profile does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e6dbf3d2354088a74d750ac99af7e17669fcda6fdcfa63918e5c6b6c75aef1db","typeString":"literal_string \"Profile does not exist\""}],"id":9686,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3371:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3371:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9692,"nodeType":"ExpressionStatement","src":"3371:52:26"},{"expression":{"baseExpression":{"id":9693,"name":"profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9420,"src":"3440:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Profile_$9415_storage_$","typeString":"mapping(address => struct UserProfile.Profile storage ref)"}},"id":9695,"indexExpression":{"id":9694,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9680,"src":"3449:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3440:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage","typeString":"struct UserProfile.Profile storage ref"}},"functionReturnParameters":9685,"id":9696,"nodeType":"Return","src":"3433:22:26"}]},"documentation":{"id":9678,"nodeType":"StructuredDocumentation","src":"3165:117:26","text":" @dev Get profile information\n @param _user Address of the user\n @return Profile struct"},"functionSelector":"0f53a470","id":9698,"implemented":true,"kind":"function","modifiers":[],"name":"getProfile","nameLocation":"3296:10:26","nodeType":"FunctionDefinition","parameters":{"id":9681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9680,"mutability":"mutable","name":"_user","nameLocation":"3315:5:26","nodeType":"VariableDeclaration","scope":9698,"src":"3307:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9679,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3306:15:26"},"returnParameters":{"id":9685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9698,"src":"3345:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_memory_ptr","typeString":"struct UserProfile.Profile"},"typeName":{"id":9683,"nodeType":"UserDefinedTypeName","pathNode":{"id":9682,"name":"Profile","nameLocations":["3345:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":9415,"src":"3345:7:26"},"referencedDeclaration":9415,"src":"3345:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage_ptr","typeString":"struct UserProfile.Profile"}},"visibility":"internal"}],"src":"3344:16:26"},"scope":9824,"src":"3287:175:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9727,"nodeType":"Block","src":"3698:165:26","statements":[{"expression":{"arguments":[{"baseExpression":{"id":9709,"name":"hasProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9428,"src":"3716:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9711,"indexExpression":{"id":9710,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"3727:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3716:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f66696c6520646f6573206e6f74206578697374","id":9712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3735:24:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6dbf3d2354088a74d750ac99af7e17669fcda6fdcfa63918e5c6b6c75aef1db","typeString":"literal_string \"Profile does not exist\""},"value":"Profile does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e6dbf3d2354088a74d750ac99af7e17669fcda6fdcfa63918e5c6b6c75aef1db","typeString":"literal_string \"Profile does not exist\""}],"id":9708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3708:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3708:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9714,"nodeType":"ExpressionStatement","src":"3708:52:26"},{"expression":{"id":9720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":9715,"name":"profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9420,"src":"3770:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Profile_$9415_storage_$","typeString":"mapping(address => struct UserProfile.Profile storage ref)"}},"id":9717,"indexExpression":{"id":9716,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"3779:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3770:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage","typeString":"struct UserProfile.Profile storage ref"}},"id":9718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3786:10:26","memberName":"isVerified","nodeType":"MemberAccess","referencedDeclaration":9408,"src":"3770:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9719,"name":"_verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9703,"src":"3799:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3770:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9721,"nodeType":"ExpressionStatement","src":"3770:38:26"},{"eventCall":{"arguments":[{"id":9723,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"3839:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9724,"name":"_verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9703,"src":"3846:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9722,"name":"ProfileVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9451,"src":"3823:15:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":9725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9726,"nodeType":"EmitStatement","src":"3818:38:26"}]},"documentation":{"id":9699,"nodeType":"StructuredDocumentation","src":"3468:152:26","text":" @dev Verify a user profile (only owner)\n @param _user Address of the user to verify\n @param _verified Verification status"},"functionSelector":"56412d3a","id":9728,"implemented":true,"kind":"function","modifiers":[{"id":9706,"kind":"modifierInvocation","modifierName":{"id":9705,"name":"onlyOwner","nameLocations":["3688:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"3688:9:26"},"nodeType":"ModifierInvocation","src":"3688:9:26"}],"name":"verifyProfile","nameLocation":"3634:13:26","nodeType":"FunctionDefinition","parameters":{"id":9704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9701,"mutability":"mutable","name":"_user","nameLocation":"3656:5:26","nodeType":"VariableDeclaration","scope":9728,"src":"3648:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9700,"name":"address","nodeType":"ElementaryTypeName","src":"3648:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9703,"mutability":"mutable","name":"_verified","nameLocation":"3668:9:26","nodeType":"VariableDeclaration","scope":9728,"src":"3663:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9702,"name":"bool","nodeType":"ElementaryTypeName","src":"3663:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3647:31:26"},"returnParameters":{"id":9707,"nodeType":"ParameterList","parameters":[],"src":"3698:0:26"},"scope":9824,"src":"3625:238:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9757,"nodeType":"Block","src":"4125:171:26","statements":[{"expression":{"arguments":[{"baseExpression":{"id":9739,"name":"hasProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9428,"src":"4143:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9741,"indexExpression":{"id":9740,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9731,"src":"4154:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4143:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f66696c6520646f6573206e6f74206578697374","id":9742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4162:24:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6dbf3d2354088a74d750ac99af7e17669fcda6fdcfa63918e5c6b6c75aef1db","typeString":"literal_string \"Profile does not exist\""},"value":"Profile does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e6dbf3d2354088a74d750ac99af7e17669fcda6fdcfa63918e5c6b6c75aef1db","typeString":"literal_string \"Profile does not exist\""}],"id":9738,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4135:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4135:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9744,"nodeType":"ExpressionStatement","src":"4135:52:26"},{"expression":{"id":9750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":9745,"name":"profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9420,"src":"4197:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Profile_$9415_storage_$","typeString":"mapping(address => struct UserProfile.Profile storage ref)"}},"id":9747,"indexExpression":{"id":9746,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9731,"src":"4206:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4197:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage","typeString":"struct UserProfile.Profile storage ref"}},"id":9748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4213:10:26","memberName":"reputation","nodeType":"MemberAccess","referencedDeclaration":9414,"src":"4197:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9749,"name":"_reputation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9733,"src":"4226:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4197:40:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9751,"nodeType":"ExpressionStatement","src":"4197:40:26"},{"eventCall":{"arguments":[{"id":9753,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9731,"src":"4270:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9754,"name":"_reputation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9733,"src":"4277:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9752,"name":"ReputationUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9457,"src":"4252:17:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4252:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9756,"nodeType":"EmitStatement","src":"4247:42:26"}]},"documentation":{"id":9729,"nodeType":"StructuredDocumentation","src":"3869:170:26","text":" @dev Update user reputation (only owner or authorized contracts)\n @param _user Address of the user\n @param _reputation New reputation score"},"functionSelector":"f5c91a08","id":9758,"implemented":true,"kind":"function","modifiers":[{"id":9736,"kind":"modifierInvocation","modifierName":{"id":9735,"name":"onlyOwner","nameLocations":["4115:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"4115:9:26"},"nodeType":"ModifierInvocation","src":"4115:9:26"}],"name":"updateReputation","nameLocation":"4053:16:26","nodeType":"FunctionDefinition","parameters":{"id":9734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9731,"mutability":"mutable","name":"_user","nameLocation":"4078:5:26","nodeType":"VariableDeclaration","scope":9758,"src":"4070:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9730,"name":"address","nodeType":"ElementaryTypeName","src":"4070:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9733,"mutability":"mutable","name":"_reputation","nameLocation":"4093:11:26","nodeType":"VariableDeclaration","scope":9758,"src":"4085:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9732,"name":"uint256","nodeType":"ElementaryTypeName","src":"4085:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:36:26"},"returnParameters":{"id":9737,"nodeType":"ParameterList","parameters":[],"src":"4125:0:26"},"scope":9824,"src":"4044:252:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9767,"nodeType":"Block","src":"4455:39:26","statements":[{"expression":{"expression":{"id":9764,"name":"allUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9431,"src":"4472:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4481:6:26","memberName":"length","nodeType":"MemberAccess","src":"4472:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9763,"id":9766,"nodeType":"Return","src":"4465:22:26"}]},"documentation":{"id":9759,"nodeType":"StructuredDocumentation","src":"4302:91:26","text":" @dev Get total number of users\n @return Number of registered users"},"functionSelector":"9be572f6","id":9768,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalUsers","nameLocation":"4407:13:26","nodeType":"FunctionDefinition","parameters":{"id":9760,"nodeType":"ParameterList","parameters":[],"src":"4420:2:26"},"returnParameters":{"id":9763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9768,"src":"4446:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9761,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4445:9:26"},"scope":9824,"src":"4398:96:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9780,"nodeType":"Block","src":"4695:46:26","statements":[{"expression":{"baseExpression":{"id":9776,"name":"emailToAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"4712:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":9778,"indexExpression":{"id":9777,"name":"_email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9771,"src":"4727:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4712:22:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9775,"id":9779,"nodeType":"Return","src":"4705:29:26"}]},"documentation":{"id":9769,"nodeType":"StructuredDocumentation","src":"4500:112:26","text":" @dev Get user address by email\n @param _email Email address\n @return User address"},"functionSelector":"18046ae1","id":9781,"implemented":true,"kind":"function","modifiers":[],"name":"getUserByEmail","nameLocation":"4626:14:26","nodeType":"FunctionDefinition","parameters":{"id":9772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9771,"mutability":"mutable","name":"_email","nameLocation":"4655:6:26","nodeType":"VariableDeclaration","scope":9781,"src":"4641:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9770,"name":"string","nodeType":"ElementaryTypeName","src":"4641:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4640:22:26"},"returnParameters":{"id":9775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9781,"src":"4686:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9773,"name":"address","nodeType":"ElementaryTypeName","src":"4686:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4685:9:26"},"scope":9824,"src":"4617:124:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9801,"nodeType":"Block","src":"4944:96:26","statements":[{"condition":{"id":9792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4958:18:26","subExpression":{"baseExpression":{"id":9789,"name":"hasProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9428,"src":"4959:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9791,"indexExpression":{"id":9790,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9784,"src":"4970:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4959:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9795,"nodeType":"IfStatement","src":"4954:36:26","trueBody":{"expression":{"hexValue":"66616c7365","id":9793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4985:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9788,"id":9794,"nodeType":"Return","src":"4978:12:26"}},{"expression":{"expression":{"baseExpression":{"id":9796,"name":"profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9420,"src":"5007:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Profile_$9415_storage_$","typeString":"mapping(address => struct UserProfile.Profile storage ref)"}},"id":9798,"indexExpression":{"id":9797,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9784,"src":"5016:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5007:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage","typeString":"struct UserProfile.Profile storage ref"}},"id":9799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5023:10:26","memberName":"isVerified","nodeType":"MemberAccess","referencedDeclaration":9408,"src":"5007:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9788,"id":9800,"nodeType":"Return","src":"5000:33:26"}]},"documentation":{"id":9782,"nodeType":"StructuredDocumentation","src":"4747:124:26","text":" @dev Check if user is verified\n @param _user Address of the user\n @return Verification status"},"functionSelector":"ace417e0","id":9802,"implemented":true,"kind":"function","modifiers":[],"name":"isUserVerified","nameLocation":"4885:14:26","nodeType":"FunctionDefinition","parameters":{"id":9785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9784,"mutability":"mutable","name":"_user","nameLocation":"4908:5:26","nodeType":"VariableDeclaration","scope":9802,"src":"4900:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9783,"name":"address","nodeType":"ElementaryTypeName","src":"4900:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4899:15:26"},"returnParameters":{"id":9788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9802,"src":"4938:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9786,"name":"bool","nodeType":"ElementaryTypeName","src":"4938:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4937:6:26"},"scope":9824,"src":"4876:164:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9822,"nodeType":"Block","src":"5240:92:26","statements":[{"condition":{"id":9813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5254:18:26","subExpression":{"baseExpression":{"id":9810,"name":"hasProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9428,"src":"5255:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9812,"indexExpression":{"id":9811,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9805,"src":"5266:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5255:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9816,"nodeType":"IfStatement","src":"5250:32:26","trueBody":{"expression":{"hexValue":"30","id":9814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5281:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9809,"id":9815,"nodeType":"Return","src":"5274:8:26"}},{"expression":{"expression":{"baseExpression":{"id":9817,"name":"profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9420,"src":"5299:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Profile_$9415_storage_$","typeString":"mapping(address => struct UserProfile.Profile storage ref)"}},"id":9819,"indexExpression":{"id":9818,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9805,"src":"5308:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5299:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_Profile_$9415_storage","typeString":"struct UserProfile.Profile storage ref"}},"id":9820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5315:10:26","memberName":"reputation","nodeType":"MemberAccess","referencedDeclaration":9414,"src":"5299:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9809,"id":9821,"nodeType":"Return","src":"5292:33:26"}]},"documentation":{"id":9803,"nodeType":"StructuredDocumentation","src":"5046:115:26","text":" @dev Get user reputation\n @param _user Address of the user\n @return Reputation score"},"functionSelector":"baccbfdb","id":9823,"implemented":true,"kind":"function","modifiers":[],"name":"getUserReputation","nameLocation":"5175:17:26","nodeType":"FunctionDefinition","parameters":{"id":9806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9805,"mutability":"mutable","name":"_user","nameLocation":"5201:5:26","nodeType":"VariableDeclaration","scope":9823,"src":"5193:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9804,"name":"address","nodeType":"ElementaryTypeName","src":"5193:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5192:15:26"},"returnParameters":{"id":9809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9823,"src":"5231:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9807,"name":"uint256","nodeType":"ElementaryTypeName","src":"5231:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5230:9:26"},"scope":9824,"src":"5166:166:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9825,"src":"172:5162:26","usedErrors":[393,398,2117],"usedEvents":[404,9439,9445,9451,9457]}],"src":"32:5303:26"},"id":26},"contracts/ZKProof.sol":{"ast":{"absolutePath":"contracts/ZKProof.sol","exportedSymbols":{"Context":[2051],"Ownable":[527],"ReentrancyGuard":[2172],"ZKProof":[10325]},"id":10326,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:27"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10326,"sourceUnit":528,"src":"58:52:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":9828,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10326,"sourceUnit":2173,"src":"111:59:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9829,"name":"Ownable","nameLocations":["192:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"192:7:27"},"id":9830,"nodeType":"InheritanceSpecifier","src":"192:7:27"},{"baseName":{"id":9831,"name":"ReentrancyGuard","nameLocations":["201:15:27"],"nodeType":"IdentifierPath","referencedDeclaration":2172,"src":"201:15:27"},"id":9832,"nodeType":"InheritanceSpecifier","src":"201:15:27"}],"canonicalName":"ZKProof","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10325,"linearizedBaseContracts":[10325,2172,527,2051],"name":"ZKProof","nameLocation":"181:7:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ZKProof.Proof","id":9853,"members":[{"constant":false,"id":9834,"mutability":"mutable","name":"submitter","nameLocation":"254:9:27","nodeType":"VariableDeclaration","scope":9853,"src":"246:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9833,"name":"address","nodeType":"ElementaryTypeName","src":"246:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9836,"mutability":"mutable","name":"proofType","nameLocation":"280:9:27","nodeType":"VariableDeclaration","scope":9853,"src":"273:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9835,"name":"string","nodeType":"ElementaryTypeName","src":"273:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9840,"mutability":"mutable","name":"proof","nameLocation":"310:5:27","nodeType":"VariableDeclaration","scope":9853,"src":"299:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$8_storage_ptr","typeString":"uint256[8]"},"typeName":{"baseType":{"id":9837,"name":"uint256","nodeType":"ElementaryTypeName","src":"299:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9839,"length":{"hexValue":"38","id":9838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"307:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"ArrayTypeName","src":"299:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$8_storage_ptr","typeString":"uint256[8]"}},"visibility":"internal"},{"constant":false,"id":9844,"mutability":"mutable","name":"publicInputs","nameLocation":"336:12:27","nodeType":"VariableDeclaration","scope":9853,"src":"325:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":9841,"name":"uint256","nodeType":"ElementaryTypeName","src":"325:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9843,"length":{"hexValue":"32","id":9842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"333:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"325:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":9846,"mutability":"mutable","name":"isVerified","nameLocation":"363:10:27","nodeType":"VariableDeclaration","scope":9853,"src":"358:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9845,"name":"bool","nodeType":"ElementaryTypeName","src":"358:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9848,"mutability":"mutable","name":"submittedAt","nameLocation":"391:11:27","nodeType":"VariableDeclaration","scope":9853,"src":"383:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9847,"name":"uint256","nodeType":"ElementaryTypeName","src":"383:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9850,"mutability":"mutable","name":"verifiedAt","nameLocation":"420:10:27","nodeType":"VariableDeclaration","scope":9853,"src":"412:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9849,"name":"uint256","nodeType":"ElementaryTypeName","src":"412:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9852,"mutability":"mutable","name":"metadataHash","nameLocation":"447:12:27","nodeType":"VariableDeclaration","scope":9853,"src":"440:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9851,"name":"string","nodeType":"ElementaryTypeName","src":"440:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Proof","nameLocation":"230:5:27","nodeType":"StructDefinition","scope":10325,"src":"223:286:27","visibility":"public"},{"canonicalName":"ZKProof.ProofType","id":9862,"members":[{"constant":false,"id":9855,"mutability":"mutable","name":"name","nameLocation":"549:4:27","nodeType":"VariableDeclaration","scope":9862,"src":"542:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9854,"name":"string","nodeType":"ElementaryTypeName","src":"542:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9857,"mutability":"mutable","name":"isActive","nameLocation":"568:8:27","nodeType":"VariableDeclaration","scope":9862,"src":"563:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9856,"name":"bool","nodeType":"ElementaryTypeName","src":"563:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9859,"mutability":"mutable","name":"verifierContract","nameLocation":"594:16:27","nodeType":"VariableDeclaration","scope":9862,"src":"586:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9858,"name":"address","nodeType":"ElementaryTypeName","src":"586:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9861,"mutability":"mutable","name":"minReputation","nameLocation":"673:13:27","nodeType":"VariableDeclaration","scope":9862,"src":"665:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9860,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ProofType","nameLocation":"522:9:27","nodeType":"StructDefinition","scope":10325,"src":"515:229:27","visibility":"public"},{"constant":false,"functionSelector":"9ddaf5aa","id":9867,"mutability":"mutable","name":"proofs","nameLocation":"783:6:27","nodeType":"VariableDeclaration","scope":10325,"src":"750:39:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proof_$9853_storage_$","typeString":"mapping(uint256 => struct ZKProof.Proof)"},"typeName":{"id":9866,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9863,"name":"uint256","nodeType":"ElementaryTypeName","src":"758:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"750:25:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proof_$9853_storage_$","typeString":"mapping(uint256 => struct ZKProof.Proof)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9865,"nodeType":"UserDefinedTypeName","pathNode":{"id":9864,"name":"Proof","nameLocations":["769:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":9853,"src":"769:5:27"},"referencedDeclaration":9853,"src":"769:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage_ptr","typeString":"struct ZKProof.Proof"}}},"visibility":"public"},{"constant":false,"functionSelector":"66b92f9e","id":9872,"mutability":"mutable","name":"proofTypes","nameLocation":"831:10:27","nodeType":"VariableDeclaration","scope":10325,"src":"795:46:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_ProofType_$9862_storage_$","typeString":"mapping(string => struct ZKProof.ProofType)"},"typeName":{"id":9871,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9868,"name":"string","nodeType":"ElementaryTypeName","src":"803:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"795:28:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_ProofType_$9862_storage_$","typeString":"mapping(string => struct ZKProof.ProofType)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9870,"nodeType":"UserDefinedTypeName","pathNode":{"id":9869,"name":"ProofType","nameLocations":["813:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":9862,"src":"813:9:27"},"referencedDeclaration":9862,"src":"813:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_storage_ptr","typeString":"struct ZKProof.ProofType"}}},"visibility":"public"},{"constant":false,"functionSelector":"373b58e6","id":9877,"mutability":"mutable","name":"userProofs","nameLocation":"884:10:27","nodeType":"VariableDeclaration","scope":10325,"src":"847:47:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":9876,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9873,"name":"address","nodeType":"ElementaryTypeName","src":"855:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"847:29:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":9874,"name":"uint256","nodeType":"ElementaryTypeName","src":"866:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9875,"nodeType":"ArrayTypeName","src":"866:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"08ac8d22","id":9879,"mutability":"mutable","name":"nextProofId","nameLocation":"920:11:27","nodeType":"VariableDeclaration","scope":10325,"src":"905:26:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9878,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"41c7ce2e","id":9882,"mutability":"mutable","name":"supportedProofTypes","nameLocation":"953:19:27","nodeType":"VariableDeclaration","scope":10325,"src":"937:35:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":9880,"name":"string","nodeType":"ElementaryTypeName","src":"937:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":9881,"nodeType":"ArrayTypeName","src":"937:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"c0b04028e7b044e610e837c16aa829c3ac6eda886999b98be29a1449db097014","id":9892,"name":"ProofSubmitted","nameLocation":"989:14:27","nodeType":"EventDefinition","parameters":{"id":9891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9884,"indexed":true,"mutability":"mutable","name":"proofId","nameLocation":"1029:7:27","nodeType":"VariableDeclaration","scope":9892,"src":"1013:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1013:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9886,"indexed":true,"mutability":"mutable","name":"submitter","nameLocation":"1062:9:27","nodeType":"VariableDeclaration","scope":9892,"src":"1046:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9885,"name":"address","nodeType":"ElementaryTypeName","src":"1046:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9888,"indexed":false,"mutability":"mutable","name":"proofType","nameLocation":"1088:9:27","nodeType":"VariableDeclaration","scope":9892,"src":"1081:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9887,"name":"string","nodeType":"ElementaryTypeName","src":"1081:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9890,"indexed":false,"mutability":"mutable","name":"metadataHash","nameLocation":"1114:12:27","nodeType":"VariableDeclaration","scope":9892,"src":"1107:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9889,"name":"string","nodeType":"ElementaryTypeName","src":"1107:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1003:129:27"},"src":"983:150:27"},{"anonymous":false,"eventSelector":"70c9579a34961b8e4495afea0520b52edc90522592e0784a023d52983abe2b16","id":9900,"name":"ProofVerified","nameLocation":"1149:13:27","nodeType":"EventDefinition","parameters":{"id":9899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9894,"indexed":true,"mutability":"mutable","name":"proofId","nameLocation":"1188:7:27","nodeType":"VariableDeclaration","scope":9900,"src":"1172:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1172:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9896,"indexed":false,"mutability":"mutable","name":"isValid","nameLocation":"1210:7:27","nodeType":"VariableDeclaration","scope":9900,"src":"1205:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9895,"name":"bool","nodeType":"ElementaryTypeName","src":"1205:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9898,"indexed":true,"mutability":"mutable","name":"verifier","nameLocation":"1243:8:27","nodeType":"VariableDeclaration","scope":9900,"src":"1227:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9897,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1162:95:27"},"src":"1143:115:27"},{"anonymous":false,"eventSelector":"c5136ee9cbcdfae0f750e383ed3d0d7a24bbcd260f0b5ff469aa6b4a84d27432","id":9906,"name":"ProofTypeAdded","nameLocation":"1274:14:27","nodeType":"EventDefinition","parameters":{"id":9905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9902,"indexed":false,"mutability":"mutable","name":"proofType","nameLocation":"1296:9:27","nodeType":"VariableDeclaration","scope":9906,"src":"1289:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9901,"name":"string","nodeType":"ElementaryTypeName","src":"1289:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9904,"indexed":false,"mutability":"mutable","name":"verifierContract","nameLocation":"1315:16:27","nodeType":"VariableDeclaration","scope":9906,"src":"1307:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9903,"name":"address","nodeType":"ElementaryTypeName","src":"1307:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:44:27"},"src":"1268:65:27"},{"anonymous":false,"eventSelector":"d91fb3ad497a5eac04e08baacaa347b1eef608d1b43bcd4f35a7ed25ea5e8c25","id":9912,"name":"ProofTypeUpdated","nameLocation":"1344:16:27","nodeType":"EventDefinition","parameters":{"id":9911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9908,"indexed":false,"mutability":"mutable","name":"proofType","nameLocation":"1368:9:27","nodeType":"VariableDeclaration","scope":9912,"src":"1361:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9907,"name":"string","nodeType":"ElementaryTypeName","src":"1361:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9910,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"1384:8:27","nodeType":"VariableDeclaration","scope":9912,"src":"1379:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9909,"name":"bool","nodeType":"ElementaryTypeName","src":"1379:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1360:33:27"},"src":"1338:56:27"},{"body":{"id":9925,"nodeType":"Block","src":"1450:102:27","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":9917,"name":"proofTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"1468:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_ProofType_$9862_storage_$","typeString":"mapping(string memory => struct ZKProof.ProofType storage ref)"}},"id":9919,"indexExpression":{"id":9918,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9914,"src":"1479:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1468:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_storage","typeString":"struct ZKProof.ProofType storage ref"}},"id":9920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1491:8:27","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":9857,"src":"1468:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f7220696e6163746976652070726f6f662074797065","id":9921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1501:32:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_0dba6918879caefbe649b1770e4cbfabdf33edbe110c0f2f9af7e649f8e84fc0","typeString":"literal_string \"Invalid or inactive proof type\""},"value":"Invalid or inactive proof type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0dba6918879caefbe649b1770e4cbfabdf33edbe110c0f2f9af7e649f8e84fc0","typeString":"literal_string \"Invalid or inactive proof type\""}],"id":9916,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1460:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1460:74:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9923,"nodeType":"ExpressionStatement","src":"1460:74:27"},{"id":9924,"nodeType":"PlaceholderStatement","src":"1544:1:27"}]},"id":9926,"name":"validProofType","nameLocation":"1409:14:27","nodeType":"ModifierDefinition","parameters":{"id":9915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9914,"mutability":"mutable","name":"_proofType","nameLocation":"1438:10:27","nodeType":"VariableDeclaration","scope":9926,"src":"1424:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9913,"name":"string","nodeType":"ElementaryTypeName","src":"1424:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1423:26:27"},"src":"1400:152:27","virtual":false,"visibility":"internal"},{"body":{"id":9948,"nodeType":"Block","src":"1606:193:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9931,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1637:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1641:6:27","memberName":"sender","nodeType":"MemberAccess","src":"1637:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9933,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"1651:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1651:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1637:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9936,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1662:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1666:6:27","memberName":"sender","nodeType":"MemberAccess","src":"1662:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":9938,"name":"proofTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"1676:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_ProofType_$9862_storage_$","typeString":"mapping(string memory => struct ZKProof.ProofType storage ref)"}},"id":9940,"indexExpression":{"id":9939,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9928,"src":"1687:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1676:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_storage","typeString":"struct ZKProof.ProofType storage ref"}},"id":9941,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1699:16:27","memberName":"verifierContract","nodeType":"MemberAccess","referencedDeclaration":9859,"src":"1676:39:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:53:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1637:78:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f2076657269667920746869732070726f6f662074797065","id":9944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1729:42:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b4f62a0520451ea6d398b18445027618c8d374cb568d8832fd3b2951df8013f","typeString":"literal_string \"Not authorized to verify this proof type\""},"value":"Not authorized to verify this proof type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b4f62a0520451ea6d398b18445027618c8d374cb568d8832fd3b2951df8013f","typeString":"literal_string \"Not authorized to verify this proof type\""}],"id":9930,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1616:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:165:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9946,"nodeType":"ExpressionStatement","src":"1616:165:27"},{"id":9947,"nodeType":"PlaceholderStatement","src":"1791:1:27"}]},"id":9949,"name":"onlyVerifier","nameLocation":"1567:12:27","nodeType":"ModifierDefinition","parameters":{"id":9929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9928,"mutability":"mutable","name":"_proofType","nameLocation":"1594:10:27","nodeType":"VariableDeclaration","scope":9949,"src":"1580:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9927,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:26:27"},"src":"1558:241:27","virtual":false,"visibility":"internal"},{"body":{"id":9996,"nodeType":"Block","src":"1839:322:27","statements":[{"expression":{"id":9958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9956,"name":"nextProofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9879,"src":"1849:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":9957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1849:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9959,"nodeType":"ExpressionStatement","src":"1849:15:27"},{"expression":{"arguments":[{"hexValue":"6964656e746974795f766572696669636174696f6e","id":9961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:23:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a2f56576635b001fd757554cd51d8f9a7a3f173853aab1ff4f4bf13f4dc176c","typeString":"literal_string \"identity_verification\""},"value":"identity_verification"},{"arguments":[{"hexValue":"30","id":9964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1972:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1964:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9962,"name":"address","nodeType":"ElementaryTypeName","src":"1964:7:27","typeDescriptions":{}}},"id":9965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1964:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":9966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1976:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2a2f56576635b001fd757554cd51d8f9a7a3f173853aab1ff4f4bf13f4dc176c","typeString":"literal_string \"identity_verification\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9960,"name":"_addProofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10197,"src":"1925:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (string memory,address,uint256)"}},"id":9967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1925:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9968,"nodeType":"ExpressionStatement","src":"1925:53:27"},{"expression":{"arguments":[{"hexValue":"72657365617263685f61757468656e746963697479","id":9970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2002:23:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ebff140855eabf4641ab342a3cff5f80917ab332f58e289f33a3954b1cc1e73","typeString":"literal_string \"research_authenticity\""},"value":"research_authenticity"},{"arguments":[{"hexValue":"30","id":9973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2035:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2027:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9971,"name":"address","nodeType":"ElementaryTypeName","src":"2027:7:27","typeDescriptions":{}}},"id":9974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2027:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"3530","id":9975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2039:2:27","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5ebff140855eabf4641ab342a3cff5f80917ab332f58e289f33a3954b1cc1e73","typeString":"literal_string \"research_authenticity\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"}],"id":9969,"name":"_addProofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10197,"src":"1988:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (string memory,address,uint256)"}},"id":9976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1988:54:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9977,"nodeType":"ExpressionStatement","src":"1988:54:27"},{"expression":{"arguments":[{"hexValue":"646174615f696e74656772697479","id":9979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2066:16:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d279d2bf976d192439a80edb171da85331e90865549a8acc99131b0dc86cd148","typeString":"literal_string \"data_integrity\""},"value":"data_integrity"},{"arguments":[{"hexValue":"30","id":9982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2092:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2084:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9980,"name":"address","nodeType":"ElementaryTypeName","src":"2084:7:27","typeDescriptions":{}}},"id":9983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2084:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"3235","id":9984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2096:2:27","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d279d2bf976d192439a80edb171da85331e90865549a8acc99131b0dc86cd148","typeString":"literal_string \"data_integrity\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"}],"id":9978,"name":"_addProofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10197,"src":"2052:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (string memory,address,uint256)"}},"id":9985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2052:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9986,"nodeType":"ExpressionStatement","src":"2052:47:27"},{"expression":{"arguments":[{"hexValue":"706565725f726576696577","id":9988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2123:13:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4d79de1dd0676cf0963ca8b58b34025d8b386fce98a1266ac57ce74e5a7c0c2","typeString":"literal_string \"peer_review\""},"value":"peer_review"},{"arguments":[{"hexValue":"30","id":9991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2146:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2138:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9989,"name":"address","nodeType":"ElementaryTypeName","src":"2138:7:27","typeDescriptions":{}}},"id":9992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2138:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"313030","id":9993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2150:3:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e4d79de1dd0676cf0963ca8b58b34025d8b386fce98a1266ac57ce74e5a7c0c2","typeString":"literal_string \"peer_review\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}],"id":9987,"name":"_addProofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10197,"src":"2109:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (string memory,address,uint256)"}},"id":9994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2109:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9995,"nodeType":"ExpressionStatement","src":"2109:45:27"}]},"id":9997,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":9952,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1827:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1831:6:27","memberName":"sender","nodeType":"MemberAccess","src":"1827:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9954,"kind":"baseConstructorSpecifier","modifierName":{"id":9951,"name":"Ownable","nameLocations":["1819:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1819:7:27"},"nodeType":"ModifierInvocation","src":"1819:19:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9950,"nodeType":"ParameterList","parameters":[],"src":"1816:2:27"},"returnParameters":{"id":9955,"nodeType":"ParameterList","parameters":[],"src":"1839:0:27"},"scope":10325,"src":"1805:356:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10067,"nodeType":"Block","src":"2712:765:27","statements":[{"assignments":[10022],"declarations":[{"constant":false,"id":10022,"mutability":"mutable","name":"pType","nameLocation":"2802:5:27","nodeType":"VariableDeclaration","scope":10067,"src":"2784:23:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_storage_ptr","typeString":"struct ZKProof.ProofType"},"typeName":{"id":10021,"nodeType":"UserDefinedTypeName","pathNode":{"id":10020,"name":"ProofType","nameLocations":["2784:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":9862,"src":"2784:9:27"},"referencedDeclaration":9862,"src":"2784:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_storage_ptr","typeString":"struct ZKProof.ProofType"}},"visibility":"internal"}],"id":10026,"initialValue":{"baseExpression":{"id":10023,"name":"proofTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"2810:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_ProofType_$9862_storage_$","typeString":"mapping(string memory => struct ZKProof.ProofType storage ref)"}},"id":10025,"indexExpression":{"id":10024,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10000,"src":"2821:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2810:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_storage","typeString":"struct ZKProof.ProofType storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2784:48:27"},{"assignments":[10028],"declarations":[{"constant":false,"id":10028,"mutability":"mutable","name":"proofId","nameLocation":"2956:7:27","nodeType":"VariableDeclaration","scope":10067,"src":"2948:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10027,"name":"uint256","nodeType":"ElementaryTypeName","src":"2948:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10031,"initialValue":{"id":10030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2966:13:27","subExpression":{"id":10029,"name":"nextProofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9879,"src":"2966:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2948:31:27"},{"expression":{"id":10047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10032,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"2998:6:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proof_$9853_storage_$","typeString":"mapping(uint256 => struct ZKProof.Proof storage ref)"}},"id":10034,"indexExpression":{"id":10033,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10028,"src":"3005:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2998:15:27","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage","typeString":"struct ZKProof.Proof storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":10036,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3047:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3051:6:27","memberName":"sender","nodeType":"MemberAccess","src":"3047:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10038,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10000,"src":"3082:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10039,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10004,"src":"3113:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$8_memory_ptr","typeString":"uint256[8] memory"}},{"id":10040,"name":"_publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10008,"src":"3147:13:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"hexValue":"66616c7365","id":10041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3186:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":10042,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3218:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3224:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"3218:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":10044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3259:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":10045,"name":"_metadataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10010,"src":"3288:13:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_array$_t_uint256_$8_memory_ptr","typeString":"uint256[8] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10035,"name":"Proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"3016:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Proof_$9853_storage_ptr_$","typeString":"type(struct ZKProof.Proof storage pointer)"}},"id":10046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3036:9:27","3071:9:27","3106:5:27","3133:12:27","3174:10:27","3205:11:27","3247:10:27","3274:12:27"],"names":["submitter","proofType","proof","publicInputs","isVerified","submittedAt","verifiedAt","metadataHash"],"nodeType":"FunctionCall","src":"3016:296:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_memory_ptr","typeString":"struct ZKProof.Proof memory"}},"src":"2998:314:27","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage","typeString":"struct ZKProof.Proof storage ref"}},"id":10048,"nodeType":"ExpressionStatement","src":"2998:314:27"},{"expression":{"arguments":[{"id":10054,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10028,"src":"3351:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":10049,"name":"userProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9877,"src":"3323:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":10052,"indexExpression":{"expression":{"id":10050,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3334:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3338:6:27","memberName":"sender","nodeType":"MemberAccess","src":"3334:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3323:22:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3346:4:27","memberName":"push","nodeType":"MemberAccess","src":"3323:27:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":10055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3323:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10056,"nodeType":"ExpressionStatement","src":"3323:36:27"},{"eventCall":{"arguments":[{"id":10058,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10028,"src":"3390:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10059,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3399:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3403:6:27","memberName":"sender","nodeType":"MemberAccess","src":"3399:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10061,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10000,"src":"3411:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10062,"name":"_metadataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10010,"src":"3423:13:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10057,"name":"ProofSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9892,"src":"3375:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory,string memory)"}},"id":10063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3375:62:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10064,"nodeType":"EmitStatement","src":"3370:67:27"},{"expression":{"id":10065,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10028,"src":"3463:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10019,"id":10066,"nodeType":"Return","src":"3456:14:27"}]},"documentation":{"id":9998,"nodeType":"StructuredDocumentation","src":"2167:300:27","text":" @dev Submit a zero-knowledge proof\n @param _proofType Type of proof being submitted\n @param _proof The ZK proof (8 field elements)\n @param _publicInputs Public inputs for the proof (2 field elements)\n @param _metadataHash IPFS hash containing proof metadata"},"functionSelector":"1acbce14","id":10068,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10013,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10000,"src":"2669:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":10014,"kind":"modifierInvocation","modifierName":{"id":10012,"name":"validProofType","nameLocations":["2654:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":9926,"src":"2654:14:27"},"nodeType":"ModifierInvocation","src":"2654:26:27"},{"id":10016,"kind":"modifierInvocation","modifierName":{"id":10015,"name":"nonReentrant","nameLocations":["2681:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"2681:12:27"},"nodeType":"ModifierInvocation","src":"2681:12:27"}],"name":"submitProof","nameLocation":"2481:11:27","nodeType":"FunctionDefinition","parameters":{"id":10011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10000,"mutability":"mutable","name":"_proofType","nameLocation":"2516:10:27","nodeType":"VariableDeclaration","scope":10068,"src":"2502:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9999,"name":"string","nodeType":"ElementaryTypeName","src":"2502:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10004,"mutability":"mutable","name":"_proof","nameLocation":"2554:6:27","nodeType":"VariableDeclaration","scope":10068,"src":"2536:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$8_memory_ptr","typeString":"uint256[8]"},"typeName":{"baseType":{"id":10001,"name":"uint256","nodeType":"ElementaryTypeName","src":"2536:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10003,"length":{"hexValue":"38","id":10002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2544:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"ArrayTypeName","src":"2536:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$8_storage_ptr","typeString":"uint256[8]"}},"visibility":"internal"},{"constant":false,"id":10008,"mutability":"mutable","name":"_publicInputs","nameLocation":"2588:13:27","nodeType":"VariableDeclaration","scope":10068,"src":"2570:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":10005,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10007,"length":{"hexValue":"32","id":10006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2578:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"2570:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":10010,"mutability":"mutable","name":"_metadataHash","nameLocation":"2625:13:27","nodeType":"VariableDeclaration","scope":10068,"src":"2611:27:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10009,"name":"string","nodeType":"ElementaryTypeName","src":"2611:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2492:152:27"},"returnParameters":{"id":10019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10068,"src":"2703:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10017,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2702:9:27"},"scope":10325,"src":"2472:1005:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10125,"nodeType":"Block","src":"3761:576:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10083,"name":"_proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10071,"src":"3779:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10084,"name":"nextProofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9879,"src":"3790:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3779:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6f6620646f6573206e6f74206578697374","id":10086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3803:22:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_75a08d511f8296e78d325f4ea3c5048a36bd22550904d4e3937660cd4da45744","typeString":"literal_string \"Proof does not exist\""},"value":"Proof does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75a08d511f8296e78d325f4ea3c5048a36bd22550904d4e3937660cd4da45744","typeString":"literal_string \"Proof does not exist\""}],"id":10082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3771:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3771:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10088,"nodeType":"ExpressionStatement","src":"3771:55:27"},{"expression":{"arguments":[{"id":10094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3844:28:27","subExpression":{"expression":{"baseExpression":{"id":10090,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"3845:6:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proof_$9853_storage_$","typeString":"mapping(uint256 => struct ZKProof.Proof storage ref)"}},"id":10092,"indexExpression":{"id":10091,"name":"_proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10071,"src":"3852:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3845:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage","typeString":"struct ZKProof.Proof storage ref"}},"id":10093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3862:10:27","memberName":"isVerified","nodeType":"MemberAccess","referencedDeclaration":9846,"src":"3845:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6f6620616c7265616479207665726966696564","id":10095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3874:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_eca3698c5c9d8edcd43b56af6192e93e3352ca84ed0aa9d6ab9412e981da80ed","typeString":"literal_string \"Proof already verified\""},"value":"Proof already verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eca3698c5c9d8edcd43b56af6192e93e3352ca84ed0aa9d6ab9412e981da80ed","typeString":"literal_string \"Proof already verified\""}],"id":10089,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3836:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3836:63:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10097,"nodeType":"ExpressionStatement","src":"3836:63:27"},{"assignments":[10100],"declarations":[{"constant":false,"id":10100,"mutability":"mutable","name":"proof","nameLocation":"3924:5:27","nodeType":"VariableDeclaration","scope":10125,"src":"3910:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage_ptr","typeString":"struct ZKProof.Proof"},"typeName":{"id":10099,"nodeType":"UserDefinedTypeName","pathNode":{"id":10098,"name":"Proof","nameLocations":["3910:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":9853,"src":"3910:5:27"},"referencedDeclaration":9853,"src":"3910:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage_ptr","typeString":"struct ZKProof.Proof"}},"visibility":"internal"}],"id":10104,"initialValue":{"baseExpression":{"id":10101,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"3932:6:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proof_$9853_storage_$","typeString":"mapping(uint256 => struct ZKProof.Proof storage ref)"}},"id":10103,"indexExpression":{"id":10102,"name":"_proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10071,"src":"3939:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3932:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage","typeString":"struct ZKProof.Proof storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3910:38:27"},{"expression":{"id":10109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10105,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10100,"src":"3958:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage_ptr","typeString":"struct ZKProof.Proof storage pointer"}},"id":10107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3964:10:27","memberName":"isVerified","nodeType":"MemberAccess","referencedDeclaration":9846,"src":"3958:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3977:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3958:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10110,"nodeType":"ExpressionStatement","src":"3958:23:27"},{"expression":{"id":10116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10111,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10100,"src":"3991:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage_ptr","typeString":"struct ZKProof.Proof storage pointer"}},"id":10113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3997:10:27","memberName":"verifiedAt","nodeType":"MemberAccess","referencedDeclaration":9850,"src":"3991:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10114,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4010:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4016:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"4010:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3991:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10117,"nodeType":"ExpressionStatement","src":"3991:34:27"},{"eventCall":{"arguments":[{"id":10119,"name":"_proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10071,"src":"4299:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10120,"name":"_isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10073,"src":"4309:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":10121,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4319:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4323:6:27","memberName":"sender","nodeType":"MemberAccess","src":"4319:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10118,"name":"ProofVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"4285:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_address_$returns$__$","typeString":"function (uint256,bool,address)"}},"id":10123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4285:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10124,"nodeType":"EmitStatement","src":"4280:50:27"}]},"documentation":{"id":10069,"nodeType":"StructuredDocumentation","src":"3483:147:27","text":" @dev Verify a submitted proof\n @param _proofId ID of the proof to verify\n @param _isValid Whether the proof is valid"},"functionSelector":"56ef9cb5","id":10126,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"baseExpression":{"id":10076,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"3733:6:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proof_$9853_storage_$","typeString":"mapping(uint256 => struct ZKProof.Proof storage ref)"}},"id":10078,"indexExpression":{"id":10077,"name":"_proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10071,"src":"3740:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3733:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage","typeString":"struct ZKProof.Proof storage ref"}},"id":10079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3750:9:27","memberName":"proofType","nodeType":"MemberAccess","referencedDeclaration":9836,"src":"3733:26:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":10080,"kind":"modifierInvocation","modifierName":{"id":10075,"name":"onlyVerifier","nameLocations":["3720:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9949,"src":"3720:12:27"},"nodeType":"ModifierInvocation","src":"3720:40:27"}],"name":"verifyProof","nameLocation":"3644:11:27","nodeType":"FunctionDefinition","parameters":{"id":10074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10071,"mutability":"mutable","name":"_proofId","nameLocation":"3673:8:27","nodeType":"VariableDeclaration","scope":10126,"src":"3665:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10070,"name":"uint256","nodeType":"ElementaryTypeName","src":"3665:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10073,"mutability":"mutable","name":"_isValid","nameLocation":"3696:8:27","nodeType":"VariableDeclaration","scope":10126,"src":"3691:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10072,"name":"bool","nodeType":"ElementaryTypeName","src":"3691:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3655:55:27"},"returnParameters":{"id":10081,"nodeType":"ParameterList","parameters":[],"src":"3761:0:27"},"scope":10325,"src":"3635:702:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10144,"nodeType":"Block","src":"4710:77:27","statements":[{"expression":{"arguments":[{"id":10139,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10129,"src":"4734:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10140,"name":"_verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10131,"src":"4746:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10141,"name":"_minReputation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10133,"src":"4765:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10138,"name":"_addProofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10197,"src":"4720:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (string memory,address,uint256)"}},"id":10142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4720:60:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10143,"nodeType":"ExpressionStatement","src":"4720:60:27"}]},"documentation":{"id":10127,"nodeType":"StructuredDocumentation","src":"4343:214:27","text":" @dev Add a new proof type\n @param _proofType Name of the proof type\n @param _verifierContract Address of the verifier contract\n @param _minReputation Minimum reputation required"},"functionSelector":"2eb4a65e","id":10145,"implemented":true,"kind":"function","modifiers":[{"id":10136,"kind":"modifierInvocation","modifierName":{"id":10135,"name":"onlyOwner","nameLocations":["4700:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"4700:9:27"},"nodeType":"ModifierInvocation","src":"4700:9:27"}],"name":"addProofType","nameLocation":"4571:12:27","nodeType":"FunctionDefinition","parameters":{"id":10134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10129,"mutability":"mutable","name":"_proofType","nameLocation":"4607:10:27","nodeType":"VariableDeclaration","scope":10145,"src":"4593:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10128,"name":"string","nodeType":"ElementaryTypeName","src":"4593:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10131,"mutability":"mutable","name":"_verifierContract","nameLocation":"4635:17:27","nodeType":"VariableDeclaration","scope":10145,"src":"4627:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10130,"name":"address","nodeType":"ElementaryTypeName","src":"4627:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10133,"mutability":"mutable","name":"_minReputation","nameLocation":"4670:14:27","nodeType":"VariableDeclaration","scope":10145,"src":"4662:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10132,"name":"uint256","nodeType":"ElementaryTypeName","src":"4662:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4583:107:27"},"returnParameters":{"id":10137,"nodeType":"ParameterList","parameters":[],"src":"4710:0:27"},"scope":10325,"src":"4562:225:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10196,"nodeType":"Block","src":"4932:478:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":10157,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10147,"src":"4956:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4950:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10155,"name":"bytes","nodeType":"ElementaryTypeName","src":"4950:5:27","typeDescriptions":{}}},"id":10158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4950:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4968:6:27","memberName":"length","nodeType":"MemberAccess","src":"4950:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4977:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4950:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6f6620747970652063616e6e6f7420626520656d707479","id":10162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4980:28:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_22c682ac1d6691de4204c730fe219ba903ebe45ad7265e8bcf2ff4ad4f38ca43","typeString":"literal_string \"Proof type cannot be empty\""},"value":"Proof type cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_22c682ac1d6691de4204c730fe219ba903ebe45ad7265e8bcf2ff4ad4f38ca43","typeString":"literal_string \"Proof type cannot be empty\""}],"id":10154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4942:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4942:67:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10164,"nodeType":"ExpressionStatement","src":"4942:67:27"},{"expression":{"arguments":[{"id":10170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5027:32:27","subExpression":{"expression":{"baseExpression":{"id":10166,"name":"proofTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"5028:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_ProofType_$9862_storage_$","typeString":"mapping(string memory => struct ZKProof.ProofType storage ref)"}},"id":10168,"indexExpression":{"id":10167,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10147,"src":"5039:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5028:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_storage","typeString":"struct ZKProof.ProofType storage ref"}},"id":10169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5051:8:27","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":9857,"src":"5028:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6f66207479706520616c726561647920657869737473","id":10171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5061:27:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1d2a191178b4642f8b0b48ee5fcba6b2a6a192d5457e0d5665cc5a3a07e07d0","typeString":"literal_string \"Proof type already exists\""},"value":"Proof type already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d1d2a191178b4642f8b0b48ee5fcba6b2a6a192d5457e0d5665cc5a3a07e07d0","typeString":"literal_string \"Proof type already exists\""}],"id":10165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5019:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5019:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10173,"nodeType":"ExpressionStatement","src":"5019:70:27"},{"expression":{"id":10183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10174,"name":"proofTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"5100:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_ProofType_$9862_storage_$","typeString":"mapping(string memory => struct ZKProof.ProofType storage ref)"}},"id":10176,"indexExpression":{"id":10175,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10147,"src":"5111:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5100:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_storage","typeString":"struct ZKProof.ProofType storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10178,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10147,"src":"5155:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":10179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5189:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":10180,"name":"_verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10149,"src":"5225:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10181,"name":"_minReputation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"5271:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10177,"name":"ProofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9862,"src":"5125:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ProofType_$9862_storage_ptr_$","typeString":"type(struct ZKProof.ProofType storage pointer)"}},"id":10182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5149:4:27","5179:8:27","5207:16:27","5256:13:27"],"names":["name","isActive","verifierContract","minReputation"],"nodeType":"FunctionCall","src":"5125:171:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_memory_ptr","typeString":"struct ZKProof.ProofType memory"}},"src":"5100:196:27","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_storage","typeString":"struct ZKProof.ProofType storage ref"}},"id":10184,"nodeType":"ExpressionStatement","src":"5100:196:27"},{"expression":{"arguments":[{"id":10188,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10147,"src":"5332:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":10185,"name":"supportedProofTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9882,"src":"5307:19:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":10187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5327:4:27","memberName":"push","nodeType":"MemberAccess","src":"5307:24:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":10189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5307:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10190,"nodeType":"ExpressionStatement","src":"5307:36:27"},{"eventCall":{"arguments":[{"id":10192,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10147,"src":"5373:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10193,"name":"_verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10149,"src":"5385:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10191,"name":"ProofTypeAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9906,"src":"5358:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":10194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5358:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10195,"nodeType":"EmitStatement","src":"5353:50:27"}]},"id":10197,"implemented":true,"kind":"function","modifiers":[],"name":"_addProofType","nameLocation":"4802:13:27","nodeType":"FunctionDefinition","parameters":{"id":10152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10147,"mutability":"mutable","name":"_proofType","nameLocation":"4839:10:27","nodeType":"VariableDeclaration","scope":10197,"src":"4825:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10146,"name":"string","nodeType":"ElementaryTypeName","src":"4825:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10149,"mutability":"mutable","name":"_verifierContract","nameLocation":"4867:17:27","nodeType":"VariableDeclaration","scope":10197,"src":"4859:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10148,"name":"address","nodeType":"ElementaryTypeName","src":"4859:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10151,"mutability":"mutable","name":"_minReputation","nameLocation":"4902:14:27","nodeType":"VariableDeclaration","scope":10197,"src":"4894:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10150,"name":"uint256","nodeType":"ElementaryTypeName","src":"4894:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4815:107:27"},"returnParameters":{"id":10153,"nodeType":"ParameterList","parameters":[],"src":"4932:0:27"},"scope":10325,"src":"4793:617:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10233,"nodeType":"Block","src":"5682:216:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":10210,"name":"proofTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"5706:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_ProofType_$9862_storage_$","typeString":"mapping(string memory => struct ZKProof.ProofType storage ref)"}},"id":10212,"indexExpression":{"id":10211,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10200,"src":"5717:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5706:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_storage","typeString":"struct ZKProof.ProofType storage ref"}},"id":10213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5729:4:27","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":9855,"src":"5706:27:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":10209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5700:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10208,"name":"bytes","nodeType":"ElementaryTypeName","src":"5700:5:27","typeDescriptions":{}}},"id":10214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":10215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5735:6:27","memberName":"length","nodeType":"MemberAccess","src":"5700:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5744:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5700:45:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6f66207479706520646f6573206e6f74206578697374","id":10218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5747:27:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5914ab54159d48e6e24ba3294736445121408af7fef3ea8f0a8bffa48ba0e913","typeString":"literal_string \"Proof type does not exist\""},"value":"Proof type does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5914ab54159d48e6e24ba3294736445121408af7fef3ea8f0a8bffa48ba0e913","typeString":"literal_string \"Proof type does not exist\""}],"id":10207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5692:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5692:83:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10220,"nodeType":"ExpressionStatement","src":"5692:83:27"},{"expression":{"id":10226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":10221,"name":"proofTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"5794:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_ProofType_$9862_storage_$","typeString":"mapping(string memory => struct ZKProof.ProofType storage ref)"}},"id":10223,"indexExpression":{"id":10222,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10200,"src":"5805:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5794:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_storage","typeString":"struct ZKProof.ProofType storage ref"}},"id":10224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5817:8:27","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":9857,"src":"5794:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10225,"name":"_isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10202,"src":"5828:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5794:43:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10227,"nodeType":"ExpressionStatement","src":"5794:43:27"},{"eventCall":{"arguments":[{"id":10229,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10200,"src":"5869:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10230,"name":"_isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10202,"src":"5881:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10228,"name":"ProofTypeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"5852:16:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_bool_$returns$__$","typeString":"function (string memory,bool)"}},"id":10231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5852:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10232,"nodeType":"EmitStatement","src":"5847:44:27"}]},"documentation":{"id":10198,"nodeType":"StructuredDocumentation","src":"5416:153:27","text":" @dev Update proof type status\n @param _proofType Name of the proof type\n @param _isActive Whether the proof type is active"},"functionSelector":"8129cd07","id":10234,"implemented":true,"kind":"function","modifiers":[{"id":10205,"kind":"modifierInvocation","modifierName":{"id":10204,"name":"onlyOwner","nameLocations":["5672:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"5672:9:27"},"nodeType":"ModifierInvocation","src":"5672:9:27"}],"name":"updateProofType","nameLocation":"5583:15:27","nodeType":"FunctionDefinition","parameters":{"id":10203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10200,"mutability":"mutable","name":"_proofType","nameLocation":"5622:10:27","nodeType":"VariableDeclaration","scope":10234,"src":"5608:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10199,"name":"string","nodeType":"ElementaryTypeName","src":"5608:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10202,"mutability":"mutable","name":"_isActive","nameLocation":"5647:9:27","nodeType":"VariableDeclaration","scope":10234,"src":"5642:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10201,"name":"bool","nodeType":"ElementaryTypeName","src":"5642:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5598:64:27"},"returnParameters":{"id":10206,"nodeType":"ParameterList","parameters":[],"src":"5682:0:27"},"scope":10325,"src":"5574:324:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10254,"nodeType":"Block","src":"6090:105:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10244,"name":"_proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10237,"src":"6108:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10245,"name":"nextProofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9879,"src":"6119:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6108:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6f6620646f6573206e6f74206578697374","id":10247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6132:22:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_75a08d511f8296e78d325f4ea3c5048a36bd22550904d4e3937660cd4da45744","typeString":"literal_string \"Proof does not exist\""},"value":"Proof does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75a08d511f8296e78d325f4ea3c5048a36bd22550904d4e3937660cd4da45744","typeString":"literal_string \"Proof does not exist\""}],"id":10243,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6100:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6100:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10249,"nodeType":"ExpressionStatement","src":"6100:55:27"},{"expression":{"baseExpression":{"id":10250,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"6172:6:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proof_$9853_storage_$","typeString":"mapping(uint256 => struct ZKProof.Proof storage ref)"}},"id":10252,"indexExpression":{"id":10251,"name":"_proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10237,"src":"6179:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6172:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage","typeString":"struct ZKProof.Proof storage ref"}},"functionReturnParameters":10242,"id":10253,"nodeType":"Return","src":"6165:23:27"}]},"documentation":{"id":10235,"nodeType":"StructuredDocumentation","src":"5904:108:27","text":" @dev Get proof details\n @param _proofId ID of the proof\n @return Proof struct"},"functionSelector":"11149ada","id":10255,"implemented":true,"kind":"function","modifiers":[],"name":"getProof","nameLocation":"6026:8:27","nodeType":"FunctionDefinition","parameters":{"id":10238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10237,"mutability":"mutable","name":"_proofId","nameLocation":"6043:8:27","nodeType":"VariableDeclaration","scope":10255,"src":"6035:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10236,"name":"uint256","nodeType":"ElementaryTypeName","src":"6035:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6034:18:27"},"returnParameters":{"id":10242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10255,"src":"6076:12:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_memory_ptr","typeString":"struct ZKProof.Proof"},"typeName":{"id":10240,"nodeType":"UserDefinedTypeName","pathNode":{"id":10239,"name":"Proof","nameLocations":["6076:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":9853,"src":"6076:5:27"},"referencedDeclaration":9853,"src":"6076:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage_ptr","typeString":"struct ZKProof.Proof"}},"visibility":"internal"}],"src":"6075:14:27"},"scope":10325,"src":"6017:178:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10268,"nodeType":"Block","src":"6420:41:27","statements":[{"expression":{"baseExpression":{"id":10264,"name":"userProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9877,"src":"6437:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":10266,"indexExpression":{"id":10265,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10258,"src":"6448:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6437:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":10263,"id":10267,"nodeType":"Return","src":"6430:24:27"}]},"documentation":{"id":10256,"nodeType":"StructuredDocumentation","src":"6201:135:27","text":" @dev Get all proof IDs submitted by a user\n @param _user Address of the user\n @return Array of proof IDs"},"functionSelector":"46bdfb80","id":10269,"implemented":true,"kind":"function","modifiers":[],"name":"getUserProofs","nameLocation":"6350:13:27","nodeType":"FunctionDefinition","parameters":{"id":10259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10258,"mutability":"mutable","name":"_user","nameLocation":"6372:5:27","nodeType":"VariableDeclaration","scope":10269,"src":"6364:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10257,"name":"address","nodeType":"ElementaryTypeName","src":"6364:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6363:15:27"},"returnParameters":{"id":10263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10269,"src":"6402:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10260,"name":"uint256","nodeType":"ElementaryTypeName","src":"6402:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10261,"nodeType":"ArrayTypeName","src":"6402:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6401:18:27"},"scope":10325,"src":"6341:120:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10278,"nodeType":"Block","src":"6640:43:27","statements":[{"expression":{"id":10276,"name":"supportedProofTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9882,"src":"6657:19:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"functionReturnParameters":10275,"id":10277,"nodeType":"Return","src":"6650:26:27"}]},"documentation":{"id":10270,"nodeType":"StructuredDocumentation","src":"6467:94:27","text":" @dev Get all supported proof types\n @return Array of proof type names"},"functionSelector":"74235369","id":10279,"implemented":true,"kind":"function","modifiers":[],"name":"getSupportedProofTypes","nameLocation":"6575:22:27","nodeType":"FunctionDefinition","parameters":{"id":10271,"nodeType":"ParameterList","parameters":[],"src":"6597:2:27"},"returnParameters":{"id":10275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10279,"src":"6623:15:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":10272,"name":"string","nodeType":"ElementaryTypeName","src":"6623:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10273,"nodeType":"ArrayTypeName","src":"6623:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"6622:17:27"},"scope":10325,"src":"6566:117:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10298,"nodeType":"Block","src":"6902:102:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10287,"name":"_proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10282,"src":"6916:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10288,"name":"nextProofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9879,"src":"6928:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6916:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10292,"nodeType":"IfStatement","src":"6912:41:27","trueBody":{"expression":{"hexValue":"66616c7365","id":10290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6948:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":10286,"id":10291,"nodeType":"Return","src":"6941:12:27"}},{"expression":{"expression":{"baseExpression":{"id":10293,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"6970:6:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proof_$9853_storage_$","typeString":"mapping(uint256 => struct ZKProof.Proof storage ref)"}},"id":10295,"indexExpression":{"id":10294,"name":"_proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10282,"src":"6977:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6970:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$9853_storage","typeString":"struct ZKProof.Proof storage ref"}},"id":10296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6987:10:27","memberName":"isVerified","nodeType":"MemberAccess","referencedDeclaration":9846,"src":"6970:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10286,"id":10297,"nodeType":"Return","src":"6963:34:27"}]},"documentation":{"id":10280,"nodeType":"StructuredDocumentation","src":"6689:136:27","text":" @dev Check if a proof is verified\n @param _proofId ID of the proof\n @return Whether the proof is verified"},"functionSelector":"e96f88ea","id":10299,"implemented":true,"kind":"function","modifiers":[],"name":"isProofVerified","nameLocation":"6839:15:27","nodeType":"FunctionDefinition","parameters":{"id":10283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10282,"mutability":"mutable","name":"_proofId","nameLocation":"6863:8:27","nodeType":"VariableDeclaration","scope":10299,"src":"6855:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10281,"name":"uint256","nodeType":"ElementaryTypeName","src":"6855:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6854:18:27"},"returnParameters":{"id":10286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10299,"src":"6896:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10284,"name":"bool","nodeType":"ElementaryTypeName","src":"6896:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6895:6:27"},"scope":10325,"src":"6830:174:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10312,"nodeType":"Block","src":"7230:46:27","statements":[{"expression":{"baseExpression":{"id":10308,"name":"proofTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"7247:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_ProofType_$9862_storage_$","typeString":"mapping(string memory => struct ZKProof.ProofType storage ref)"}},"id":10310,"indexExpression":{"id":10309,"name":"_proofType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10302,"src":"7258:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7247:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_storage","typeString":"struct ZKProof.ProofType storage ref"}},"functionReturnParameters":10307,"id":10311,"nodeType":"Return","src":"7240:29:27"}]},"documentation":{"id":10300,"nodeType":"StructuredDocumentation","src":"7010:126:27","text":" @dev Get proof type details\n @param _proofType Name of the proof type\n @return ProofType struct"},"functionSelector":"bf6618f9","id":10313,"implemented":true,"kind":"function","modifiers":[],"name":"getProofType","nameLocation":"7150:12:27","nodeType":"FunctionDefinition","parameters":{"id":10303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10302,"mutability":"mutable","name":"_proofType","nameLocation":"7177:10:27","nodeType":"VariableDeclaration","scope":10313,"src":"7163:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10301,"name":"string","nodeType":"ElementaryTypeName","src":"7163:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7162:26:27"},"returnParameters":{"id":10307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10313,"src":"7212:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_memory_ptr","typeString":"struct ZKProof.ProofType"},"typeName":{"id":10305,"nodeType":"UserDefinedTypeName","pathNode":{"id":10304,"name":"ProofType","nameLocations":["7212:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":9862,"src":"7212:9:27"},"referencedDeclaration":9862,"src":"7212:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_ProofType_$9862_storage_ptr","typeString":"struct ZKProof.ProofType"}},"visibility":"internal"}],"src":"7211:18:27"},"scope":10325,"src":"7141:135:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10323,"nodeType":"Block","src":"7438:39:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10319,"name":"nextProofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9879,"src":"7455:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7469:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7455:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10318,"id":10322,"nodeType":"Return","src":"7448:22:27"}]},"documentation":{"id":10314,"nodeType":"StructuredDocumentation","src":"7282:93:27","text":" @dev Get total number of proofs submitted\n @return Total proof count"},"functionSelector":"9b1bc0c9","id":10324,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalProofs","nameLocation":"7389:14:27","nodeType":"FunctionDefinition","parameters":{"id":10315,"nodeType":"ParameterList","parameters":[],"src":"7403:2:27"},"returnParameters":{"id":10318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10324,"src":"7429:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10316,"name":"uint256","nodeType":"ElementaryTypeName","src":"7429:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7428:9:27"},"scope":10325,"src":"7380:97:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10326,"src":"172:7307:27","usedErrors":[393,398,2117],"usedEvents":[404,9892,9900,9906,9912]}],"src":"32:7448:27"},"id":27}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220804edcef0cb0cb10dfc7e106656145bec1d5874044a7bd105e1c10cb2190c7ab64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x4E 0xDC 0xEF 0xC 0xB0 0xCB LT 0xDF 0xC7 0xE1 MOD PUSH6 0x6145BEC1D587 BLOCKHASH PREVRANDAO 0xA7 0xBD LT 0x5E SHR LT 0xCB 0x21 SWAP1 0xC7 0xAB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1490:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220804edcef0cb0cb10dfc7e106656145bec1d5874044a7bd105e1c10cb2190c7ab64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x4E 0xDC 0xEF 0xC 0xB0 0xCB LT 0xDF 0xC7 0xE1 MOD PUSH6 0x6145BEC1D587 BLOCKHASH PREVRANDAO 0xA7 0xBD LT 0x5E SHR LT 0xCB 0x21 SWAP1 0xC7 0xAB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1490:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ec9a8c937c91eba1992c88e143ac8251b8896a1167d1c07eff8524a3feb5186264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SWAP11 DUP13 SWAP4 PUSH29 0x91EBA1992C88E143AC8251B8896A1167D1C07EFF8524A3FEB518626473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"297:18982:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ec9a8c937c91eba1992c88e143ac8251b8896a1167d1c07eff8524a3feb5186264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SWAP11 DUP13 SWAP4 PUSH29 0x91EBA1992C88E143AC8251B8896A1167D1C07EFF8524A3FEB518626473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"297:18982:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/Dataset.sol":{"Dataset":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"datasetId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"grantor","type":"address"}],"name":"AccessGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"datasetId","type":"uint256"},{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":false,"internalType":"string","name":"purpose","type":"string"}],"name":"AccessRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"datasetId","type":"uint256"},{"indexed":true,"internalType":"address","name":"downloader","type":"address"}],"name":"DatasetDownloaded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"datasetId","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"dataHash","type":"string"}],"name":"DatasetRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"datasetId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVersion","type":"uint256"},{"indexed":false,"internalType":"string","name":"newDataHash","type":"string"}],"name":"DatasetUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"datasetId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"verified","type":"bool"}],"name":"DatasetVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DATASET_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERIFIER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"accessRequests","outputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"uint256","name":"datasetId","type":"uint256"},{"internalType":"string","name":"purpose","type":"string"},{"internalType":"uint256","name":"requestedAt","type":"uint256"},{"internalType":"bool","name":"isApproved","type":"bool"},{"internalType":"bool","name":"isPending","type":"bool"},{"internalType":"uint256","name":"approvedAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_verifier","type":"address"}],"name":"addVerifier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allDatasets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_datasetId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"checkAccess","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"datasetVersions","outputs":[{"internalType":"uint256","name":"version","type":"uint256"},{"internalType":"string","name":"dataHash","type":"string"},{"internalType":"string","name":"metadataHash","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"changeLog","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"datasets","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"dataHash","type":"string"},{"internalType":"string","name":"metadataHash","type":"string"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"lastUpdated","type":"uint256"},{"internalType":"uint256","name":"version","type":"uint256"},{"internalType":"bool","name":"isPublic","type":"bool"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"uint256","name":"accessPrice","type":"uint256"},{"internalType":"uint256","name":"downloadCount","type":"uint256"},{"internalType":"uint256","name":"citationCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_datasetId","type":"uint256"}],"name":"getAccessRequests","outputs":[{"components":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"uint256","name":"datasetId","type":"uint256"},{"internalType":"string","name":"purpose","type":"string"},{"internalType":"uint256","name":"requestedAt","type":"uint256"},{"internalType":"bool","name":"isApproved","type":"bool"},{"internalType":"bool","name":"isPending","type":"bool"},{"internalType":"uint256","name":"approvedAt","type":"uint256"}],"internalType":"struct Dataset.AccessRequest[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllDatasets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_datasetId","type":"uint256"}],"name":"getDataset","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"dataHash","type":"string"},{"internalType":"string","name":"metadataHash","type":"string"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"lastUpdated","type":"uint256"},{"internalType":"uint256","name":"version","type":"uint256"},{"internalType":"bool","name":"isPublic","type":"bool"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"uint256","name":"accessPrice","type":"uint256"},{"internalType":"string[]","name":"tags","type":"string[]"},{"internalType":"uint256","name":"downloadCount","type":"uint256"},{"internalType":"uint256","name":"citationCount","type":"uint256"}],"internalType":"struct Dataset.DatasetInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_datasetId","type":"uint256"}],"name":"getDatasetVersions","outputs":[{"components":[{"internalType":"uint256","name":"version","type":"uint256"},{"internalType":"string","name":"dataHash","type":"string"},{"internalType":"string","name":"metadataHash","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"changeLog","type":"string"}],"internalType":"struct Dataset.DatasetVersion[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"getOwnerDatasets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalDatasets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_datasetId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_requestIndex","type":"uint256"}],"name":"grantAccess","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"hasAccess","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"nameToDatasetId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextDatasetId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"ownerDatasets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_datasetId","type":"uint256"}],"name":"recordDownload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"string","name":"_dataHash","type":"string"},{"internalType":"string","name":"_metadataHash","type":"string"},{"internalType":"bool","name":"_isPublic","type":"bool"},{"internalType":"uint256","name":"_accessPrice","type":"uint256"},{"internalType":"string[]","name":"_tags","type":"string[]"}],"name":"registerDataset","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_verifier","type":"address"}],"name":"removeVerifier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_datasetId","type":"uint256"},{"internalType":"string","name":"_purpose","type":"string"}],"name":"requestAccess","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_datasetId","type":"uint256"},{"internalType":"uint256","name":"_count","type":"uint256"}],"name":"updateCitationCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_datasetId","type":"uint256"},{"internalType":"string","name":"_newDataHash","type":"string"},{"internalType":"string","name":"_newMetadataHash","type":"string"},{"internalType":"string","name":"_changeLog","type":"string"}],"name":"updateDataset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_datasetId","type":"uint256"},{"internalType":"bool","name":"_verified","type":"bool"}],"name":"verifyDataset","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"fun_grantRole":{"entryPoint":467,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_1162":{"entryPoint":175,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_1163":{"entryPoint":304,"id":257,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60808060405234620000aa573315620000945760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180556200006633620000af565b50620000723362000130565b506200007e33620001d3565b5060016009556040516132609081620002728239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fd5b6001600160a01b031660008181527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b602052604081205490919060ff166200012c5781805260026020526040822081835260205260408220600160ff198254161790553391600080516020620034d28339815191528180a4600190565b5090565b6001600160a01b031660008181527f48b89508c52d03a056e401171466f0f1ac697802e07e33f22b572ce67f02b51260205260408120549091907f278259b194ae675b320344b3c4e89035d8b8a1c493c2201003b3e5a5a539eafc9060ff16620001ce5780835260026020526040832082845260205260408320600160ff19825416179055600080516020620034d2833981519152339380a4600190565b505090565b6001600160a01b031660008181527fdc6246a27a928d53414cf0bbe2bfde021e1ac737a6e0bcf9b182cda5a9b2dcf760205260408120549091907f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea099060ff16620001ce5780835260026020526040832082845260205260408320600160ff19825416179055600080516020620034d2833981519152339380a460019056fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146127e5575080631af8e976146127a45780631cff85e11461268a578063248a9ca31461265b5780632f2ff15d1461261c57806336568abe146125d55780633ee9ac051461253157806344bc6d2514611a6e5780634b51c301146119a85780634d72cd121461192d578063529556701461190f578063668e84be146118b7578063715018a61461185e578063795d5cb7146117be5780638da5cb5b146117955780639000b3d61461172a57806391d14854146116dd5780639abd9d621461156e578063a1cd59c31461151d578063a1d534cc146111b2578063a217fddf14611196578063c0b281f214610f46578063ca2dfd0a14610edb578063ced1419814610e8e578063d13c870314610e8e578063d547741f14610e4d578063d603b28414610cdc578063dab52a76146107f1578063dd5af6cc146107b6578063dfb216aa1461075a578063e7705db614610731578063ee0042211461043b578063f1767ffd146103b3578063f2fde38b1461032a578063fe2cb4c51461025a5763fef7e61a146101ab57600080fd5b34610255576101b9366129ff565b906101c76009548210613185565b3360009081527f48b89508c52d03a056e401171466f0f1ac697802e07e33f22b572ce67f02b51260205260409020547f278259b194ae675b320344b3c4e89035d8b8a1c493c2201003b3e5a5a539eafc9060ff161561023757506000526003602052600c60406000200155600080f35b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b600080fd5b346102555760403660031901126102555760043560243580151590818103610255576102896009548410613185565b3360009081527fdc6246a27a928d53414cf0bbe2bfde021e1ac737a6e0bcf9b182cda5a9b2dcf7602052604090205460008051602061320b8339815191529060ff161561023757507f1a4001decba2bf82b6e04b601c884d0afd30781e54b962a9b9fc5ab6f3ca375b91610321602092856000526003845260086040600020019061ff00825491151560081b169061ff001916179055565b604051908152a2005b34610255576020366003190112610255576103436129e9565b61034b612d9a565b6001600160a01b0390811690811561039a57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3461025557602080600319360112610255576001600160a01b036103d56129e9565b1660005260078152604060002090604051908181845491828152019360005281600020916000905b8282106104245761042085610414818903826128c4565b60405191829182612a9e565b0390f35b8354865294850194600193840193909101906103fd565b346102555760203660031901126102555760006101a060405161045d81612872565b6060815260606020820152826040820152606080820152606060808201528260a08201528260c08201528260e082015282610100820152826101208201528261014082015260606101608201528261018082015201526009546104c4600435918210613185565b60005260036020526040600020604051906104de82612872565b6104e7816128e5565b82526104f5600182016128e5565b602083015260028101546001600160a01b03166040830152610519600382016128e5565b606083015261052a600482016128e5565b6080830152600581015460a0830152600681015460c0830152600781015460e083015260ff6008820154818116151561010085015260081c1615156101208301526009810154610140830152600a81015461058481612a87565b9061059260405192836128c4565b80825260208201600a840160005260206000206000915b8383106107145786600c8787610160840152600b81015461018084015201546101a08201526040516020815261064d61063761060c6105f685516101c060208701526101e08601906129ae565b6020860151858203601f190160408701526129ae565b60408501516001600160a01b0316606085810191909152850151848203601f190160808601526129ae565b6080840151838203601f190160a08501526129ae565b60a083015160c083015260c083015160e083015260e08301516101008301526101008301511515610120830152610120830151151561014083015261014083015161016083015261016083015190601f1983820301610180840152815180825260208201916020808360051b8301019401926000915b8383106106e7578680876101a08b6101808101518285015201516101c08301520390f35b9091929394602080610705600193601f1986820301875289516129ae565b970193019301919392906106c3565b600160208192610723856128e5565b8152019201920191906105a9565b3461025557600036600319011261025557602060405160008051602061320b8339815191528152f35b34610255576020366003190112610255576004356001600160401b038111610255576107a3602061079081933690600401612a31565b816040519382858094519384920161298b565b8101600881520301902054604051908152f35b346102555760003660031901126102555760206040517f278259b194ae675b320344b3c4e89035d8b8a1c493c2201003b3e5a5a539eafc8152f35b6040366003190112610255576001600160401b03602480358281116102555761081e903690600401612a31565b61082d60095460043510613185565b610835613162565b6004356000526003602052604060002091600460205260406000203360005260205260ff60406000205416610ca357600283019260018060a01b0394858554163314610c5f57600882015460ff168080610c52575b15610963575050600991925001543410610928575060043560005260046020526040600020336000526020526040600020600160ff198254161790556000808080858554168190341561091e575b3491f115610912575416336004357f97a8264d9d0b9e21370349f9b49be012a5d1e27829879df8ba166dba48f898c6600080a45b60018055005b6040513d6000823e3d90fd5b6108fc91506108d8565b60649060146040519162461bcd60e51b83526020600484015282015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152fd5b909181610c45575b50156109cb5750505060043560005260046020526040600020336000526020526040600020600160ff198254161790555416336004357f97a8264d9d0b9e21370349f9b49be012a5d1e27829879df8ba166dba48f898c6600080a461090c565b90919392506004356000526005602052604060002090604051916109ee836128a9565b3383526020830160043581526040840190878252426060860152600060808601526001928360a0870152600060c0870152805490600160401b821015610c305790610a3d918582018155612a15565b979097610c1b578551166001600160601b0360a01b885416178755518287015551938451928311610c075750610a766002860154612838565b601f8111610bc7575b50602093601f8311600114610b53579180809260059660c09695600094610b48575b50501b916000199060031b1c19161760028501555b60608101516003850155610afe60048501610ae360808401511515829060ff801983541691151516179055565b60a0830151815461ff00191690151560081b61ff0016179055565b015191015560405190602082527fa964b0d5b0ae345368407279f158ce01fbdafd867ce29bc1a4cf30fef68fdd8c339280610b406004359460208301906129ae565b0390a361090c565b015192508980610aa1565b9092936002860160005260206000209160005b601f1985168110610bb1575091839160c0959360059795601f19811610610b98575b505050811b016002850155610ab6565b015160001960f88460031b161c19169055878080610b88565b8183015184559285019260209283019201610b66565b610bf790600287016000526020600020601f850160051c81019160208610610bfd575b601f0160051c0190612e21565b86610a7f565b9091508190610bea565b634e487b7160e01b60009081526041600452fd5b86634e487b7160e01b60005260006004526000fd5b87634e487b7160e01b60005260416004526000fd5b600991500154158661096b565b506009830154151561088a565b60405162461bcd60e51b8152602060048201526018818501527f4f776e657220616c7265616479206861732061636365737300000000000000006044820152606490fd5b60649060126040519162461bcd60e51b83526020600484015282015271416c7265616479206861732061636365737360701b6044820152fd5b3461025557606036600319011261025557600435610cf86129d3565b604435610d086009548410613185565b826000526020906003825260018060a01b0391610d30836002604060002001541633146131ca565b846000526004815282604060002094169384600052815260ff60406000205416610e09579060058492866000526004815260406000208460005281526040600020600160ff19825416179055866000525260406000209081548110610dba575b3383877f97a8264d9d0b9e21370349f9b49be012a5d1e27829879df8ba166dba48f898c6600080a4005b610dc391612a15565b50918254161480610df8575b610ddc575b818180610d90565b60048101600161ffff1982541617905560054291015582610dd4565b5060ff600482015460081c16610dcf565b6064906040519062461bcd60e51b82526004820152601760248201527f5573657220616c726561647920686173206163636573730000000000000000006044820152fd5b3461025557604036600319011261025557610e8c600435610e6c6129d3565b90806000526002602052610e87600160406000200154612b47565b612d23565b005b3461025557604036600319011261025557610ea76129d3565b600435600052600460205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b3461025557602036600319011261025557610e8c610ef76129e9565b610eff612b0d565b60008051602061320b83398151915260005260026020527fdc6246a27a928d53414cf0bbe2bfde021e1ac737a6e0bcf9b182cda5a9b2dcf854610f4190612b47565b612c89565b346102555760208060031936011261025557600435610f686009548210613185565b8060005260039081835260018060a01b03916002918383604060002001541633148015611155575b1561110157918492600052600590818452604060002092835490610fb382612a87565b92610fc160405194856128c4565b82845286840191829660005287600020916000935b85851061108a57505050505050604051938085019181865251809252604082818701941b86010193926000965b8388106110105786860387f35b90919293948380600192603f198a8203018652885190858251168152828201518382015261104d604083015160e0604084015260e08301906129ae565b916060808201519083015260808082015115159083015260a08082015115159083015260c080910151910152970193019701969093929193611003565b60068a6001928d8b9e9d9a9b604051916110a3836128a9565b895416825285890154848301526110bb878a016128e5565b6040830152878901546060830152600489015460ff908181161515608085015260081c16151560a083015288015460c08201528152019401940193929996959899610fd6565b60405162461bcd60e51b815260048101869052602660248201527f4e6f7420617574686f72697a656420746f20766965772061636365737320726560448201526571756573747360d01b6064820152608490fd5b507f278259b194ae675b320344b3c4e89035d8b8a1c493c2201003b3e5a5a539eafc600052828552604060002033600052855260ff60406000205416610f90565b3461025557600036600319011261025557602060405160008152f35b34610255576080366003190112610255576001600160401b03600435602435828111610255576111e6903690600401612a31565b604435838111610255576111fe903690600401612a31565b9060643584811161025557611217903690600401612a31565b916112256009548510613185565b8360005260039260209380855261124d60018060a01b036002604060002001541633146131ca565b61125984511515612dc6565b8560005280855260406000209080820197855198818a1161146b5761127e8154612838565b99601f9a8b81116114ef575b5080898c821160011461148c57600091611481575b508160011b9160001990861b1c19161790555b6004830191855191821161146b576112ca8354612838565b8a8111611433575b508799821160011461139f579261138f95949282600793611377967f999e6a948f9641ed693b4d88ba4178715d7e5067b92a9e4d44cc5ce0b0a31e5b9c9d600092611394575b508260011b92600019911b1c19161790555b426006820155019261133c8454612e12565b9182855589600052600688526040600020916040519361135b8561288e565b8452878985015260408401524260608401526080830152612e38565b549160408051948594855284015260408301906129ae565b0390a2005b89015191508e611318565b601f1982169983600052886000209a60005b81811061141c5750837f999e6a948f9641ed693b4d88ba4178715d7e5067b92a9e4d44cc5ce0b0a31e5b9b9c611377979461138f9a99979460079760019510611402575b505050811b01905561132a565b8a01519060f884600019921b161c191690558d80806113f5565b919b8a600181928f8c01518155019d0192016113b1565b61145c9084600052896000208c80860160051c8201928c8710611462575b0160051c0190612e21565b8a6112d2565b92508192611451565b634e487b7160e01b600052604160045260246000fd5b90508801518c61129f565b60008481528b81209250601f198416905b8c8c8383106114da5750505090836001949392106114c2575b5050811b0190556112b2565b8a015160001983881b60f8161c191690558c806114b6565b8401518555600190940193928301920161149d565b61151790836000528a6000208d80850160051c8201928d8610611462570160051c0190612e21565b8b61128a565b3461025557602036600319011261025557600435600a5481101561025557602090600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80154604051908152f35b3461025557602080600319360112610255576004356115906009548210613185565b600052600681526040600020908154916115a983612a87565b926115b760405194856128c4565b8084528284018092600052836000206000915b8383106116785750505050604051918083019381845251809452604083019360408160051b85010192916000955b8287106116055785850386f35b909192938280611668600193603f198a820301865288518051825261164b6116398583015160a080888701528501906129ae565b604083015184820360408601526129ae565b9160608083015190820152608080920151918184039101526129ae565b96019201960195929190926115f8565b60058660019260409998995161168d8161288e565b8554815261169c8587016128e5565b838201526116ac600287016128e5565b6040820152600386015460608201526116c7600487016128e5565b60808201528152019201920191909594956115ca565b34610255576040366003190112610255576116f66129d3565b600435600052600260205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b3461025557602036600319011261025557610e8c6117466129e9565b61174e612b0d565b60008051602061320b83398151915260005260026020527fdc6246a27a928d53414cf0bbe2bfde021e1ac737a6e0bcf9b182cda5a9b2dcf85461179090612b47565b612b6d565b34610255576000366003190112610255576000546040516001600160a01b039091168152602090f35b34610255576117cc366129ff565b9060005260066020526040600020908154811015610255576117ed91612af1565b5080546104206117ff600184016128e5565b9261180c600282016128e5565b61184b6118206004600385015494016128e5565b9161183d604051978897885260a0602089015260a08801906129ae565b9086820360408801526129ae565b91606085015283820360808501526129ae565b3461025557600036600319011261025557611877612d9a565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610255576040366003190112610255576118d06129e9565b6001600160a01b03166000908152600760205260409020805460243591908210156102555760209161190191612ad9565b90546040519160031b1c8152f35b34610255576000366003190112610255576020600954604051908152f35b346102555760003660031901126102555760405180600a5491828152602080910192600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8916000905b8282106119915761042085610414818903826128c4565b83548652948501946001938401939091019061197a565b34610255576020366003190112610255576004356119c96009548210613185565b80600052600460205260406000203360005260205260ff6040600020541615611a3257806000526003602052600b604060002001611a078154612e12565b905533907ff8d2db7c7db2fe44e1064c72e76721c532922d180fe69f61b8775ce58e2e6c29600080a3005b60405162461bcd60e51b8152602060048201526014602482015273139bc81858d8d95cdcc81d1bc819185d185cd95d60621b6044820152606490fd5b346102555760e0366003190112610255576004356001600160401b03811161025557611a9e903690600401612a31565b6024356001600160401b03811161025557611abd903690600401612a31565b6044356001600160401b03811161025557611adc903690600401612a31565b6064356001600160401b03811161025557611afb903690600401612a31565b6084359283151584036102555760c4356001600160401b0381116102555736602382011215610255578060040135611b3281612a87565b91611b4060405193846128c4565b8183526024602084019260051b820101903682116102555760248101925b8284106125035750505050611b71613162565b8551156124c757611b8484511515612dc6565b6040516020818851611b998183858d0161298b565b81016008815203019020546124825760095494611bb586612e12565b60095560405192611bc584612872565b87845260208401523360408401528460608401528360808401524260a08401524260c0840152600160e08401521515610100830152600061012083015260a435610140830152610160820152600061018082015260006101a082015283600052600360205260406000209080518051906001600160401b03821161146b578190611c4f8554612838565b601f8111612450575b50602090601f83116001146123e4576000926123d9575b50508160011b916000199060031b1c19161782555b60208101518051906001600160401b03821161146b578190611ca96001860154612838565b601f81116123a4575b50602090601f831160011461233257600092612327575b50508160011b916000199060031b1c19161760018301555b6002820160018060a01b036040830151166001600160601b0360a01b82541617905560608101518051906001600160401b03821161146b578190611d286003860154612838565b601f81116122f2575b50602090601f831160011461228057600092612275575b50508160011b916000199060031b1c19161760038301555b60808101518051906001600160401b03821161146b578190611d856004860154612838565b601f8111612240575b50602090601f83116001146121ce576000926121c3575b50508160011b916000199060031b1c19161760048301555b60a0810151600583015560c0810151600683015560e08101516007830155611e1b60088301611dff6101008401511515829060ff801983541691151516179055565b610120830151815461ff00191690151560081b61ff0016179055565b6101408101516009830155610160810151805190600160401b821161146b57600a84015482600a86015580831061214b575b5060200190600a84016000526020600020916000905b82821061203657505050506101a081610180600c930151600b850155015191015582600052600660205260406000209060405190611ea08261288e565b6001825283602083015260408201524260608201526040519160408301928084106001600160401b0385111761146b57611efd93604052600f81526e24b734ba34b0b6103b32b939b4b7b760891b60208201526080830152612e38565b816040516020818651611f138183858b0161298b565b810160088152030190205533600052600760205260406000208054600160401b81101561146b57611f4991600182018155612ad9565b81549060031b9084821b91600019901b1916179055600a54600160401b81101561146b576001810180600a55811015612020577f6030261238b75e373368746637a663b0f53d82d9fdfb5d33a015c036f8fce1746120036020958580947fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155836000526004875260406000203360005287526040600020600160ff198254161790556120116040519283926040845260408401906129ae565b8281038984015233966129ae565b0390a360018055604051908152f35b634e487b7160e01b600052603260045260246000fd5b80518051906001600160401b03821161146b576120538654612838565b601f8111612119575b50602090601f83116001146120a957928260019493602093869560009261209e575b5050600019600383901b1c191690841b1787555b01940191019092611e63565b015190508f8061207e565b908660005260206000209160005b601f1985168110612101575083602093600196938796938794601f198116106120e8575b505050811b018755612092565b015160001960f88460031b161c191690558f80806120db565b919260206001819286850151815501940192016120b7565b61214590876000526020600020601f850160051c81019160208610610bfd57601f0160051c0190612e21565b8c61205c565b600a85016000526020600020908382015b818301811061216c575050611e4d565b8061217960019254612838565b80612186575b500161215c565b601f8111831461219c5750600081555b8c61217f565b6000908282526121ba601f60208420920160051c8201858301612e21565b81835555612196565b015190508880611da5565b9250600485016000526020600020906000935b601f1984168510612225576001945083601f1981161061220c575b505050811b016004830155611dbd565b015160001960f88460031b161c191690558880806121fc565b818101518355602094850194600190930192909101906121e1565b61226f90600487016000526020600020601f850160051c81019160208610610bfd57601f0160051c0190612e21565b89611d8e565b015190508880611d48565b9250600385016000526020600020906000935b601f19841685106122d7576001945083601f198116106122be575b505050811b016003830155611d60565b015160001960f88460031b161c191690558880806122ae565b81810151835560209485019460019093019290910190612293565b61232190600387016000526020600020601f850160051c81019160208610610bfd57601f0160051c0190612e21565b89611d31565b015190508880611cc9565b9250600185016000526020600020906000935b601f1984168510612389576001945083601f19811610612370575b505050811b016001830155611ce1565b015160001960f88460031b161c19169055888080612360565b81810151835560209485019460019093019290910190612345565b6123d390600187016000526020600020601f850160051c81019160208610610bfd57601f0160051c0190612e21565b89611cb2565b015190508880611c6f565b9250846000526020600020906000935b601f1984168510612435576001945083601f1981161061241c575b505050811b018255611c84565b015160001960f88460031b161c1916905588808061240f565b818101518355602094850194600190930192909101906123f4565b61247c90866000526020600020601f850160051c81019160208610610bfd57601f0160051c0190612e21565b89611c58565b60405162461bcd60e51b815260206004820152601b60248201527f44617461736574206e616d6520616c72656164792065786973747300000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e616d652063616e6e6f7420626520656d70747960601b6044820152606490fd5b6001600160401b0384351161025557602080916125263660248835870101612a31565b815201930192611b5e565b346102555761253f366129ff565b90600052600560205260406000209081548110156102555761256091612a15565b5060018060a01b0381541660018201549161257d600282016128e5565b60ff6003830154926125b160056004830154920154936040519788978852602088015260e0604088015260e08701906129ae565b9360608601528181161515608086015260081c16151560a084015260c08301520390f35b34610255576040366003190112610255576125ee6129d3565b336001600160a01b0382160361260a57610e8c90600435612d23565b60405163334bd91960e11b8152600490fd5b3461025557604036600319011261025557610e8c60043561263b6129d3565b90806000526002602052612656600160406000200154612b47565b612c0e565b346102555760203660031901126102555760043560005260026020526020600160406000200154604051908152f35b3461025557602036600319011261025557600435600052600360205260406000206126b4816128e5565b6126c0600183016128e5565b60028301549092906001600160a01b03166126dd600383016128e5565b916126ea600482016128e5565b926005820154936006830154600784015490600885015492600986015494600b87015496600c0154976040519b8c9b8c6101a08091528d0161272b916129ae565b8c810360208e015261273c916129ae565b9060408c01528a810360608c0152612753916129ae565b89810360808b0152612764916129ae565b9660a089015260c088015260e087015260ff8116151561010087015260081c60ff1615156101208601526101408501526101608401526101808301520390f35b346102555760003660031901126102555760095460001981019081116127cf57602090604051908152f35b634e487b7160e01b600052601160045260246000fd5b34610255576020366003190112610255576004359063ffffffff60e01b821680920361025557602091637965db0b60e01b8114908115612827575b5015158152f35b6301ffc9a760e01b14905083612820565b90600182811c92168015612868575b602083101461285257565b634e487b7160e01b600052602260045260246000fd5b91607f1691612847565b6101c081019081106001600160401b0382111761146b57604052565b60a081019081106001600160401b0382111761146b57604052565b60e081019081106001600160401b0382111761146b57604052565b90601f801991011681019081106001600160401b0382111761146b57604052565b90604051918260008254926128f984612838565b9081845260019485811690816000146129685750600114612925575b5050612923925003836128c4565b565b9093915060005260209081600020936000915b81831061295057505061292393508201013880612915565b85548884018501529485019487945091830191612938565b91505061292394506020925060ff191682840152151560051b8201013880612915565b60005b83811061299e5750506000910152565b818101518382015260200161298e565b906020916129c78151809281855285808601910161298b565b601f01601f1916010190565b602435906001600160a01b038216820361025557565b600435906001600160a01b038216820361025557565b6040906003190112610255576004359060243590565b8054821015612020576000526006602060002091020190600090565b81601f82011215610255578035906001600160401b03821161146b5760405192612a65601f8401601f1916602001856128c4565b8284526020838301011161025557816000926020809301838601378301015290565b6001600160401b03811161146b5760051b60200190565b6020908160408183019282815285518094520193019160005b828110612ac5575050505090565b835185529381019392810192600101612ab7565b80548210156120205760005260206000200190600090565b8054821015612020576000526005602060002091020190600090565b3360009081527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b602052604081205460ff16156102375750565b80600052600260205260406000203360005260205260ff60406000205416156102375750565b6001600160a01b031660008181527fdc6246a27a928d53414cf0bbe2bfde021e1ac737a6e0bcf9b182cda5a9b2dcf7602052604081205490919060008051602061320b8339815191529060ff16612c095780835260026020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b906000918083526002602052604083209160018060a01b03169182845260205260ff60408420541615600014612c095780835260026020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b6001600160a01b031660008181527fdc6246a27a928d53414cf0bbe2bfde021e1ac737a6e0bcf9b182cda5a9b2dcf7602052604081205490919060008051602061320b8339815191529060ff1615612c09578083526002602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b906000918083526002602052604083209160018060a01b03169182845260205260ff604084205416600014612c09578083526002602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b6000546001600160a01b03163303612dae57565b60405163118cdaa760e01b8152336004820152602490fd5b15612dcd57565b60405162461bcd60e51b815260206004820152601960248201527f4461746120686173682063616e6e6f7420626520656d707479000000000000006044820152606490fd5b60001981146127cf5760010190565b818110612e2c575050565b60008155600101612e21565b8054600160401b81101561146b57612e57906001928382018155612af1565b61314c578251815581810190602080850151918251936001600160401b039485811161146b5780612e888354612838565b95601f9687811161311e575b5085908783116001146130bb576000926130b0575b5050600019600383901b1c191690871b1790555b60028101604087015180519086821161146b57612eda8354612838565b868111613082575b5084908683116001146130145791806004949260809694600092613009575b5050600019600383901b1c191690891b1790555b606088015160038201550195015190815193841161146b57612f378654612838565b838111612fdb575b5080928411600114612f785750928293918392600094612f6d575b50501b916000199060031b1c1916179055565b015192503880612f5a565b919083601f1981168760005284600020946000905b88838310612fc15750505010612fa8575b505050811b019055565b015160001960f88460031b161c19169055388080612f9e565b858701518855909601959485019487935090810190612f8d565b6130039087600052826000208580880160051c820192858910611462570160051c0190612e21565b38612f3f565b015190503880612f01565b889291601f1983169185600052876000209260005b8982821061306c5750509160809795939185600498969410613053575b505050811b019055612f15565b015160001960f88460031b161c19169055388080613046565b8385015186558d97909501949384019301613029565b6130aa9084600052866000208880860160051c820192898710611462570160051c0190612e21565b38612ee2565b015190503880612ea9565b90899350601f1983169185600052876000209260005b8982821061310857505084116130ef575b505050811b019055612ebd565b015160001960f88460031b161c191690553880806130e2565b8385015186558d979095019493840193016130d1565b6131469085600052876000208980860160051c8201928a8710611462570160051c0190612e21565b38612e94565b634e487b7160e01b600052600060045260246000fd5b600260015414613173576002600155565b604051633ee5aeb560e01b8152600490fd5b1561318c57565b60405162461bcd60e51b815260206004820152601660248201527511185d185cd95d08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b156131d157565b60405162461bcd60e51b81526020600482015260116024820152702737ba103230ba30b9b2ba1037bbb732b960791b6044820152606490fdfe0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09a2646970667358221220ee07b7e438a70e6da39aacc537866e33701098bc7db757650ad942fa0bfcf85b64736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xAA JUMPI CALLER ISZERO PUSH3 0x94 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH3 0x66 CALLER PUSH3 0xAF JUMP JUMPDEST POP PUSH3 0x72 CALLER PUSH3 0x130 JUMP JUMPDEST POP PUSH3 0x7E CALLER PUSH3 0x1D3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH2 0x3260 SWAP1 DUP2 PUSH3 0x272 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAC33FF75C19E70FE83507DB0D683FD3465C996598DC972688B7ACE676C89077B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x12C JUMPI DUP2 DUP1 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x34D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x48B89508C52D03A056E401171466F0F1AC697802E07E33F22B572CE67F02B512 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x278259B194AE675B320344B3C4E89035D8B8A1C493C2201003B3E5A5A539EAFC SWAP1 PUSH1 0xFF AND PUSH3 0x1CE JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x34D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xDC6246A27A928D53414CF0BBE2BFDE021E1AC737A6E0BCF9B182CDA5A9B2DCF7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 SWAP1 PUSH1 0xFF AND PUSH3 0x1CE JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x34D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x27E5 JUMPI POP DUP1 PUSH4 0x1AF8E976 EQ PUSH2 0x27A4 JUMPI DUP1 PUSH4 0x1CFF85E1 EQ PUSH2 0x268A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x265B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x261C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x25D5 JUMPI DUP1 PUSH4 0x3EE9AC05 EQ PUSH2 0x2531 JUMPI DUP1 PUSH4 0x44BC6D25 EQ PUSH2 0x1A6E JUMPI DUP1 PUSH4 0x4B51C301 EQ PUSH2 0x19A8 JUMPI DUP1 PUSH4 0x4D72CD12 EQ PUSH2 0x192D JUMPI DUP1 PUSH4 0x52955670 EQ PUSH2 0x190F JUMPI DUP1 PUSH4 0x668E84BE EQ PUSH2 0x18B7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x185E JUMPI DUP1 PUSH4 0x795D5CB7 EQ PUSH2 0x17BE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1795 JUMPI DUP1 PUSH4 0x9000B3D6 EQ PUSH2 0x172A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x16DD JUMPI DUP1 PUSH4 0x9ABD9D62 EQ PUSH2 0x156E JUMPI DUP1 PUSH4 0xA1CD59C3 EQ PUSH2 0x151D JUMPI DUP1 PUSH4 0xA1D534CC EQ PUSH2 0x11B2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1196 JUMPI DUP1 PUSH4 0xC0B281F2 EQ PUSH2 0xF46 JUMPI DUP1 PUSH4 0xCA2DFD0A EQ PUSH2 0xEDB JUMPI DUP1 PUSH4 0xCED14198 EQ PUSH2 0xE8E JUMPI DUP1 PUSH4 0xD13C8703 EQ PUSH2 0xE8E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xE4D JUMPI DUP1 PUSH4 0xD603B284 EQ PUSH2 0xCDC JUMPI DUP1 PUSH4 0xDAB52A76 EQ PUSH2 0x7F1 JUMPI DUP1 PUSH4 0xDD5AF6CC EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xDFB216AA EQ PUSH2 0x75A JUMPI DUP1 PUSH4 0xE7705DB6 EQ PUSH2 0x731 JUMPI DUP1 PUSH4 0xEE004221 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0xF1767FFD EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xFE2CB4C5 EQ PUSH2 0x25A JUMPI PUSH4 0xFEF7E61A EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH2 0x1B9 CALLDATASIZE PUSH2 0x29FF JUMP JUMPDEST SWAP1 PUSH2 0x1C7 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x3185 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x48B89508C52D03A056E401171466F0F1AC697802E07E33F22B572CE67F02B512 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x278259B194AE675B320344B3C4E89035D8B8A1C493C2201003B3E5A5A539EAFC SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x237 JUMPI POP PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO SWAP1 DUP2 DUP2 SUB PUSH2 0x255 JUMPI PUSH2 0x289 PUSH1 0x9 SLOAD DUP5 LT PUSH2 0x3185 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xDC6246A27A928D53414CF0BBE2BFDE021E1AC737A6E0BCF9B182CDA5A9B2DCF7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x320B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x237 JUMPI POP PUSH32 0x1A4001DECBA2BF82B6E04B601C884D0AFD30781E54B962A9B9FC5AB6F3CA375B SWAP2 PUSH2 0x321 PUSH1 0x20 SWAP3 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 DUP5 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH2 0xFF00 DUP3 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0x343 PUSH2 0x29E9 JUMP JUMPDEST PUSH2 0x34B PUSH2 0x2D9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x255 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3D5 PUSH2 0x29E9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x424 JUMPI PUSH2 0x420 DUP6 PUSH2 0x414 DUP2 DUP10 SUB DUP3 PUSH2 0x28C4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A9E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3FD JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x0 PUSH2 0x1A0 PUSH1 0x40 MLOAD PUSH2 0x45D DUP2 PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x9 SLOAD PUSH2 0x4C4 PUSH1 0x4 CALLDATALOAD SWAP2 DUP3 LT PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4DE DUP3 PUSH2 0x2872 JUMP JUMPDEST PUSH2 0x4E7 DUP2 PUSH2 0x28E5 JUMP JUMPDEST DUP3 MSTORE PUSH2 0x4F5 PUSH1 0x1 DUP3 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x519 PUSH1 0x3 DUP3 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x52A PUSH1 0x4 DUP3 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x8 DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x584 DUP2 PUSH2 0x2A87 JUMP JUMPDEST SWAP1 PUSH2 0x592 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x28C4 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0xA DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x714 JUMPI DUP7 PUSH1 0xC DUP8 DUP8 PUSH2 0x160 DUP5 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x180 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x1A0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH2 0x64D PUSH2 0x637 PUSH2 0x60C PUSH2 0x5F6 DUP6 MLOAD PUSH2 0x1C0 PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x1E0 DUP7 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x100 DUP4 ADD MLOAD ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x120 DUP4 ADD MLOAD ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x160 DUP4 ADD MLOAD SWAP1 PUSH1 0x1F NOT DUP4 DUP3 SUB ADD PUSH2 0x180 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x6E7 JUMPI DUP7 DUP1 DUP8 PUSH2 0x1A0 DUP12 PUSH2 0x180 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x1C0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x705 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x29AE JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0x723 DUP6 PUSH2 0x28E5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x5A9 JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x320B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x7A3 PUSH1 0x20 PUSH2 0x790 DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x298B JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x278259B194AE675B320344B3C4E89035D8B8A1C493C2201003B3E5A5A539EAFC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x81E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x82D PUSH1 0x9 SLOAD PUSH1 0x4 CALLDATALOAD LT PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x835 PUSH2 0x3162 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xCA3 JUMPI PUSH1 0x2 DUP4 ADD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 DUP6 SLOAD AND CALLER EQ PUSH2 0xC5F JUMPI PUSH1 0x8 DUP3 ADD SLOAD PUSH1 0xFF AND DUP1 DUP1 PUSH2 0xC52 JUMPI JUMPDEST ISZERO PUSH2 0x963 JUMPI POP POP PUSH1 0x9 SWAP2 SWAP3 POP ADD SLOAD CALLVALUE LT PUSH2 0x928 JUMPI POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 DUP1 DUP1 DUP6 DUP6 SLOAD AND DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0x91E JUMPI JUMPDEST CALLVALUE SWAP2 CALL ISZERO PUSH2 0x912 JUMPI SLOAD AND CALLER PUSH1 0x4 CALLDATALOAD PUSH32 0x97A8264D9D0B9E21370349F9B49BE012A5D1E27829879DF8BA166DBA48F898C6 PUSH1 0x0 DUP1 LOG4 JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x14 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 DUP2 PUSH2 0xC45 JUMPI JUMPDEST POP ISZERO PUSH2 0x9CB JUMPI POP POP POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE SLOAD AND CALLER PUSH1 0x4 CALLDATALOAD PUSH32 0x97A8264D9D0B9E21370349F9B49BE012A5D1E27829879DF8BA166DBA48F898C6 PUSH1 0x0 DUP1 LOG4 PUSH2 0x90C JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP3 POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x9EE DUP4 PUSH2 0x28A9 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 DUP8 DUP3 MSTORE TIMESTAMP PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 SWAP3 DUP4 PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP8 ADD MSTORE DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xC30 JUMPI SWAP1 PUSH2 0xA3D SWAP2 DUP6 DUP3 ADD DUP2 SSTORE PUSH2 0x2A15 JUMP JUMPDEST SWAP8 SWAP1 SWAP8 PUSH2 0xC1B JUMPI DUP6 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP9 SLOAD AND OR DUP8 SSTORE MLOAD DUP3 DUP8 ADD SSTORE MLOAD SWAP4 DUP5 MLOAD SWAP3 DUP4 GT PUSH2 0xC07 JUMPI POP PUSH2 0xA76 PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xBC7 JUMPI JUMPDEST POP PUSH1 0x20 SWAP4 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xB53 JUMPI SWAP2 DUP1 DUP1 SWAP3 PUSH1 0x5 SWAP7 PUSH1 0xC0 SWAP7 SWAP6 PUSH1 0x0 SWAP5 PUSH2 0xB48 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP6 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0xAFE PUSH1 0x4 DUP6 ADD PUSH2 0xAE3 PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 MSTORE PUSH32 0xA964B0D5B0AE345368407279F158CE01FBDAFD867CE29BC1A4CF30FEF68FDD8C CALLER SWAP3 DUP1 PUSH2 0xB40 PUSH1 0x4 CALLDATALOAD SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x90C JUMP JUMPDEST ADD MLOAD SWAP3 POP DUP10 DUP1 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 SWAP3 SWAP4 PUSH1 0x2 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xBB1 JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0xC0 SWAP6 SWAP4 PUSH1 0x5 SWAP8 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xB98 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0xAB6 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0xB88 JUMP JUMPDEST DUP2 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP6 ADD SWAP3 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xB66 JUMP JUMPDEST PUSH2 0xBF7 SWAP1 PUSH1 0x2 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBFD JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP7 PUSH2 0xA7F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 SWAP2 POP ADD SLOAD ISZERO DUP7 PUSH2 0x96B JUMP JUMPDEST POP PUSH1 0x9 DUP4 ADD SLOAD ISZERO ISZERO PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 DUP2 DUP6 ADD MSTORE PUSH32 0x4F776E657220616C726561647920686173206163636573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x12 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH18 0x416C72656164792068617320616363657373 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCF8 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0xD08 PUSH1 0x9 SLOAD DUP5 LT PUSH2 0x3185 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xD30 DUP4 PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0x31CA JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 AND SWAP4 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xE09 JUMPI SWAP1 PUSH1 0x5 DUP5 SWAP3 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP7 PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT PUSH2 0xDBA JUMPI JUMPDEST CALLER DUP4 DUP8 PUSH32 0x97A8264D9D0B9E21370349F9B49BE012A5D1E27829879DF8BA166DBA48F898C6 PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST PUSH2 0xDC3 SWAP2 PUSH2 0x2A15 JUMP JUMPDEST POP SWAP2 DUP3 SLOAD AND EQ DUP1 PUSH2 0xDF8 JUMPI JUMPDEST PUSH2 0xDDC JUMPI JUMPDEST DUP2 DUP2 DUP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD PUSH1 0x1 PUSH2 0xFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x5 TIMESTAMP SWAP2 ADD SSTORE DUP3 PUSH2 0xDD4 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x8 SHR AND PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C72656164792068617320616363657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0xE8C PUSH1 0x4 CALLDATALOAD PUSH2 0xE6C PUSH2 0x29D3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xE87 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2B47 JUMP JUMPDEST PUSH2 0x2D23 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0xEA7 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0xE8C PUSH2 0xEF7 PUSH2 0x29E9 JUMP JUMPDEST PUSH2 0xEFF PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x320B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH32 0xDC6246A27A928D53414CF0BBE2BFDE021E1AC737A6E0BCF9B182CDA5A9B2DCF8 SLOAD PUSH2 0xF41 SWAP1 PUSH2 0x2B47 JUMP JUMPDEST PUSH2 0x2C89 JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xF68 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x3185 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 SWAP1 DUP2 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x2 SWAP2 DUP4 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1155 JUMPI JUMPDEST ISZERO PUSH2 0x1101 JUMPI SWAP2 DUP5 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x5 SWAP1 DUP2 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD SWAP1 PUSH2 0xFB3 DUP3 PUSH2 0x2A87 JUMP JUMPDEST SWAP3 PUSH2 0xFC1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x28C4 JUMP JUMPDEST DUP3 DUP5 MSTORE DUP7 DUP5 ADD SWAP2 DUP3 SWAP7 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x108A JUMPI POP POP POP POP POP POP PUSH1 0x40 MLOAD SWAP4 DUP1 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP3 DUP2 DUP8 ADD SWAP5 SHL DUP7 ADD ADD SWAP4 SWAP3 PUSH1 0x0 SWAP7 JUMPDEST DUP4 DUP9 LT PUSH2 0x1010 JUMPI DUP7 DUP7 SUB DUP8 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 DUP4 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD SWAP1 DUP6 DUP3 MLOAD AND DUP2 MSTORE DUP3 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH2 0x104D PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0xE0 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH1 0xC0 DUP1 SWAP2 ADD MLOAD SWAP2 ADD MSTORE SWAP8 ADD SWAP4 ADD SWAP8 ADD SWAP7 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x6 DUP11 PUSH1 0x1 SWAP3 DUP14 DUP12 SWAP15 SWAP14 SWAP11 SWAP12 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x10A3 DUP4 PUSH2 0x28A9 JUMP JUMPDEST DUP10 SLOAD AND DUP3 MSTORE DUP6 DUP10 ADD SLOAD DUP5 DUP4 ADD MSTORE PUSH2 0x10BB DUP8 DUP11 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE DUP8 DUP10 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP10 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 DUP2 AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE DUP9 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP5 ADD SWAP5 ADD SWAP4 SWAP3 SWAP10 SWAP7 SWAP6 SWAP9 SWAP10 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F207669657720616363657373207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x717565737473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH32 0x278259B194AE675B320344B3C4E89035D8B8A1C493C2201003B3E5A5A539EAFC PUSH1 0x0 MSTORE DUP3 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xF90 JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x11E6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x11FE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x1217 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST SWAP2 PUSH2 0x1225 PUSH1 0x9 SLOAD DUP6 LT PUSH2 0x3185 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 SWAP3 PUSH1 0x20 SWAP4 DUP1 DUP6 MSTORE PUSH2 0x124D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0x31CA JUMP JUMPDEST PUSH2 0x1259 DUP5 MLOAD ISZERO ISZERO PUSH2 0x2DC6 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP1 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 DUP3 ADD SWAP8 DUP6 MLOAD SWAP9 DUP2 DUP11 GT PUSH2 0x146B JUMPI PUSH2 0x127E DUP2 SLOAD PUSH2 0x2838 JUMP JUMPDEST SWAP10 PUSH1 0x1F SWAP11 DUP12 DUP2 GT PUSH2 0x14EF JUMPI JUMPDEST POP DUP1 DUP10 DUP13 DUP3 GT PUSH1 0x1 EQ PUSH2 0x148C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1481 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP7 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 DUP4 ADD SWAP2 DUP6 MLOAD SWAP2 DUP3 GT PUSH2 0x146B JUMPI PUSH2 0x12CA DUP4 SLOAD PUSH2 0x2838 JUMP JUMPDEST DUP11 DUP2 GT PUSH2 0x1433 JUMPI JUMPDEST POP DUP8 SWAP10 DUP3 GT PUSH1 0x1 EQ PUSH2 0x139F JUMPI SWAP3 PUSH2 0x138F SWAP6 SWAP5 SWAP3 DUP3 PUSH1 0x7 SWAP4 PUSH2 0x1377 SWAP7 PUSH32 0x999E6A948F9641ED693B4D88BA4178715D7E5067B92A9E4D44CC5CE0B0A31E5B SWAP13 SWAP14 PUSH1 0x0 SWAP3 PUSH2 0x1394 JUMPI JUMPDEST POP DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST TIMESTAMP PUSH1 0x6 DUP3 ADD SSTORE ADD SWAP3 PUSH2 0x133C DUP5 SLOAD PUSH2 0x2E12 JUMP JUMPDEST SWAP2 DUP3 DUP6 SSTORE DUP10 PUSH1 0x0 MSTORE PUSH1 0x6 DUP9 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x135B DUP6 PUSH2 0x288E JUMP JUMPDEST DUP5 MSTORE DUP8 DUP10 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2E38 JUMP JUMPDEST SLOAD SWAP2 PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST DUP10 ADD MLOAD SWAP2 POP DUP15 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP10 DUP4 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 SWAP11 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x141C JUMPI POP DUP4 PUSH32 0x999E6A948F9641ED693B4D88BA4178715D7E5067B92A9E4D44CC5CE0B0A31E5B SWAP12 SWAP13 PUSH2 0x1377 SWAP8 SWAP5 PUSH2 0x138F SWAP11 SWAP10 SWAP8 SWAP5 PUSH1 0x7 SWAP8 PUSH1 0x1 SWAP6 LT PUSH2 0x1402 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x132A JUMP JUMPDEST DUP11 ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x13F5 JUMP JUMPDEST SWAP2 SWAP12 DUP11 PUSH1 0x1 DUP2 SWAP3 DUP16 DUP13 ADD MLOAD DUP2 SSTORE ADD SWAP14 ADD SWAP3 ADD PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x145C SWAP1 DUP5 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP13 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP8 LT PUSH2 0x1462 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP11 PUSH2 0x12D2 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x1451 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP9 ADD MLOAD DUP13 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE DUP12 DUP2 KECCAK256 SWAP3 POP PUSH1 0x1F NOT DUP5 AND SWAP1 JUMPDEST DUP13 DUP13 DUP4 DUP4 LT PUSH2 0x14DA JUMPI POP POP POP SWAP1 DUP4 PUSH1 0x1 SWAP5 SWAP4 SWAP3 LT PUSH2 0x14C2 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x12B2 JUMP JUMPDEST DUP11 ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 PUSH2 0x14B6 JUMP JUMPDEST DUP5 ADD MLOAD DUP6 SSTORE PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x149D JUMP JUMPDEST PUSH2 0x1517 SWAP1 DUP4 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 DUP14 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP14 DUP7 LT PUSH2 0x1462 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP12 PUSH2 0x128A JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x255 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1590 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH2 0x15A9 DUP4 PUSH2 0x2A87 JUMP JUMPDEST SWAP3 PUSH2 0x15B7 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x28C4 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP3 DUP5 ADD DUP1 SWAP3 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1678 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 ADD SWAP4 DUP2 DUP5 MSTORE MLOAD DUP1 SWAP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP4 PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 SWAP2 PUSH1 0x0 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x1605 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x1668 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD DUP1 MLOAD DUP3 MSTORE PUSH2 0x164B PUSH2 0x1639 DUP6 DUP4 ADD MLOAD PUSH1 0xA0 DUP1 DUP9 DUP8 ADD MSTORE DUP6 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 SWAP3 ADD MLOAD SWAP2 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x5 DUP7 PUSH1 0x1 SWAP3 PUSH1 0x40 SWAP10 SWAP9 SWAP10 MLOAD PUSH2 0x168D DUP2 PUSH2 0x288E JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH2 0x169C DUP6 DUP8 ADD PUSH2 0x28E5 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH2 0x16AC PUSH1 0x2 DUP8 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x16C7 PUSH1 0x4 DUP8 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP6 SWAP5 SWAP6 PUSH2 0x15CA JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0x16F6 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0xE8C PUSH2 0x1746 PUSH2 0x29E9 JUMP JUMPDEST PUSH2 0x174E PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x320B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH32 0xDC6246A27A928D53414CF0BBE2BFDE021E1AC737A6E0BCF9B182CDA5A9B2DCF8 SLOAD PUSH2 0x1790 SWAP1 PUSH2 0x2B47 JUMP JUMPDEST PUSH2 0x2B6D JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH2 0x17CC CALLDATASIZE PUSH2 0x29FF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x255 JUMPI PUSH2 0x17ED SWAP2 PUSH2 0x2AF1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x420 PUSH2 0x17FF PUSH1 0x1 DUP5 ADD PUSH2 0x28E5 JUMP JUMPDEST SWAP3 PUSH2 0x180C PUSH1 0x2 DUP3 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH2 0x184B PUSH2 0x1820 PUSH1 0x4 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 ADD PUSH2 0x28E5 JUMP JUMPDEST SWAP2 PUSH2 0x183D PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0x1877 PUSH2 0x2D9A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0x18D0 PUSH2 0x29E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x255 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1901 SWAP2 PUSH2 0x2AD9 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xA SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1991 JUMPI PUSH2 0x420 DUP6 PUSH2 0x414 DUP2 DUP10 SUB DUP3 PUSH2 0x28C4 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x197A JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x19C9 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x3185 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1A32 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xB PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x1A07 DUP2 SLOAD PUSH2 0x2E12 JUMP JUMPDEST SWAP1 SSTORE CALLER SWAP1 PUSH32 0xF8D2DB7C7DB2FE44E1064C72E76721C532922D180FE69F61B8775CE58E2E6C29 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BC81858D8D95CDCC81D1BC819185D185CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x1A9E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x1ABD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x1ADC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x1AFB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP3 DUP4 ISZERO ISZERO DUP5 SUB PUSH2 0x255 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x255 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x255 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1B32 DUP2 PUSH2 0x2A87 JUMP JUMPDEST SWAP2 PUSH2 0x1B40 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x28C4 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x255 JUMPI PUSH1 0x24 DUP2 ADD SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x2503 JUMPI POP POP POP POP PUSH2 0x1B71 PUSH2 0x3162 JUMP JUMPDEST DUP6 MLOAD ISZERO PUSH2 0x24C7 JUMPI PUSH2 0x1B84 DUP5 MLOAD ISZERO ISZERO PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP9 MLOAD PUSH2 0x1B99 DUP2 DUP4 DUP6 DUP14 ADD PUSH2 0x298B JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH2 0x2482 JUMPI PUSH1 0x9 SLOAD SWAP5 PUSH2 0x1BB5 DUP7 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1BC5 DUP5 PUSH2 0x2872 JUMP JUMPDEST DUP8 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER PUSH1 0x40 DUP5 ADD MSTORE DUP5 PUSH1 0x60 DUP5 ADD MSTORE DUP4 PUSH1 0x80 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A0 DUP3 ADD MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146B JUMPI DUP2 SWAP1 PUSH2 0x1C4F DUP6 SLOAD PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2450 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x23E4 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x23D9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146B JUMPI DUP2 SWAP1 PUSH2 0x1CA9 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x23A4 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2332 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2327 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146B JUMPI DUP2 SWAP1 PUSH2 0x1D28 PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x22F2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2280 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2275 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146B JUMPI DUP2 SWAP1 PUSH2 0x1D85 PUSH1 0x4 DUP7 ADD SLOAD PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2240 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x21CE JUMPI PUSH1 0x0 SWAP3 PUSH2 0x21C3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x1E1B PUSH1 0x8 DUP4 ADD PUSH2 0x1DFF PUSH2 0x100 DUP5 ADD MLOAD ISZERO ISZERO DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MLOAD DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0x9 DUP4 ADD SSTORE PUSH2 0x160 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x146B JUMPI PUSH1 0xA DUP5 ADD SLOAD DUP3 PUSH1 0xA DUP7 ADD SSTORE DUP1 DUP4 LT PUSH2 0x214B JUMPI JUMPDEST POP PUSH1 0x20 ADD SWAP1 PUSH1 0xA DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2036 JUMPI POP POP POP POP PUSH2 0x1A0 DUP2 PUSH2 0x180 PUSH1 0xC SWAP4 ADD MLOAD PUSH1 0xB DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1EA0 DUP3 PUSH2 0x288E JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 ADD SWAP3 DUP1 DUP5 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH2 0x146B JUMPI PUSH2 0x1EFD SWAP4 PUSH1 0x40 MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x24B734BA34B0B6103B32B939B4B7B7 PUSH1 0x89 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2E38 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x1F13 DUP2 DUP4 DUP6 DUP12 ADD PUSH2 0x298B JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x146B JUMPI PUSH2 0x1F49 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2AD9 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP5 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x146B JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0xA SSTORE DUP2 LT ISZERO PUSH2 0x2020 JUMPI PUSH32 0x6030261238B75E373368746637A663B0F53D82D9FDFB5D33A015C036F8FCE174 PUSH2 0x2003 PUSH1 0x20 SWAP6 DUP6 DUP1 SWAP5 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x2011 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST DUP3 DUP2 SUB DUP10 DUP5 ADD MSTORE CALLER SWAP7 PUSH2 0x29AE JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146B JUMPI PUSH2 0x2053 DUP7 SLOAD PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2119 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x20A9 JUMPI SWAP3 DUP3 PUSH1 0x1 SWAP5 SWAP4 PUSH1 0x20 SWAP4 DUP7 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x209E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP8 SSTORE JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP1 SWAP3 PUSH2 0x1E63 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x207E JUMP JUMPDEST SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x2101 JUMPI POP DUP4 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP7 SWAP4 DUP8 SWAP7 SWAP4 DUP8 SWAP5 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x20E8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP8 SSTORE PUSH2 0x2092 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 DUP1 PUSH2 0x20DB JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x20B7 JUMP JUMPDEST PUSH2 0x2145 SWAP1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBFD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP13 PUSH2 0x205C JUMP JUMPDEST PUSH1 0xA DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP4 DUP3 ADD JUMPDEST DUP2 DUP4 ADD DUP2 LT PUSH2 0x216C JUMPI POP POP PUSH2 0x1E4D JUMP JUMPDEST DUP1 PUSH2 0x2179 PUSH1 0x1 SWAP3 SLOAD PUSH2 0x2838 JUMP JUMPDEST DUP1 PUSH2 0x2186 JUMPI JUMPDEST POP ADD PUSH2 0x215C JUMP JUMPDEST PUSH1 0x1F DUP2 GT DUP4 EQ PUSH2 0x219C JUMPI POP PUSH1 0x0 DUP2 SSTORE JUMPDEST DUP13 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH2 0x21BA PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2E21 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x2196 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1DA5 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2225 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x220C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP4 ADD SSTORE PUSH2 0x1DBD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x21FC JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH2 0x226F SWAP1 PUSH1 0x4 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBFD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP10 PUSH2 0x1D8E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1D48 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x22D7 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x22BE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x1D60 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x22AE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2293 JUMP JUMPDEST PUSH2 0x2321 SWAP1 PUSH1 0x3 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBFD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP10 PUSH2 0x1D31 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1CC9 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2389 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2370 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x1CE1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x2360 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH2 0x23D3 SWAP1 PUSH1 0x1 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBFD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP10 PUSH2 0x1CB2 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2435 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x241C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0x1C84 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x240F JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x23F4 JUMP JUMPDEST PUSH2 0x247C SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBFD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP10 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44617461736574206E616D6520616C7265616479206578697374730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E616D652063616E6E6F7420626520656D707479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 CALLDATALOAD GT PUSH2 0x255 JUMPI PUSH1 0x20 DUP1 SWAP2 PUSH2 0x2526 CALLDATASIZE PUSH1 0x24 DUP9 CALLDATALOAD DUP8 ADD ADD PUSH2 0x2A31 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH2 0x1B5E JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH2 0x253F CALLDATASIZE PUSH2 0x29FF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x255 JUMPI PUSH2 0x2560 SWAP2 PUSH2 0x2A15 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x257D PUSH1 0x2 DUP3 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD SWAP3 PUSH2 0x25B1 PUSH1 0x5 PUSH1 0x4 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xE0 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP7 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0x25EE PUSH2 0x29D3 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x260A JUMPI PUSH2 0xE8C SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2D23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0xE8C PUSH1 0x4 CALLDATALOAD PUSH2 0x263B PUSH2 0x29D3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x2656 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2B47 JUMP JUMPDEST PUSH2 0x2C0E JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x26B4 DUP2 PUSH2 0x28E5 JUMP JUMPDEST PUSH2 0x26C0 PUSH1 0x1 DUP4 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26DD PUSH1 0x3 DUP4 ADD PUSH2 0x28E5 JUMP JUMPDEST SWAP2 PUSH2 0x26EA PUSH1 0x4 DUP3 ADD PUSH2 0x28E5 JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP3 ADD SLOAD SWAP4 PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 DUP5 ADD SLOAD SWAP1 PUSH1 0x8 DUP6 ADD SLOAD SWAP3 PUSH1 0x9 DUP7 ADD SLOAD SWAP5 PUSH1 0xB DUP8 ADD SLOAD SWAP7 PUSH1 0xC ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 PUSH2 0x1A0 DUP1 SWAP2 MSTORE DUP14 ADD PUSH2 0x272B SWAP2 PUSH2 0x29AE JUMP JUMPDEST DUP13 DUP2 SUB PUSH1 0x20 DUP15 ADD MSTORE PUSH2 0x273C SWAP2 PUSH2 0x29AE JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP13 ADD MSTORE DUP11 DUP2 SUB PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x2753 SWAP2 PUSH2 0x29AE JUMP JUMPDEST DUP10 DUP2 SUB PUSH1 0x80 DUP12 ADD MSTORE PUSH2 0x2764 SWAP2 PUSH2 0x29AE JUMP JUMPDEST SWAP7 PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x9 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x27CF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x255 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2827 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x2820 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2868 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2852 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2847 JUMP JUMPDEST PUSH2 0x1C0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x146B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x146B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x146B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x146B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x28F9 DUP5 PUSH2 0x2838 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2968 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2925 JUMPI JUMPDEST POP POP PUSH2 0x2923 SWAP3 POP SUB DUP4 PUSH2 0x28C4 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2950 JUMPI POP POP PUSH2 0x2923 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2915 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2938 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2923 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2915 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x299E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x298E JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x29C7 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x298B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x255 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x255 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2020 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x255 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2A65 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x28C4 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x255 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x146B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2AC5 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2AB7 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2020 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2020 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAC33FF75C19E70FE83507DB0D683FD3465C996598DC972688B7ACE676C89077B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x237 JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x237 JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xDC6246A27A928D53414CF0BBE2BFDE021E1AC737A6E0BCF9B182CDA5A9B2DCF7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x320B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x2C09 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x2C09 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xDC6246A27A928D53414CF0BBE2BFDE021E1AC737A6E0BCF9B182CDA5A9B2DCF7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x320B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2C09 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x2C09 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2DAE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2DCD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461746120686173682063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x27CF JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2E2C JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E21 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x146B JUMPI PUSH2 0x2E57 SWAP1 PUSH1 0x1 SWAP3 DUP4 DUP3 ADD DUP2 SSTORE PUSH2 0x2AF1 JUMP JUMPDEST PUSH2 0x314C JUMPI DUP3 MLOAD DUP2 SSTORE DUP2 DUP2 ADD SWAP1 PUSH1 0x20 DUP1 DUP6 ADD MLOAD SWAP2 DUP3 MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 DUP2 GT PUSH2 0x146B JUMPI DUP1 PUSH2 0x2E88 DUP4 SLOAD PUSH2 0x2838 JUMP JUMPDEST SWAP6 PUSH1 0x1F SWAP7 DUP8 DUP2 GT PUSH2 0x311E JUMPI JUMPDEST POP DUP6 SWAP1 DUP8 DUP4 GT PUSH1 0x1 EQ PUSH2 0x30BB JUMPI PUSH1 0x0 SWAP3 PUSH2 0x30B0 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP8 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP2 ADD PUSH1 0x40 DUP8 ADD MLOAD DUP1 MLOAD SWAP1 DUP7 DUP3 GT PUSH2 0x146B JUMPI PUSH2 0x2EDA DUP4 SLOAD PUSH2 0x2838 JUMP JUMPDEST DUP7 DUP2 GT PUSH2 0x3082 JUMPI JUMPDEST POP DUP5 SWAP1 DUP7 DUP4 GT PUSH1 0x1 EQ PUSH2 0x3014 JUMPI SWAP2 DUP1 PUSH1 0x4 SWAP5 SWAP3 PUSH1 0x80 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3009 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP10 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE ADD SWAP6 ADD MLOAD SWAP1 DUP2 MLOAD SWAP4 DUP5 GT PUSH2 0x146B JUMPI PUSH2 0x2F37 DUP7 SLOAD PUSH2 0x2838 JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x2FDB JUMPI JUMPDEST POP DUP1 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH2 0x2F78 JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH2 0x2F6D JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH2 0x2F5A JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH2 0x2FC1 JUMPI POP POP POP LT PUSH2 0x2FA8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2F9E JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH2 0x2F8D JUMP JUMPDEST PUSH2 0x3003 SWAP1 DUP8 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP6 DUP10 LT PUSH2 0x1462 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST CODESIZE PUSH2 0x2F3F JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2F01 JUMP JUMPDEST DUP9 SWAP3 SWAP2 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP10 DUP3 DUP3 LT PUSH2 0x306C JUMPI POP POP SWAP2 PUSH1 0x80 SWAP8 SWAP6 SWAP4 SWAP2 DUP6 PUSH1 0x4 SWAP9 SWAP7 SWAP5 LT PUSH2 0x3053 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2F15 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3046 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP14 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x3029 JUMP JUMPDEST PUSH2 0x30AA SWAP1 DUP5 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP9 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP8 LT PUSH2 0x1462 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST CODESIZE PUSH2 0x2EE2 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2EA9 JUMP JUMPDEST SWAP1 DUP10 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP10 DUP3 DUP3 LT PUSH2 0x3108 JUMPI POP POP DUP5 GT PUSH2 0x30EF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2EBD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x30E2 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP14 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0x3146 SWAP1 DUP6 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP10 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP8 LT PUSH2 0x1462 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST CODESIZE PUSH2 0x2E94 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x3173 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x318C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x11185D185CD95D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x31D1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA103230BA30B9B2BA1037BBB732B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID 0xC 0xE2 EXTCODECOPY RETURNDATACOPY CODECOPY SWAP9 XOR 0xCF 0xEE DUP2 0xA7 0xAB ADDMOD DUP1 0xF7 EQ 0xE5 RETURNDATASIZE PUSH23 0x72B08DF0FA62F2843416E1EA09A2646970667358221220 0xEE SMOD 0xB7 0xE4 CODESIZE 0xA7 0xE PUSH14 0xA39AACC537866E33701098BC7DB7 JUMPI PUSH6 0xAD942FA0BFC 0xF8 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D00000000 ","sourceMap":"231:12607:22:-:0;;;;;;;2772:10;1273:26:2;1269:95;;1297:1;231:12607:22;;2772:10;-1:-1:-1;;;;;;231:12607:22;;;;;;2772:10;-1:-1:-1;;;;;231:12607:22;;;;3052:40:2;;1297:1;3052:40;231:12607:22;419:26;;2794:42;2772:10;2794:42;:::i;:::-;;2846;2772:10;2846:42;:::i;:::-;;2898:37;2772:10;2898:37;:::i;:::-;;231:12607;2945:17;419:26;231:12607;;;;;;;;;1269:95:2;-1:-1:-1;;;1322:31:2;;1297:1;1322:31;;;231:12607:22;;;1322:31:2;231:12607:22;;;;6155:316:0;-1:-1:-1;;;;;231:12607:22;1297:1:2;231:12607:22;;;;;;;;;;1297:1:2;;231:12607:22;;;;;;;;2930:6:0;231:12607:22;;;;;;;;;;;;;;;;;;;;;;735:10:13;6346:40:0;-1:-1:-1;;;;;;;;;;;6346:40:0;;;231:12607:22;6400:11:0;:::o;6248:217::-;6442:12;;:::o;6155:316::-;-1:-1:-1;;;;;231:12607:22;-1:-1:-1;231:12607:22;;;;;;;;;;-1:-1:-1;;231:12607:22;342:31;;231:12607;;;;;;;2930:6:0;231:12607:22;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:13;6346:40:0;;;231:12607:22;6400:11:0;:::o;6248:217::-;6442:12;;;:::o;6155:316::-;-1:-1:-1;;;;;231:12607:22;-1:-1:-1;231:12607:22;;;;;;;;;;-1:-1:-1;;231:12607:22;419:26;;231:12607;;;;;;;2930:6:0;231:12607:22;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:13;6346:40:0;;;231:12607:22;6400:11:0;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":10729,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_45461":{"entryPoint":10707,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":10801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":10751,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_array_uint256_dyn":{"entryPoint":10910,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":10670,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_string_dyn":{"entryPoint":10887,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_struct_DatasetVersion_to_array_struct_DatasetVersion_storage_dyn_ptr":{"entryPoint":11832,"id":null,"parameterSlots":2,"returnSlots":0},"clear_storage_range_bytes1":{"entryPoint":11809,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_from_storage_to_memory_string":{"entryPoint":10469,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":10635,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10296,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":10436,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_45465":{"entryPoint":10354,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_45469":{"entryPoint":10382,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_45482":{"entryPoint":10409,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":11674,"id":464,"parameterSlots":0,"returnSlots":0},"fun_checkRole":{"entryPoint":11079,"id":94,"parameterSlots":1,"returnSlots":0},"fun_checkRole_45476":{"entryPoint":11021,"id":94,"parameterSlots":0,"returnSlots":0},"fun_grantRole":{"entryPoint":11278,"id":257,"parameterSlots":2,"returnSlots":1},"fun_grantRole_45477":{"entryPoint":11117,"id":257,"parameterSlots":1,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":12642,"id":2152,"parameterSlots":0,"returnSlots":0},"fun_revokeRole":{"entryPoint":11555,"id":295,"parameterSlots":2,"returnSlots":1},"fun_revokeRole_45485":{"entryPoint":11401,"id":295,"parameterSlots":1,"returnSlots":1},"increment_uint256":{"entryPoint":11794,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_03a4":{"entryPoint":12746,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0e6c":{"entryPoint":11718,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4fba":{"entryPoint":12677,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_AccessRequest_dyn":{"entryPoint":10773,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_struct_DatasetVersion_dyn":{"entryPoint":10993,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn":{"entryPoint":10969,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_t_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146127e5575080631af8e976146127a45780631cff85e11461268a578063248a9ca31461265b5780632f2ff15d1461261c57806336568abe146125d55780633ee9ac051461253157806344bc6d2514611a6e5780634b51c301146119a85780634d72cd121461192d578063529556701461190f578063668e84be146118b7578063715018a61461185e578063795d5cb7146117be5780638da5cb5b146117955780639000b3d61461172a57806391d14854146116dd5780639abd9d621461156e578063a1cd59c31461151d578063a1d534cc146111b2578063a217fddf14611196578063c0b281f214610f46578063ca2dfd0a14610edb578063ced1419814610e8e578063d13c870314610e8e578063d547741f14610e4d578063d603b28414610cdc578063dab52a76146107f1578063dd5af6cc146107b6578063dfb216aa1461075a578063e7705db614610731578063ee0042211461043b578063f1767ffd146103b3578063f2fde38b1461032a578063fe2cb4c51461025a5763fef7e61a146101ab57600080fd5b34610255576101b9366129ff565b906101c76009548210613185565b3360009081527f48b89508c52d03a056e401171466f0f1ac697802e07e33f22b572ce67f02b51260205260409020547f278259b194ae675b320344b3c4e89035d8b8a1c493c2201003b3e5a5a539eafc9060ff161561023757506000526003602052600c60406000200155600080f35b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b600080fd5b346102555760403660031901126102555760043560243580151590818103610255576102896009548410613185565b3360009081527fdc6246a27a928d53414cf0bbe2bfde021e1ac737a6e0bcf9b182cda5a9b2dcf7602052604090205460008051602061320b8339815191529060ff161561023757507f1a4001decba2bf82b6e04b601c884d0afd30781e54b962a9b9fc5ab6f3ca375b91610321602092856000526003845260086040600020019061ff00825491151560081b169061ff001916179055565b604051908152a2005b34610255576020366003190112610255576103436129e9565b61034b612d9a565b6001600160a01b0390811690811561039a57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3461025557602080600319360112610255576001600160a01b036103d56129e9565b1660005260078152604060002090604051908181845491828152019360005281600020916000905b8282106104245761042085610414818903826128c4565b60405191829182612a9e565b0390f35b8354865294850194600193840193909101906103fd565b346102555760203660031901126102555760006101a060405161045d81612872565b6060815260606020820152826040820152606080820152606060808201528260a08201528260c08201528260e082015282610100820152826101208201528261014082015260606101608201528261018082015201526009546104c4600435918210613185565b60005260036020526040600020604051906104de82612872565b6104e7816128e5565b82526104f5600182016128e5565b602083015260028101546001600160a01b03166040830152610519600382016128e5565b606083015261052a600482016128e5565b6080830152600581015460a0830152600681015460c0830152600781015460e083015260ff6008820154818116151561010085015260081c1615156101208301526009810154610140830152600a81015461058481612a87565b9061059260405192836128c4565b80825260208201600a840160005260206000206000915b8383106107145786600c8787610160840152600b81015461018084015201546101a08201526040516020815261064d61063761060c6105f685516101c060208701526101e08601906129ae565b6020860151858203601f190160408701526129ae565b60408501516001600160a01b0316606085810191909152850151848203601f190160808601526129ae565b6080840151838203601f190160a08501526129ae565b60a083015160c083015260c083015160e083015260e08301516101008301526101008301511515610120830152610120830151151561014083015261014083015161016083015261016083015190601f1983820301610180840152815180825260208201916020808360051b8301019401926000915b8383106106e7578680876101a08b6101808101518285015201516101c08301520390f35b9091929394602080610705600193601f1986820301875289516129ae565b970193019301919392906106c3565b600160208192610723856128e5565b8152019201920191906105a9565b3461025557600036600319011261025557602060405160008051602061320b8339815191528152f35b34610255576020366003190112610255576004356001600160401b038111610255576107a3602061079081933690600401612a31565b816040519382858094519384920161298b565b8101600881520301902054604051908152f35b346102555760003660031901126102555760206040517f278259b194ae675b320344b3c4e89035d8b8a1c493c2201003b3e5a5a539eafc8152f35b6040366003190112610255576001600160401b03602480358281116102555761081e903690600401612a31565b61082d60095460043510613185565b610835613162565b6004356000526003602052604060002091600460205260406000203360005260205260ff60406000205416610ca357600283019260018060a01b0394858554163314610c5f57600882015460ff168080610c52575b15610963575050600991925001543410610928575060043560005260046020526040600020336000526020526040600020600160ff198254161790556000808080858554168190341561091e575b3491f115610912575416336004357f97a8264d9d0b9e21370349f9b49be012a5d1e27829879df8ba166dba48f898c6600080a45b60018055005b6040513d6000823e3d90fd5b6108fc91506108d8565b60649060146040519162461bcd60e51b83526020600484015282015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152fd5b909181610c45575b50156109cb5750505060043560005260046020526040600020336000526020526040600020600160ff198254161790555416336004357f97a8264d9d0b9e21370349f9b49be012a5d1e27829879df8ba166dba48f898c6600080a461090c565b90919392506004356000526005602052604060002090604051916109ee836128a9565b3383526020830160043581526040840190878252426060860152600060808601526001928360a0870152600060c0870152805490600160401b821015610c305790610a3d918582018155612a15565b979097610c1b578551166001600160601b0360a01b885416178755518287015551938451928311610c075750610a766002860154612838565b601f8111610bc7575b50602093601f8311600114610b53579180809260059660c09695600094610b48575b50501b916000199060031b1c19161760028501555b60608101516003850155610afe60048501610ae360808401511515829060ff801983541691151516179055565b60a0830151815461ff00191690151560081b61ff0016179055565b015191015560405190602082527fa964b0d5b0ae345368407279f158ce01fbdafd867ce29bc1a4cf30fef68fdd8c339280610b406004359460208301906129ae565b0390a361090c565b015192508980610aa1565b9092936002860160005260206000209160005b601f1985168110610bb1575091839160c0959360059795601f19811610610b98575b505050811b016002850155610ab6565b015160001960f88460031b161c19169055878080610b88565b8183015184559285019260209283019201610b66565b610bf790600287016000526020600020601f850160051c81019160208610610bfd575b601f0160051c0190612e21565b86610a7f565b9091508190610bea565b634e487b7160e01b60009081526041600452fd5b86634e487b7160e01b60005260006004526000fd5b87634e487b7160e01b60005260416004526000fd5b600991500154158661096b565b506009830154151561088a565b60405162461bcd60e51b8152602060048201526018818501527f4f776e657220616c7265616479206861732061636365737300000000000000006044820152606490fd5b60649060126040519162461bcd60e51b83526020600484015282015271416c7265616479206861732061636365737360701b6044820152fd5b3461025557606036600319011261025557600435610cf86129d3565b604435610d086009548410613185565b826000526020906003825260018060a01b0391610d30836002604060002001541633146131ca565b846000526004815282604060002094169384600052815260ff60406000205416610e09579060058492866000526004815260406000208460005281526040600020600160ff19825416179055866000525260406000209081548110610dba575b3383877f97a8264d9d0b9e21370349f9b49be012a5d1e27829879df8ba166dba48f898c6600080a4005b610dc391612a15565b50918254161480610df8575b610ddc575b818180610d90565b60048101600161ffff1982541617905560054291015582610dd4565b5060ff600482015460081c16610dcf565b6064906040519062461bcd60e51b82526004820152601760248201527f5573657220616c726561647920686173206163636573730000000000000000006044820152fd5b3461025557604036600319011261025557610e8c600435610e6c6129d3565b90806000526002602052610e87600160406000200154612b47565b612d23565b005b3461025557604036600319011261025557610ea76129d3565b600435600052600460205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b3461025557602036600319011261025557610e8c610ef76129e9565b610eff612b0d565b60008051602061320b83398151915260005260026020527fdc6246a27a928d53414cf0bbe2bfde021e1ac737a6e0bcf9b182cda5a9b2dcf854610f4190612b47565b612c89565b346102555760208060031936011261025557600435610f686009548210613185565b8060005260039081835260018060a01b03916002918383604060002001541633148015611155575b1561110157918492600052600590818452604060002092835490610fb382612a87565b92610fc160405194856128c4565b82845286840191829660005287600020916000935b85851061108a57505050505050604051938085019181865251809252604082818701941b86010193926000965b8388106110105786860387f35b90919293948380600192603f198a8203018652885190858251168152828201518382015261104d604083015160e0604084015260e08301906129ae565b916060808201519083015260808082015115159083015260a08082015115159083015260c080910151910152970193019701969093929193611003565b60068a6001928d8b9e9d9a9b604051916110a3836128a9565b895416825285890154848301526110bb878a016128e5565b6040830152878901546060830152600489015460ff908181161515608085015260081c16151560a083015288015460c08201528152019401940193929996959899610fd6565b60405162461bcd60e51b815260048101869052602660248201527f4e6f7420617574686f72697a656420746f20766965772061636365737320726560448201526571756573747360d01b6064820152608490fd5b507f278259b194ae675b320344b3c4e89035d8b8a1c493c2201003b3e5a5a539eafc600052828552604060002033600052855260ff60406000205416610f90565b3461025557600036600319011261025557602060405160008152f35b34610255576080366003190112610255576001600160401b03600435602435828111610255576111e6903690600401612a31565b604435838111610255576111fe903690600401612a31565b9060643584811161025557611217903690600401612a31565b916112256009548510613185565b8360005260039260209380855261124d60018060a01b036002604060002001541633146131ca565b61125984511515612dc6565b8560005280855260406000209080820197855198818a1161146b5761127e8154612838565b99601f9a8b81116114ef575b5080898c821160011461148c57600091611481575b508160011b9160001990861b1c19161790555b6004830191855191821161146b576112ca8354612838565b8a8111611433575b508799821160011461139f579261138f95949282600793611377967f999e6a948f9641ed693b4d88ba4178715d7e5067b92a9e4d44cc5ce0b0a31e5b9c9d600092611394575b508260011b92600019911b1c19161790555b426006820155019261133c8454612e12565b9182855589600052600688526040600020916040519361135b8561288e565b8452878985015260408401524260608401526080830152612e38565b549160408051948594855284015260408301906129ae565b0390a2005b89015191508e611318565b601f1982169983600052886000209a60005b81811061141c5750837f999e6a948f9641ed693b4d88ba4178715d7e5067b92a9e4d44cc5ce0b0a31e5b9b9c611377979461138f9a99979460079760019510611402575b505050811b01905561132a565b8a01519060f884600019921b161c191690558d80806113f5565b919b8a600181928f8c01518155019d0192016113b1565b61145c9084600052896000208c80860160051c8201928c8710611462575b0160051c0190612e21565b8a6112d2565b92508192611451565b634e487b7160e01b600052604160045260246000fd5b90508801518c61129f565b60008481528b81209250601f198416905b8c8c8383106114da5750505090836001949392106114c2575b5050811b0190556112b2565b8a015160001983881b60f8161c191690558c806114b6565b8401518555600190940193928301920161149d565b61151790836000528a6000208d80850160051c8201928d8610611462570160051c0190612e21565b8b61128a565b3461025557602036600319011261025557600435600a5481101561025557602090600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80154604051908152f35b3461025557602080600319360112610255576004356115906009548210613185565b600052600681526040600020908154916115a983612a87565b926115b760405194856128c4565b8084528284018092600052836000206000915b8383106116785750505050604051918083019381845251809452604083019360408160051b85010192916000955b8287106116055785850386f35b909192938280611668600193603f198a820301865288518051825261164b6116398583015160a080888701528501906129ae565b604083015184820360408601526129ae565b9160608083015190820152608080920151918184039101526129ae565b96019201960195929190926115f8565b60058660019260409998995161168d8161288e565b8554815261169c8587016128e5565b838201526116ac600287016128e5565b6040820152600386015460608201526116c7600487016128e5565b60808201528152019201920191909594956115ca565b34610255576040366003190112610255576116f66129d3565b600435600052600260205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b3461025557602036600319011261025557610e8c6117466129e9565b61174e612b0d565b60008051602061320b83398151915260005260026020527fdc6246a27a928d53414cf0bbe2bfde021e1ac737a6e0bcf9b182cda5a9b2dcf85461179090612b47565b612b6d565b34610255576000366003190112610255576000546040516001600160a01b039091168152602090f35b34610255576117cc366129ff565b9060005260066020526040600020908154811015610255576117ed91612af1565b5080546104206117ff600184016128e5565b9261180c600282016128e5565b61184b6118206004600385015494016128e5565b9161183d604051978897885260a0602089015260a08801906129ae565b9086820360408801526129ae565b91606085015283820360808501526129ae565b3461025557600036600319011261025557611877612d9a565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610255576040366003190112610255576118d06129e9565b6001600160a01b03166000908152600760205260409020805460243591908210156102555760209161190191612ad9565b90546040519160031b1c8152f35b34610255576000366003190112610255576020600954604051908152f35b346102555760003660031901126102555760405180600a5491828152602080910192600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8916000905b8282106119915761042085610414818903826128c4565b83548652948501946001938401939091019061197a565b34610255576020366003190112610255576004356119c96009548210613185565b80600052600460205260406000203360005260205260ff6040600020541615611a3257806000526003602052600b604060002001611a078154612e12565b905533907ff8d2db7c7db2fe44e1064c72e76721c532922d180fe69f61b8775ce58e2e6c29600080a3005b60405162461bcd60e51b8152602060048201526014602482015273139bc81858d8d95cdcc81d1bc819185d185cd95d60621b6044820152606490fd5b346102555760e0366003190112610255576004356001600160401b03811161025557611a9e903690600401612a31565b6024356001600160401b03811161025557611abd903690600401612a31565b6044356001600160401b03811161025557611adc903690600401612a31565b6064356001600160401b03811161025557611afb903690600401612a31565b6084359283151584036102555760c4356001600160401b0381116102555736602382011215610255578060040135611b3281612a87565b91611b4060405193846128c4565b8183526024602084019260051b820101903682116102555760248101925b8284106125035750505050611b71613162565b8551156124c757611b8484511515612dc6565b6040516020818851611b998183858d0161298b565b81016008815203019020546124825760095494611bb586612e12565b60095560405192611bc584612872565b87845260208401523360408401528460608401528360808401524260a08401524260c0840152600160e08401521515610100830152600061012083015260a435610140830152610160820152600061018082015260006101a082015283600052600360205260406000209080518051906001600160401b03821161146b578190611c4f8554612838565b601f8111612450575b50602090601f83116001146123e4576000926123d9575b50508160011b916000199060031b1c19161782555b60208101518051906001600160401b03821161146b578190611ca96001860154612838565b601f81116123a4575b50602090601f831160011461233257600092612327575b50508160011b916000199060031b1c19161760018301555b6002820160018060a01b036040830151166001600160601b0360a01b82541617905560608101518051906001600160401b03821161146b578190611d286003860154612838565b601f81116122f2575b50602090601f831160011461228057600092612275575b50508160011b916000199060031b1c19161760038301555b60808101518051906001600160401b03821161146b578190611d856004860154612838565b601f8111612240575b50602090601f83116001146121ce576000926121c3575b50508160011b916000199060031b1c19161760048301555b60a0810151600583015560c0810151600683015560e08101516007830155611e1b60088301611dff6101008401511515829060ff801983541691151516179055565b610120830151815461ff00191690151560081b61ff0016179055565b6101408101516009830155610160810151805190600160401b821161146b57600a84015482600a86015580831061214b575b5060200190600a84016000526020600020916000905b82821061203657505050506101a081610180600c930151600b850155015191015582600052600660205260406000209060405190611ea08261288e565b6001825283602083015260408201524260608201526040519160408301928084106001600160401b0385111761146b57611efd93604052600f81526e24b734ba34b0b6103b32b939b4b7b760891b60208201526080830152612e38565b816040516020818651611f138183858b0161298b565b810160088152030190205533600052600760205260406000208054600160401b81101561146b57611f4991600182018155612ad9565b81549060031b9084821b91600019901b1916179055600a54600160401b81101561146b576001810180600a55811015612020577f6030261238b75e373368746637a663b0f53d82d9fdfb5d33a015c036f8fce1746120036020958580947fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155836000526004875260406000203360005287526040600020600160ff198254161790556120116040519283926040845260408401906129ae565b8281038984015233966129ae565b0390a360018055604051908152f35b634e487b7160e01b600052603260045260246000fd5b80518051906001600160401b03821161146b576120538654612838565b601f8111612119575b50602090601f83116001146120a957928260019493602093869560009261209e575b5050600019600383901b1c191690841b1787555b01940191019092611e63565b015190508f8061207e565b908660005260206000209160005b601f1985168110612101575083602093600196938796938794601f198116106120e8575b505050811b018755612092565b015160001960f88460031b161c191690558f80806120db565b919260206001819286850151815501940192016120b7565b61214590876000526020600020601f850160051c81019160208610610bfd57601f0160051c0190612e21565b8c61205c565b600a85016000526020600020908382015b818301811061216c575050611e4d565b8061217960019254612838565b80612186575b500161215c565b601f8111831461219c5750600081555b8c61217f565b6000908282526121ba601f60208420920160051c8201858301612e21565b81835555612196565b015190508880611da5565b9250600485016000526020600020906000935b601f1984168510612225576001945083601f1981161061220c575b505050811b016004830155611dbd565b015160001960f88460031b161c191690558880806121fc565b818101518355602094850194600190930192909101906121e1565b61226f90600487016000526020600020601f850160051c81019160208610610bfd57601f0160051c0190612e21565b89611d8e565b015190508880611d48565b9250600385016000526020600020906000935b601f19841685106122d7576001945083601f198116106122be575b505050811b016003830155611d60565b015160001960f88460031b161c191690558880806122ae565b81810151835560209485019460019093019290910190612293565b61232190600387016000526020600020601f850160051c81019160208610610bfd57601f0160051c0190612e21565b89611d31565b015190508880611cc9565b9250600185016000526020600020906000935b601f1984168510612389576001945083601f19811610612370575b505050811b016001830155611ce1565b015160001960f88460031b161c19169055888080612360565b81810151835560209485019460019093019290910190612345565b6123d390600187016000526020600020601f850160051c81019160208610610bfd57601f0160051c0190612e21565b89611cb2565b015190508880611c6f565b9250846000526020600020906000935b601f1984168510612435576001945083601f1981161061241c575b505050811b018255611c84565b015160001960f88460031b161c1916905588808061240f565b818101518355602094850194600190930192909101906123f4565b61247c90866000526020600020601f850160051c81019160208610610bfd57601f0160051c0190612e21565b89611c58565b60405162461bcd60e51b815260206004820152601b60248201527f44617461736574206e616d6520616c72656164792065786973747300000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e616d652063616e6e6f7420626520656d70747960601b6044820152606490fd5b6001600160401b0384351161025557602080916125263660248835870101612a31565b815201930192611b5e565b346102555761253f366129ff565b90600052600560205260406000209081548110156102555761256091612a15565b5060018060a01b0381541660018201549161257d600282016128e5565b60ff6003830154926125b160056004830154920154936040519788978852602088015260e0604088015260e08701906129ae565b9360608601528181161515608086015260081c16151560a084015260c08301520390f35b34610255576040366003190112610255576125ee6129d3565b336001600160a01b0382160361260a57610e8c90600435612d23565b60405163334bd91960e11b8152600490fd5b3461025557604036600319011261025557610e8c60043561263b6129d3565b90806000526002602052612656600160406000200154612b47565b612c0e565b346102555760203660031901126102555760043560005260026020526020600160406000200154604051908152f35b3461025557602036600319011261025557600435600052600360205260406000206126b4816128e5565b6126c0600183016128e5565b60028301549092906001600160a01b03166126dd600383016128e5565b916126ea600482016128e5565b926005820154936006830154600784015490600885015492600986015494600b87015496600c0154976040519b8c9b8c6101a08091528d0161272b916129ae565b8c810360208e015261273c916129ae565b9060408c01528a810360608c0152612753916129ae565b89810360808b0152612764916129ae565b9660a089015260c088015260e087015260ff8116151561010087015260081c60ff1615156101208601526101408501526101608401526101808301520390f35b346102555760003660031901126102555760095460001981019081116127cf57602090604051908152f35b634e487b7160e01b600052601160045260246000fd5b34610255576020366003190112610255576004359063ffffffff60e01b821680920361025557602091637965db0b60e01b8114908115612827575b5015158152f35b6301ffc9a760e01b14905083612820565b90600182811c92168015612868575b602083101461285257565b634e487b7160e01b600052602260045260246000fd5b91607f1691612847565b6101c081019081106001600160401b0382111761146b57604052565b60a081019081106001600160401b0382111761146b57604052565b60e081019081106001600160401b0382111761146b57604052565b90601f801991011681019081106001600160401b0382111761146b57604052565b90604051918260008254926128f984612838565b9081845260019485811690816000146129685750600114612925575b5050612923925003836128c4565b565b9093915060005260209081600020936000915b81831061295057505061292393508201013880612915565b85548884018501529485019487945091830191612938565b91505061292394506020925060ff191682840152151560051b8201013880612915565b60005b83811061299e5750506000910152565b818101518382015260200161298e565b906020916129c78151809281855285808601910161298b565b601f01601f1916010190565b602435906001600160a01b038216820361025557565b600435906001600160a01b038216820361025557565b6040906003190112610255576004359060243590565b8054821015612020576000526006602060002091020190600090565b81601f82011215610255578035906001600160401b03821161146b5760405192612a65601f8401601f1916602001856128c4565b8284526020838301011161025557816000926020809301838601378301015290565b6001600160401b03811161146b5760051b60200190565b6020908160408183019282815285518094520193019160005b828110612ac5575050505090565b835185529381019392810192600101612ab7565b80548210156120205760005260206000200190600090565b8054821015612020576000526005602060002091020190600090565b3360009081527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b602052604081205460ff16156102375750565b80600052600260205260406000203360005260205260ff60406000205416156102375750565b6001600160a01b031660008181527fdc6246a27a928d53414cf0bbe2bfde021e1ac737a6e0bcf9b182cda5a9b2dcf7602052604081205490919060008051602061320b8339815191529060ff16612c095780835260026020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b906000918083526002602052604083209160018060a01b03169182845260205260ff60408420541615600014612c095780835260026020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b6001600160a01b031660008181527fdc6246a27a928d53414cf0bbe2bfde021e1ac737a6e0bcf9b182cda5a9b2dcf7602052604081205490919060008051602061320b8339815191529060ff1615612c09578083526002602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b906000918083526002602052604083209160018060a01b03169182845260205260ff604084205416600014612c09578083526002602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b6000546001600160a01b03163303612dae57565b60405163118cdaa760e01b8152336004820152602490fd5b15612dcd57565b60405162461bcd60e51b815260206004820152601960248201527f4461746120686173682063616e6e6f7420626520656d707479000000000000006044820152606490fd5b60001981146127cf5760010190565b818110612e2c575050565b60008155600101612e21565b8054600160401b81101561146b57612e57906001928382018155612af1565b61314c578251815581810190602080850151918251936001600160401b039485811161146b5780612e888354612838565b95601f9687811161311e575b5085908783116001146130bb576000926130b0575b5050600019600383901b1c191690871b1790555b60028101604087015180519086821161146b57612eda8354612838565b868111613082575b5084908683116001146130145791806004949260809694600092613009575b5050600019600383901b1c191690891b1790555b606088015160038201550195015190815193841161146b57612f378654612838565b838111612fdb575b5080928411600114612f785750928293918392600094612f6d575b50501b916000199060031b1c1916179055565b015192503880612f5a565b919083601f1981168760005284600020946000905b88838310612fc15750505010612fa8575b505050811b019055565b015160001960f88460031b161c19169055388080612f9e565b858701518855909601959485019487935090810190612f8d565b6130039087600052826000208580880160051c820192858910611462570160051c0190612e21565b38612f3f565b015190503880612f01565b889291601f1983169185600052876000209260005b8982821061306c5750509160809795939185600498969410613053575b505050811b019055612f15565b015160001960f88460031b161c19169055388080613046565b8385015186558d97909501949384019301613029565b6130aa9084600052866000208880860160051c820192898710611462570160051c0190612e21565b38612ee2565b015190503880612ea9565b90899350601f1983169185600052876000209260005b8982821061310857505084116130ef575b505050811b019055612ebd565b015160001960f88460031b161c191690553880806130e2565b8385015186558d979095019493840193016130d1565b6131469085600052876000208980860160051c8201928a8710611462570160051c0190612e21565b38612e94565b634e487b7160e01b600052600060045260246000fd5b600260015414613173576002600155565b604051633ee5aeb560e01b8152600490fd5b1561318c57565b60405162461bcd60e51b815260206004820152601660248201527511185d185cd95d08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b156131d157565b60405162461bcd60e51b81526020600482015260116024820152702737ba103230ba30b9b2ba1037bbb732b960791b6044820152606490fdfe0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09a2646970667358221220ee07b7e438a70e6da39aacc537866e33701098bc7db757650ad942fa0bfcf85b64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x27E5 JUMPI POP DUP1 PUSH4 0x1AF8E976 EQ PUSH2 0x27A4 JUMPI DUP1 PUSH4 0x1CFF85E1 EQ PUSH2 0x268A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x265B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x261C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x25D5 JUMPI DUP1 PUSH4 0x3EE9AC05 EQ PUSH2 0x2531 JUMPI DUP1 PUSH4 0x44BC6D25 EQ PUSH2 0x1A6E JUMPI DUP1 PUSH4 0x4B51C301 EQ PUSH2 0x19A8 JUMPI DUP1 PUSH4 0x4D72CD12 EQ PUSH2 0x192D JUMPI DUP1 PUSH4 0x52955670 EQ PUSH2 0x190F JUMPI DUP1 PUSH4 0x668E84BE EQ PUSH2 0x18B7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x185E JUMPI DUP1 PUSH4 0x795D5CB7 EQ PUSH2 0x17BE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1795 JUMPI DUP1 PUSH4 0x9000B3D6 EQ PUSH2 0x172A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x16DD JUMPI DUP1 PUSH4 0x9ABD9D62 EQ PUSH2 0x156E JUMPI DUP1 PUSH4 0xA1CD59C3 EQ PUSH2 0x151D JUMPI DUP1 PUSH4 0xA1D534CC EQ PUSH2 0x11B2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1196 JUMPI DUP1 PUSH4 0xC0B281F2 EQ PUSH2 0xF46 JUMPI DUP1 PUSH4 0xCA2DFD0A EQ PUSH2 0xEDB JUMPI DUP1 PUSH4 0xCED14198 EQ PUSH2 0xE8E JUMPI DUP1 PUSH4 0xD13C8703 EQ PUSH2 0xE8E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xE4D JUMPI DUP1 PUSH4 0xD603B284 EQ PUSH2 0xCDC JUMPI DUP1 PUSH4 0xDAB52A76 EQ PUSH2 0x7F1 JUMPI DUP1 PUSH4 0xDD5AF6CC EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xDFB216AA EQ PUSH2 0x75A JUMPI DUP1 PUSH4 0xE7705DB6 EQ PUSH2 0x731 JUMPI DUP1 PUSH4 0xEE004221 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0xF1767FFD EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xFE2CB4C5 EQ PUSH2 0x25A JUMPI PUSH4 0xFEF7E61A EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH2 0x1B9 CALLDATASIZE PUSH2 0x29FF JUMP JUMPDEST SWAP1 PUSH2 0x1C7 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x3185 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x48B89508C52D03A056E401171466F0F1AC697802E07E33F22B572CE67F02B512 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x278259B194AE675B320344B3C4E89035D8B8A1C493C2201003B3E5A5A539EAFC SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x237 JUMPI POP PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO SWAP1 DUP2 DUP2 SUB PUSH2 0x255 JUMPI PUSH2 0x289 PUSH1 0x9 SLOAD DUP5 LT PUSH2 0x3185 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xDC6246A27A928D53414CF0BBE2BFDE021E1AC737A6E0BCF9B182CDA5A9B2DCF7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x320B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x237 JUMPI POP PUSH32 0x1A4001DECBA2BF82B6E04B601C884D0AFD30781E54B962A9B9FC5AB6F3CA375B SWAP2 PUSH2 0x321 PUSH1 0x20 SWAP3 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 DUP5 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH2 0xFF00 DUP3 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0x343 PUSH2 0x29E9 JUMP JUMPDEST PUSH2 0x34B PUSH2 0x2D9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x255 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3D5 PUSH2 0x29E9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x424 JUMPI PUSH2 0x420 DUP6 PUSH2 0x414 DUP2 DUP10 SUB DUP3 PUSH2 0x28C4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A9E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3FD JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x0 PUSH2 0x1A0 PUSH1 0x40 MLOAD PUSH2 0x45D DUP2 PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x9 SLOAD PUSH2 0x4C4 PUSH1 0x4 CALLDATALOAD SWAP2 DUP3 LT PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4DE DUP3 PUSH2 0x2872 JUMP JUMPDEST PUSH2 0x4E7 DUP2 PUSH2 0x28E5 JUMP JUMPDEST DUP3 MSTORE PUSH2 0x4F5 PUSH1 0x1 DUP3 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x519 PUSH1 0x3 DUP3 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x52A PUSH1 0x4 DUP3 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x8 DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x584 DUP2 PUSH2 0x2A87 JUMP JUMPDEST SWAP1 PUSH2 0x592 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x28C4 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0xA DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x714 JUMPI DUP7 PUSH1 0xC DUP8 DUP8 PUSH2 0x160 DUP5 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x180 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x1A0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH2 0x64D PUSH2 0x637 PUSH2 0x60C PUSH2 0x5F6 DUP6 MLOAD PUSH2 0x1C0 PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x1E0 DUP7 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x100 DUP4 ADD MLOAD ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x120 DUP4 ADD MLOAD ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x160 DUP4 ADD MLOAD SWAP1 PUSH1 0x1F NOT DUP4 DUP3 SUB ADD PUSH2 0x180 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x6E7 JUMPI DUP7 DUP1 DUP8 PUSH2 0x1A0 DUP12 PUSH2 0x180 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x1C0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x705 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x29AE JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0x723 DUP6 PUSH2 0x28E5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x5A9 JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x320B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x7A3 PUSH1 0x20 PUSH2 0x790 DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x298B JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x278259B194AE675B320344B3C4E89035D8B8A1C493C2201003B3E5A5A539EAFC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x81E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x82D PUSH1 0x9 SLOAD PUSH1 0x4 CALLDATALOAD LT PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x835 PUSH2 0x3162 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xCA3 JUMPI PUSH1 0x2 DUP4 ADD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 DUP6 SLOAD AND CALLER EQ PUSH2 0xC5F JUMPI PUSH1 0x8 DUP3 ADD SLOAD PUSH1 0xFF AND DUP1 DUP1 PUSH2 0xC52 JUMPI JUMPDEST ISZERO PUSH2 0x963 JUMPI POP POP PUSH1 0x9 SWAP2 SWAP3 POP ADD SLOAD CALLVALUE LT PUSH2 0x928 JUMPI POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 DUP1 DUP1 DUP6 DUP6 SLOAD AND DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0x91E JUMPI JUMPDEST CALLVALUE SWAP2 CALL ISZERO PUSH2 0x912 JUMPI SLOAD AND CALLER PUSH1 0x4 CALLDATALOAD PUSH32 0x97A8264D9D0B9E21370349F9B49BE012A5D1E27829879DF8BA166DBA48F898C6 PUSH1 0x0 DUP1 LOG4 JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x14 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 DUP2 PUSH2 0xC45 JUMPI JUMPDEST POP ISZERO PUSH2 0x9CB JUMPI POP POP POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE SLOAD AND CALLER PUSH1 0x4 CALLDATALOAD PUSH32 0x97A8264D9D0B9E21370349F9B49BE012A5D1E27829879DF8BA166DBA48F898C6 PUSH1 0x0 DUP1 LOG4 PUSH2 0x90C JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP3 POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x9EE DUP4 PUSH2 0x28A9 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 DUP8 DUP3 MSTORE TIMESTAMP PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 SWAP3 DUP4 PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP8 ADD MSTORE DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xC30 JUMPI SWAP1 PUSH2 0xA3D SWAP2 DUP6 DUP3 ADD DUP2 SSTORE PUSH2 0x2A15 JUMP JUMPDEST SWAP8 SWAP1 SWAP8 PUSH2 0xC1B JUMPI DUP6 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP9 SLOAD AND OR DUP8 SSTORE MLOAD DUP3 DUP8 ADD SSTORE MLOAD SWAP4 DUP5 MLOAD SWAP3 DUP4 GT PUSH2 0xC07 JUMPI POP PUSH2 0xA76 PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xBC7 JUMPI JUMPDEST POP PUSH1 0x20 SWAP4 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xB53 JUMPI SWAP2 DUP1 DUP1 SWAP3 PUSH1 0x5 SWAP7 PUSH1 0xC0 SWAP7 SWAP6 PUSH1 0x0 SWAP5 PUSH2 0xB48 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP6 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0xAFE PUSH1 0x4 DUP6 ADD PUSH2 0xAE3 PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 MSTORE PUSH32 0xA964B0D5B0AE345368407279F158CE01FBDAFD867CE29BC1A4CF30FEF68FDD8C CALLER SWAP3 DUP1 PUSH2 0xB40 PUSH1 0x4 CALLDATALOAD SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x90C JUMP JUMPDEST ADD MLOAD SWAP3 POP DUP10 DUP1 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 SWAP3 SWAP4 PUSH1 0x2 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xBB1 JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0xC0 SWAP6 SWAP4 PUSH1 0x5 SWAP8 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xB98 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0xAB6 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0xB88 JUMP JUMPDEST DUP2 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP6 ADD SWAP3 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xB66 JUMP JUMPDEST PUSH2 0xBF7 SWAP1 PUSH1 0x2 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBFD JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP7 PUSH2 0xA7F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 SWAP2 POP ADD SLOAD ISZERO DUP7 PUSH2 0x96B JUMP JUMPDEST POP PUSH1 0x9 DUP4 ADD SLOAD ISZERO ISZERO PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 DUP2 DUP6 ADD MSTORE PUSH32 0x4F776E657220616C726561647920686173206163636573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x12 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH18 0x416C72656164792068617320616363657373 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCF8 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0xD08 PUSH1 0x9 SLOAD DUP5 LT PUSH2 0x3185 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xD30 DUP4 PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0x31CA JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 AND SWAP4 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xE09 JUMPI SWAP1 PUSH1 0x5 DUP5 SWAP3 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP7 PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT PUSH2 0xDBA JUMPI JUMPDEST CALLER DUP4 DUP8 PUSH32 0x97A8264D9D0B9E21370349F9B49BE012A5D1E27829879DF8BA166DBA48F898C6 PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST PUSH2 0xDC3 SWAP2 PUSH2 0x2A15 JUMP JUMPDEST POP SWAP2 DUP3 SLOAD AND EQ DUP1 PUSH2 0xDF8 JUMPI JUMPDEST PUSH2 0xDDC JUMPI JUMPDEST DUP2 DUP2 DUP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD PUSH1 0x1 PUSH2 0xFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x5 TIMESTAMP SWAP2 ADD SSTORE DUP3 PUSH2 0xDD4 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x8 SHR AND PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C72656164792068617320616363657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0xE8C PUSH1 0x4 CALLDATALOAD PUSH2 0xE6C PUSH2 0x29D3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xE87 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2B47 JUMP JUMPDEST PUSH2 0x2D23 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0xEA7 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0xE8C PUSH2 0xEF7 PUSH2 0x29E9 JUMP JUMPDEST PUSH2 0xEFF PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x320B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH32 0xDC6246A27A928D53414CF0BBE2BFDE021E1AC737A6E0BCF9B182CDA5A9B2DCF8 SLOAD PUSH2 0xF41 SWAP1 PUSH2 0x2B47 JUMP JUMPDEST PUSH2 0x2C89 JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xF68 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x3185 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 SWAP1 DUP2 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x2 SWAP2 DUP4 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1155 JUMPI JUMPDEST ISZERO PUSH2 0x1101 JUMPI SWAP2 DUP5 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x5 SWAP1 DUP2 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD SWAP1 PUSH2 0xFB3 DUP3 PUSH2 0x2A87 JUMP JUMPDEST SWAP3 PUSH2 0xFC1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x28C4 JUMP JUMPDEST DUP3 DUP5 MSTORE DUP7 DUP5 ADD SWAP2 DUP3 SWAP7 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x108A JUMPI POP POP POP POP POP POP PUSH1 0x40 MLOAD SWAP4 DUP1 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP3 DUP2 DUP8 ADD SWAP5 SHL DUP7 ADD ADD SWAP4 SWAP3 PUSH1 0x0 SWAP7 JUMPDEST DUP4 DUP9 LT PUSH2 0x1010 JUMPI DUP7 DUP7 SUB DUP8 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 DUP4 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD SWAP1 DUP6 DUP3 MLOAD AND DUP2 MSTORE DUP3 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH2 0x104D PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0xE0 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH1 0xC0 DUP1 SWAP2 ADD MLOAD SWAP2 ADD MSTORE SWAP8 ADD SWAP4 ADD SWAP8 ADD SWAP7 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x6 DUP11 PUSH1 0x1 SWAP3 DUP14 DUP12 SWAP15 SWAP14 SWAP11 SWAP12 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x10A3 DUP4 PUSH2 0x28A9 JUMP JUMPDEST DUP10 SLOAD AND DUP3 MSTORE DUP6 DUP10 ADD SLOAD DUP5 DUP4 ADD MSTORE PUSH2 0x10BB DUP8 DUP11 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE DUP8 DUP10 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP10 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 DUP2 AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE DUP9 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP5 ADD SWAP5 ADD SWAP4 SWAP3 SWAP10 SWAP7 SWAP6 SWAP9 SWAP10 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F207669657720616363657373207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x717565737473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH32 0x278259B194AE675B320344B3C4E89035D8B8A1C493C2201003B3E5A5A539EAFC PUSH1 0x0 MSTORE DUP3 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xF90 JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x11E6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x11FE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x1217 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST SWAP2 PUSH2 0x1225 PUSH1 0x9 SLOAD DUP6 LT PUSH2 0x3185 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 SWAP3 PUSH1 0x20 SWAP4 DUP1 DUP6 MSTORE PUSH2 0x124D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0x31CA JUMP JUMPDEST PUSH2 0x1259 DUP5 MLOAD ISZERO ISZERO PUSH2 0x2DC6 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP1 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 DUP3 ADD SWAP8 DUP6 MLOAD SWAP9 DUP2 DUP11 GT PUSH2 0x146B JUMPI PUSH2 0x127E DUP2 SLOAD PUSH2 0x2838 JUMP JUMPDEST SWAP10 PUSH1 0x1F SWAP11 DUP12 DUP2 GT PUSH2 0x14EF JUMPI JUMPDEST POP DUP1 DUP10 DUP13 DUP3 GT PUSH1 0x1 EQ PUSH2 0x148C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1481 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP7 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 DUP4 ADD SWAP2 DUP6 MLOAD SWAP2 DUP3 GT PUSH2 0x146B JUMPI PUSH2 0x12CA DUP4 SLOAD PUSH2 0x2838 JUMP JUMPDEST DUP11 DUP2 GT PUSH2 0x1433 JUMPI JUMPDEST POP DUP8 SWAP10 DUP3 GT PUSH1 0x1 EQ PUSH2 0x139F JUMPI SWAP3 PUSH2 0x138F SWAP6 SWAP5 SWAP3 DUP3 PUSH1 0x7 SWAP4 PUSH2 0x1377 SWAP7 PUSH32 0x999E6A948F9641ED693B4D88BA4178715D7E5067B92A9E4D44CC5CE0B0A31E5B SWAP13 SWAP14 PUSH1 0x0 SWAP3 PUSH2 0x1394 JUMPI JUMPDEST POP DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST TIMESTAMP PUSH1 0x6 DUP3 ADD SSTORE ADD SWAP3 PUSH2 0x133C DUP5 SLOAD PUSH2 0x2E12 JUMP JUMPDEST SWAP2 DUP3 DUP6 SSTORE DUP10 PUSH1 0x0 MSTORE PUSH1 0x6 DUP9 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x135B DUP6 PUSH2 0x288E JUMP JUMPDEST DUP5 MSTORE DUP8 DUP10 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2E38 JUMP JUMPDEST SLOAD SWAP2 PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST DUP10 ADD MLOAD SWAP2 POP DUP15 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP10 DUP4 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 SWAP11 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x141C JUMPI POP DUP4 PUSH32 0x999E6A948F9641ED693B4D88BA4178715D7E5067B92A9E4D44CC5CE0B0A31E5B SWAP12 SWAP13 PUSH2 0x1377 SWAP8 SWAP5 PUSH2 0x138F SWAP11 SWAP10 SWAP8 SWAP5 PUSH1 0x7 SWAP8 PUSH1 0x1 SWAP6 LT PUSH2 0x1402 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x132A JUMP JUMPDEST DUP11 ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x13F5 JUMP JUMPDEST SWAP2 SWAP12 DUP11 PUSH1 0x1 DUP2 SWAP3 DUP16 DUP13 ADD MLOAD DUP2 SSTORE ADD SWAP14 ADD SWAP3 ADD PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x145C SWAP1 DUP5 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP13 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP8 LT PUSH2 0x1462 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP11 PUSH2 0x12D2 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x1451 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP9 ADD MLOAD DUP13 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE DUP12 DUP2 KECCAK256 SWAP3 POP PUSH1 0x1F NOT DUP5 AND SWAP1 JUMPDEST DUP13 DUP13 DUP4 DUP4 LT PUSH2 0x14DA JUMPI POP POP POP SWAP1 DUP4 PUSH1 0x1 SWAP5 SWAP4 SWAP3 LT PUSH2 0x14C2 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x12B2 JUMP JUMPDEST DUP11 ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 PUSH2 0x14B6 JUMP JUMPDEST DUP5 ADD MLOAD DUP6 SSTORE PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x149D JUMP JUMPDEST PUSH2 0x1517 SWAP1 DUP4 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 DUP14 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP14 DUP7 LT PUSH2 0x1462 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP12 PUSH2 0x128A JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x255 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1590 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH2 0x15A9 DUP4 PUSH2 0x2A87 JUMP JUMPDEST SWAP3 PUSH2 0x15B7 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x28C4 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP3 DUP5 ADD DUP1 SWAP3 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1678 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 ADD SWAP4 DUP2 DUP5 MSTORE MLOAD DUP1 SWAP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP4 PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 SWAP2 PUSH1 0x0 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x1605 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x1668 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD DUP1 MLOAD DUP3 MSTORE PUSH2 0x164B PUSH2 0x1639 DUP6 DUP4 ADD MLOAD PUSH1 0xA0 DUP1 DUP9 DUP8 ADD MSTORE DUP6 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 SWAP3 ADD MLOAD SWAP2 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x5 DUP7 PUSH1 0x1 SWAP3 PUSH1 0x40 SWAP10 SWAP9 SWAP10 MLOAD PUSH2 0x168D DUP2 PUSH2 0x288E JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH2 0x169C DUP6 DUP8 ADD PUSH2 0x28E5 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH2 0x16AC PUSH1 0x2 DUP8 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x16C7 PUSH1 0x4 DUP8 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP6 SWAP5 SWAP6 PUSH2 0x15CA JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0x16F6 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0xE8C PUSH2 0x1746 PUSH2 0x29E9 JUMP JUMPDEST PUSH2 0x174E PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x320B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH32 0xDC6246A27A928D53414CF0BBE2BFDE021E1AC737A6E0BCF9B182CDA5A9B2DCF8 SLOAD PUSH2 0x1790 SWAP1 PUSH2 0x2B47 JUMP JUMPDEST PUSH2 0x2B6D JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH2 0x17CC CALLDATASIZE PUSH2 0x29FF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x255 JUMPI PUSH2 0x17ED SWAP2 PUSH2 0x2AF1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x420 PUSH2 0x17FF PUSH1 0x1 DUP5 ADD PUSH2 0x28E5 JUMP JUMPDEST SWAP3 PUSH2 0x180C PUSH1 0x2 DUP3 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH2 0x184B PUSH2 0x1820 PUSH1 0x4 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 ADD PUSH2 0x28E5 JUMP JUMPDEST SWAP2 PUSH2 0x183D PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x29AE JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0x1877 PUSH2 0x2D9A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0x18D0 PUSH2 0x29E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x255 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1901 SWAP2 PUSH2 0x2AD9 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xA SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1991 JUMPI PUSH2 0x420 DUP6 PUSH2 0x414 DUP2 DUP10 SUB DUP3 PUSH2 0x28C4 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x197A JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x19C9 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x3185 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1A32 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xB PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x1A07 DUP2 SLOAD PUSH2 0x2E12 JUMP JUMPDEST SWAP1 SSTORE CALLER SWAP1 PUSH32 0xF8D2DB7C7DB2FE44E1064C72E76721C532922D180FE69F61B8775CE58E2E6C29 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BC81858D8D95CDCC81D1BC819185D185CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x1A9E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x1ABD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x1ADC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x255 JUMPI PUSH2 0x1AFB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP3 DUP4 ISZERO ISZERO DUP5 SUB PUSH2 0x255 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x255 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x255 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1B32 DUP2 PUSH2 0x2A87 JUMP JUMPDEST SWAP2 PUSH2 0x1B40 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x28C4 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x255 JUMPI PUSH1 0x24 DUP2 ADD SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x2503 JUMPI POP POP POP POP PUSH2 0x1B71 PUSH2 0x3162 JUMP JUMPDEST DUP6 MLOAD ISZERO PUSH2 0x24C7 JUMPI PUSH2 0x1B84 DUP5 MLOAD ISZERO ISZERO PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP9 MLOAD PUSH2 0x1B99 DUP2 DUP4 DUP6 DUP14 ADD PUSH2 0x298B JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH2 0x2482 JUMPI PUSH1 0x9 SLOAD SWAP5 PUSH2 0x1BB5 DUP7 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1BC5 DUP5 PUSH2 0x2872 JUMP JUMPDEST DUP8 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER PUSH1 0x40 DUP5 ADD MSTORE DUP5 PUSH1 0x60 DUP5 ADD MSTORE DUP4 PUSH1 0x80 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A0 DUP3 ADD MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146B JUMPI DUP2 SWAP1 PUSH2 0x1C4F DUP6 SLOAD PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2450 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x23E4 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x23D9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146B JUMPI DUP2 SWAP1 PUSH2 0x1CA9 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x23A4 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2332 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2327 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146B JUMPI DUP2 SWAP1 PUSH2 0x1D28 PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x22F2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2280 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2275 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146B JUMPI DUP2 SWAP1 PUSH2 0x1D85 PUSH1 0x4 DUP7 ADD SLOAD PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2240 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x21CE JUMPI PUSH1 0x0 SWAP3 PUSH2 0x21C3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x1E1B PUSH1 0x8 DUP4 ADD PUSH2 0x1DFF PUSH2 0x100 DUP5 ADD MLOAD ISZERO ISZERO DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MLOAD DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0x9 DUP4 ADD SSTORE PUSH2 0x160 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x146B JUMPI PUSH1 0xA DUP5 ADD SLOAD DUP3 PUSH1 0xA DUP7 ADD SSTORE DUP1 DUP4 LT PUSH2 0x214B JUMPI JUMPDEST POP PUSH1 0x20 ADD SWAP1 PUSH1 0xA DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2036 JUMPI POP POP POP POP PUSH2 0x1A0 DUP2 PUSH2 0x180 PUSH1 0xC SWAP4 ADD MLOAD PUSH1 0xB DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1EA0 DUP3 PUSH2 0x288E JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 ADD SWAP3 DUP1 DUP5 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH2 0x146B JUMPI PUSH2 0x1EFD SWAP4 PUSH1 0x40 MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x24B734BA34B0B6103B32B939B4B7B7 PUSH1 0x89 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2E38 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x1F13 DUP2 DUP4 DUP6 DUP12 ADD PUSH2 0x298B JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x146B JUMPI PUSH2 0x1F49 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2AD9 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP5 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x146B JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0xA SSTORE DUP2 LT ISZERO PUSH2 0x2020 JUMPI PUSH32 0x6030261238B75E373368746637A663B0F53D82D9FDFB5D33A015C036F8FCE174 PUSH2 0x2003 PUSH1 0x20 SWAP6 DUP6 DUP1 SWAP5 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x2011 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST DUP3 DUP2 SUB DUP10 DUP5 ADD MSTORE CALLER SWAP7 PUSH2 0x29AE JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146B JUMPI PUSH2 0x2053 DUP7 SLOAD PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2119 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x20A9 JUMPI SWAP3 DUP3 PUSH1 0x1 SWAP5 SWAP4 PUSH1 0x20 SWAP4 DUP7 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x209E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP8 SSTORE JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP1 SWAP3 PUSH2 0x1E63 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x207E JUMP JUMPDEST SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x2101 JUMPI POP DUP4 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP7 SWAP4 DUP8 SWAP7 SWAP4 DUP8 SWAP5 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x20E8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP8 SSTORE PUSH2 0x2092 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 DUP1 PUSH2 0x20DB JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x20B7 JUMP JUMPDEST PUSH2 0x2145 SWAP1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBFD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP13 PUSH2 0x205C JUMP JUMPDEST PUSH1 0xA DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP4 DUP3 ADD JUMPDEST DUP2 DUP4 ADD DUP2 LT PUSH2 0x216C JUMPI POP POP PUSH2 0x1E4D JUMP JUMPDEST DUP1 PUSH2 0x2179 PUSH1 0x1 SWAP3 SLOAD PUSH2 0x2838 JUMP JUMPDEST DUP1 PUSH2 0x2186 JUMPI JUMPDEST POP ADD PUSH2 0x215C JUMP JUMPDEST PUSH1 0x1F DUP2 GT DUP4 EQ PUSH2 0x219C JUMPI POP PUSH1 0x0 DUP2 SSTORE JUMPDEST DUP13 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH2 0x21BA PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2E21 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x2196 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1DA5 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2225 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x220C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP4 ADD SSTORE PUSH2 0x1DBD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x21FC JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH2 0x226F SWAP1 PUSH1 0x4 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBFD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP10 PUSH2 0x1D8E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1D48 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x22D7 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x22BE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x1D60 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x22AE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2293 JUMP JUMPDEST PUSH2 0x2321 SWAP1 PUSH1 0x3 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBFD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP10 PUSH2 0x1D31 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1CC9 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2389 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2370 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x1CE1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x2360 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH2 0x23D3 SWAP1 PUSH1 0x1 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBFD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP10 PUSH2 0x1CB2 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2435 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x241C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0x1C84 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x240F JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x23F4 JUMP JUMPDEST PUSH2 0x247C SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBFD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST DUP10 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44617461736574206E616D6520616C7265616479206578697374730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E616D652063616E6E6F7420626520656D707479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 CALLDATALOAD GT PUSH2 0x255 JUMPI PUSH1 0x20 DUP1 SWAP2 PUSH2 0x2526 CALLDATASIZE PUSH1 0x24 DUP9 CALLDATALOAD DUP8 ADD ADD PUSH2 0x2A31 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH2 0x1B5E JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH2 0x253F CALLDATASIZE PUSH2 0x29FF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x255 JUMPI PUSH2 0x2560 SWAP2 PUSH2 0x2A15 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x257D PUSH1 0x2 DUP3 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD SWAP3 PUSH2 0x25B1 PUSH1 0x5 PUSH1 0x4 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xE0 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x29AE JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP7 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0x25EE PUSH2 0x29D3 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x260A JUMPI PUSH2 0xE8C SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2D23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH2 0xE8C PUSH1 0x4 CALLDATALOAD PUSH2 0x263B PUSH2 0x29D3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x2656 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2B47 JUMP JUMPDEST PUSH2 0x2C0E JUMP JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x26B4 DUP2 PUSH2 0x28E5 JUMP JUMPDEST PUSH2 0x26C0 PUSH1 0x1 DUP4 ADD PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26DD PUSH1 0x3 DUP4 ADD PUSH2 0x28E5 JUMP JUMPDEST SWAP2 PUSH2 0x26EA PUSH1 0x4 DUP3 ADD PUSH2 0x28E5 JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP3 ADD SLOAD SWAP4 PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 DUP5 ADD SLOAD SWAP1 PUSH1 0x8 DUP6 ADD SLOAD SWAP3 PUSH1 0x9 DUP7 ADD SLOAD SWAP5 PUSH1 0xB DUP8 ADD SLOAD SWAP7 PUSH1 0xC ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 PUSH2 0x1A0 DUP1 SWAP2 MSTORE DUP14 ADD PUSH2 0x272B SWAP2 PUSH2 0x29AE JUMP JUMPDEST DUP13 DUP2 SUB PUSH1 0x20 DUP15 ADD MSTORE PUSH2 0x273C SWAP2 PUSH2 0x29AE JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP13 ADD MSTORE DUP11 DUP2 SUB PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x2753 SWAP2 PUSH2 0x29AE JUMP JUMPDEST DUP10 DUP2 SUB PUSH1 0x80 DUP12 ADD MSTORE PUSH2 0x2764 SWAP2 PUSH2 0x29AE JUMP JUMPDEST SWAP7 PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x9 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x27CF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x255 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x255 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2827 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x2820 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2868 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2852 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2847 JUMP JUMPDEST PUSH2 0x1C0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x146B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x146B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x146B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x146B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x28F9 DUP5 PUSH2 0x2838 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2968 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2925 JUMPI JUMPDEST POP POP PUSH2 0x2923 SWAP3 POP SUB DUP4 PUSH2 0x28C4 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2950 JUMPI POP POP PUSH2 0x2923 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2915 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2938 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2923 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2915 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x299E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x298E JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x29C7 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x298B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x255 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x255 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x255 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2020 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x255 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2A65 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x28C4 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x255 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x146B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2AC5 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2AB7 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2020 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2020 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAC33FF75C19E70FE83507DB0D683FD3465C996598DC972688B7ACE676C89077B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x237 JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x237 JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xDC6246A27A928D53414CF0BBE2BFDE021E1AC737A6E0BCF9B182CDA5A9B2DCF7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x320B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x2C09 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x2C09 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xDC6246A27A928D53414CF0BBE2BFDE021E1AC737A6E0BCF9B182CDA5A9B2DCF7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x320B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2C09 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x2C09 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2DAE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2DCD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461746120686173682063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x27CF JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2E2C JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E21 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x146B JUMPI PUSH2 0x2E57 SWAP1 PUSH1 0x1 SWAP3 DUP4 DUP3 ADD DUP2 SSTORE PUSH2 0x2AF1 JUMP JUMPDEST PUSH2 0x314C JUMPI DUP3 MLOAD DUP2 SSTORE DUP2 DUP2 ADD SWAP1 PUSH1 0x20 DUP1 DUP6 ADD MLOAD SWAP2 DUP3 MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 DUP2 GT PUSH2 0x146B JUMPI DUP1 PUSH2 0x2E88 DUP4 SLOAD PUSH2 0x2838 JUMP JUMPDEST SWAP6 PUSH1 0x1F SWAP7 DUP8 DUP2 GT PUSH2 0x311E JUMPI JUMPDEST POP DUP6 SWAP1 DUP8 DUP4 GT PUSH1 0x1 EQ PUSH2 0x30BB JUMPI PUSH1 0x0 SWAP3 PUSH2 0x30B0 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP8 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP2 ADD PUSH1 0x40 DUP8 ADD MLOAD DUP1 MLOAD SWAP1 DUP7 DUP3 GT PUSH2 0x146B JUMPI PUSH2 0x2EDA DUP4 SLOAD PUSH2 0x2838 JUMP JUMPDEST DUP7 DUP2 GT PUSH2 0x3082 JUMPI JUMPDEST POP DUP5 SWAP1 DUP7 DUP4 GT PUSH1 0x1 EQ PUSH2 0x3014 JUMPI SWAP2 DUP1 PUSH1 0x4 SWAP5 SWAP3 PUSH1 0x80 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3009 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP10 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE ADD SWAP6 ADD MLOAD SWAP1 DUP2 MLOAD SWAP4 DUP5 GT PUSH2 0x146B JUMPI PUSH2 0x2F37 DUP7 SLOAD PUSH2 0x2838 JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x2FDB JUMPI JUMPDEST POP DUP1 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH2 0x2F78 JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH2 0x2F6D JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH2 0x2F5A JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH2 0x2FC1 JUMPI POP POP POP LT PUSH2 0x2FA8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2F9E JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH2 0x2F8D JUMP JUMPDEST PUSH2 0x3003 SWAP1 DUP8 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP6 DUP10 LT PUSH2 0x1462 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST CODESIZE PUSH2 0x2F3F JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2F01 JUMP JUMPDEST DUP9 SWAP3 SWAP2 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP10 DUP3 DUP3 LT PUSH2 0x306C JUMPI POP POP SWAP2 PUSH1 0x80 SWAP8 SWAP6 SWAP4 SWAP2 DUP6 PUSH1 0x4 SWAP9 SWAP7 SWAP5 LT PUSH2 0x3053 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2F15 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3046 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP14 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x3029 JUMP JUMPDEST PUSH2 0x30AA SWAP1 DUP5 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP9 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP8 LT PUSH2 0x1462 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST CODESIZE PUSH2 0x2EE2 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2EA9 JUMP JUMPDEST SWAP1 DUP10 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP10 DUP3 DUP3 LT PUSH2 0x3108 JUMPI POP POP DUP5 GT PUSH2 0x30EF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2EBD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x30E2 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP14 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0x3146 SWAP1 DUP6 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP10 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP8 LT PUSH2 0x1462 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2E21 JUMP JUMPDEST CODESIZE PUSH2 0x2E94 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x3173 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x318C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x11185D185CD95D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x31D1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA103230BA30B9B2BA1037BBB732B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID 0xC 0xE2 EXTCODECOPY RETURNDATACOPY CODECOPY SWAP9 XOR 0xCF 0xEE DUP2 0xA7 0xAB ADDMOD DUP1 0xF7 EQ 0xE5 RETURNDATASIZE PUSH23 0x72B08DF0FA62F2843416E1EA09A2646970667358221220 0xEE SMOD 0xB7 0xE4 CODESIZE 0xA7 0xE PUSH14 0xA39AACC537866E33701098BC7DB7 JUMPI PUSH6 0xAD942FA0BFC 0xF8 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"231:12607:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2665:61;2686:13;231:12607;2673:26;;2665:61;:::i;:::-;735:10:13;231:12607:22;;;;;;;;;;;342:31;;231:12607;;3495:23:0;3491:108;;231:12607:22;;;10165:8;231:12607;;10165:34;231:12607;;;10165:34;231:12607;;;;3491:108:0;231:12607:22;;;;3541:47:0;;;;;;735:10:13;231:12607:22;3541:47:0;;231:12607:22;;;;;3541:47:0;231:12607:22;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;;;;;;;;;;2665:61;2686:13;231:12607;2673:26;;2665:61;:::i;:::-;735:10:13;231:12607:22;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:26:22;231:12607;;3495:23:0;3491:108;;231:12607:22;9430:38;231:12607;9372:43;231:12607;;;;;;;;9372:31;231:12607;;;9372:31;231:12607;;;;;;;;;;;;;;;;;;9372:43;231:12607;;;;;9430:38;231:12607;;;;;;;-1:-1:-1;;231:12607:22;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;231:12607:22;;;;2627:22:2;;2623:91;;231:12607:22;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;3052:40:2;231:12607:22;3052:40:2;;231:12607:22;2623:91:2;231:12607:22;;-1:-1:-1;;;2672:31:2;;231:12607:22;;2672:31:2;;231:12607:22;;;2672:31:2;231:12607:22;;;;;;;;;;;;;-1:-1:-1;;;;;231:12607:22;;:::i;:::-;;;;11571:13;231:12607;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2686:13;231:12607;2665:61;231:12607;;2673:26;;;2665:61;:::i;:::-;231:12607;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2686:13;231:12607;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;-1:-1:-1;;;;;;;;;;;231:12607:22;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;1629:49;231:12607;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;342:31;231:12607;;;;;;-1:-1:-1;;231:12607:22;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;;;;;:::i;:::-;2665:61;2686:13;231:12607;;;2673:26;2665:61;:::i;:::-;2466:103:15;;:::i;:::-;231:12607:22;;;;;;;;;;;;;;;;;5532:10;231:12607;;;;;;;;;;;;5598:13;;;231:12607;;;;;;;;;;;5532:10;5584:27;231:12607;;5655:16;;;231:12607;;;;;5655:43;;231:12607;5651:1201;;;5735:19;;2686:13;5735:19;;;;231:12607;5722:9;:32;231:12607;;;;;;;;;;;;;5532:10;231:12607;;;;;;;;;;;;;;;;;;;;;;;;5987:42;5722:9;;5987:42;;;5651:1201;5722:9;5987:42;;;;;231:12607;;5532:10;231:12607;;6061:52;231:12607;6061:52;;5651:1201;231:12607;;;;5987:42;231:12607;;;;;;;;;5987:42;;;-1:-1:-1;5987:42:22;;231:12607;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;231:12607:22;;;;;5651:1201;6134:44;;;;;5651:1201;-1:-1:-1;6130:722:22;;;231:12607;;;;;;;;;;;;;5532:10;231:12607;;;;;;;;;;;;;;;;;;5532:10;231:12607;;6318:52;231:12607;6318:52;;5651:1201;;6130:722;231:12607;;;;;;;;;6452:14;231:12607;;;;;;;;;;;;:::i;:::-;5532:10;231:12607;;;6484:287;;231:12607;;;;;6484:287;;231:12607;;;;6642:15;6484:287;;;231:12607;;6484:287;;;231:12607;;6484:287;;231:12607;6484:287;;231:12607;;6484:287;;;231:12607;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;5598:13;231:12607;;;;:::i;:::-;;;;;;6130:722;231:12607;;;;;;;;;;;;;;6452:14;231:12607;6484:287;231:12607;;;;;;;;;;;;;;;;;;;;5598:13;231:12607;;;;6484:287;;;231:12607;;;;;;;;;;6484:287;;;231:12607;;;;;;;;;;;;;;;;;;;;;6484:287;;231:12607;;;-1:-1:-1;;231:12607:22;;;;;;;;;;;;;6484:287;231:12607;;;;;;;;;;6792:49;5532:10;231:12607;;;;;;;;;;;:::i;:::-;6792:49;;;5651:1201;;231:12607;;;;-1:-1:-1;231:12607:22;;;;;;;;5598:13;231:12607;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;;;6484:287;231:12607;;6452:14;231:12607;;;;;;;;;;;;;;;;5598:13;231:12607;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5598:13;231:12607;;;;;;;;;;6452:14;231:12607;;;;;;;;;;;;6452:14;231:12607;;;;:::i;:::-;;;;;;;-1:-1:-1;231:12607:22;;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6134:44;2686:13;6154:19;;;231:12607;6154:24;6134:44;;;5655:43;5675:19;2686:13;5675:19;;231:12607;5675:23;;5655:43;;231:12607;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;:::i;:::-;;;2665:61;2686:13;231:12607;2673:26;;2665:61;:::i;:::-;231:12607;;;;;;;;;;;;;;2518:70;231:12607;2526:26;231:12607;;;2526:26;231:12607;;2556:10;2526:40;2518:70;:::i;:::-;231:12607;;;;;;;;;;;;;;;;;;;;;;;;;;;7481:14;231:12607;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7465:49;;7461:374;;231:12607;2556:10;;;7850:44;231:12607;;7850:44;231:12607;7461:374;7562:41;;;:::i;:::-;231:12607;;;;;7621:26;:47;;;7461:374;7617:208;;7461:374;;;;;;7617:208;231:12607;7688:18;;231:12607;;;;;;;;;7481:14;7795:15;7774:18;;231:12607;7617:208;;;7621:47;7651:17;231:12607;;7651:17;;231:12607;;;;7621:47;;231:12607;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;4723:26:0;231:12607:22;;;;:::i;:::-;;;;;3877:6:0;231:12607:22;;2484:4:0;231:12607:22;;;;3877:22:0;231:12607:22;2484:4:0;:::i;:::-;4723:26;:::i;:::-;231:12607:22;;;;;;;-1:-1:-1;;231:12607:22;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;4723:26:0;231:12607:22;;:::i;:::-;2484:4:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;231:12607:22;;3877:6:0;231:12607:22;;3877:22:0;231:12607:22;2484:4:0;;;:::i;:::-;4723:26;:::i;231:12607:22:-;;;;;;;;;;;;;;;2665:61;2686:13;231:12607;2673:26;;2665:61;:::i;:::-;231:12607;;;;;;;;;;;;;11129:26;;231:12607;;;;;;11129:26;231:12607;;11159:10;11129:40;:83;;;;231:12607;;;;;;;;;11293:14;231:12607;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;;;;;;;-1:-1:-1;;;231:12607:22;;;;;;;11129:83;231:12607;342:31;231:12607;;;;;;;;11159:10;231:12607;;;;;;;;;;11129:83;;231:12607;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;2665:61;2686:13;231:12607;2673:26;;2665:61;:::i;:::-;231:12607;;;;;;;;;;2518:70;231:12607;;;;;2526:26;231:12607;;;2526:26;231:12607;;2556:10;2526:40;2518:70;:::i;:::-;8389:68;231:12607;;8397:30;;8389:68;:::i;:::-;231:12607;;;;;;;;;8528:16;;;;231:12607;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8569:20;;231:12607;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;8665:15;231:12607;8731:253;231:12607;9000:57;231:12607;;;;;;;;;;;;;;;;;;;;;;;8640:15;8618:19;;;231:12607;8665:15;231:12607;8665:17;231:12607;;8665:17;:::i;:::-;231:12607;;;;;;;8618:19;231:12607;;;;;;;;;;;;:::i;:::-;;;8764:219;;;;231:12607;;8764:219;;231:12607;8640:15;231:12607;8764:219;;231:12607;;8764:219;;231:12607;8731:253;:::i;:::-;231:12607;;;;;;;;;;;;;;;;;;:::i;:::-;9000:57;;;231:12607;;;;;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;9000:57;231:12607;;8731:253;231:12607;;;;;;;8665:15;231:12607;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;1723:28;231:12607;1723:28;;;;;231:12607;;1723:28;231:12607;;;;;;;;;;;;;;;;;;;;;;;;;;2665:61;2686:13;231:12607;2673:26;;2665:61;:::i;:::-;231:12607;;10787:15;231:12607;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;:::i;:::-;;;;;2930:6:0;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;4306:25:0;231:12607:22;;:::i;:::-;2484:4:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;231:12607:22;;3877:6:0;231:12607:22;;3877:22:0;231:12607:22;2484:4:0;;;:::i;:::-;4306:25;:::i;231:12607:22:-;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;;;;;:::i;:::-;;;;1508:59;231:12607;;;;;;;;1508:59;;;;;;;;:::i;:::-;231:12607;;;;1508:59;;;;;:::i;:::-;;;;;;;:::i;:::-;231:12607;1508:59;231:12607;1508:59;;;231:12607;1508:59;;;:::i;:::-;231:12607;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;231:12607:22;;;;1500:62:2;;:::i;:::-;231:12607:22;;;-1:-1:-1;;;;;;231:12607:22;;;;-1:-1:-1;;;;;231:12607:22;3052:40:2;231:12607:22;;3052:40:2;231:12607:22;;;;;;;-1:-1:-1;;231:12607:22;;;;;;:::i;:::-;-1:-1:-1;;;;;231:12607:22;;;;;1573:50;231:12607;;;;;;;;;;;1573:50;;;;;231:12607;1573:50;;;;:::i;:::-;231:12607;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;1689:28;231:12607;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;12106:11;231:12607;;;;;;;;;;12106:11;231:12607;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;2665:61;2686:13;231:12607;2673:26;;2665:61;:::i;:::-;231:12607;;;;;;;;;9711:10;231:12607;;;;;;;;;;;;;;;;;;;9766:34;231:12607;;;9766:34;:36;231:12607;;9766:36;:::i;:::-;231:12607;;9711:10;9817:41;;231:12607;9817:41;;231:12607;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2466:103:15;;;;;;:::i;:::-;231:12607:22;;3720:23;231:12607;;3778:65;231:12607;;3786:27;;3778:65;:::i;:::-;231:12607;;;;;;;;;;;;;:::i;:::-;;;3861:15;231:12607;;;;;;;;;3951:15;231:12607;3951:15;;;;:::i;:::-;;231:12607;;;;;;;:::i;:::-;;;;;3999:486;;231:12607;4096:10;231:12607;3999:486;;231:12607;3999:486;231:12607;3999:486;;231:12607;3999:486;231:12607;3999:486;;231:12607;4205:15;231:12607;3999:486;;231:12607;4205:15;231:12607;3999:486;;231:12607;;;3999:486;;231:12607;;;3999:486;;;231:12607;;3999:486;;;231:12607;;;3999:486;;;231:12607;3999:486;;;231:12607;;3999:486;;;231:12607;;3999:486;;;231:12607;;;;;;;;;;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3999:486;;231:12607;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3999:486;;231:12607;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;3999:486;;231:12607;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3999:486;;231:12607;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3999:486;;231:12607;;;;;;3999:486;;231:12607;;;;;;3999:486;;231:12607;;;;;;3861:15;231:12607;;;3999:486;;;231:12607;;;;;;;;;;;;;;;;;;;;3999:486;;;231:12607;;;-1:-1:-1;;231:12607:22;;;;;;;;;;;;;3999:486;;;231:12607;3951:15;231:12607;;;3999:486;;;231:12607;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3999:486;;;;;;;231:12607;3999:486;;231:12607;;;;;3999:486;231:12607;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;4562:206;231:12607;4562:206;;231:12607;;4562:206;;231:12607;4205:15;231:12607;4562:206;;231:12607;;;;;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;4530:239;231:12607;;;;;;-1:-1:-1;;;231:12607:22;;;;;4562:206;;231:12607;4530:239;:::i;:::-;231:12607;;;;;;;;;;;;;;:::i;:::-;;;3861:15;231:12607;;;;;;;4096:10;231:12607;;;;;;;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;;;;;5024:58;231:12607;;;;;;;;;;;;;;;;;;4096:10;231:12607;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;4096:10;231:12607;;:::i;:::-;5024:58;;;231:12607;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;-1:-1:-1;;;231:12607:22;;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;1445:57;231:12607;;;;;;;;1445:57;;;;;;;;:::i;:::-;231:12607;;;;;;;;;;1445:57;;231:12607;1445:57;;;;;;:::i;:::-;231:12607;1445:57;;;231:12607;1445:57;231:12607;1445:57;231:12607;1445:57;;231:12607;1445:57;;231:12607;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;:::i;:::-;735:10:13;-1:-1:-1;;;;;231:12607:22;;5397:34:0;5393:102;;5505:37;231:12607:22;;;5505:37:0;:::i;5393:102::-;231:12607:22;;-1:-1:-1;;;5454:30:0;;231:12607:22;;5454:30:0;231:12607:22;;;;;;-1:-1:-1;;231:12607:22;;;;4306:25:0;231:12607:22;;;;:::i;:::-;;;;;3877:6:0;231:12607:22;;2484:4:0;231:12607:22;;;;3877:22:0;231:12607:22;2484:4:0;:::i;:::-;4306:25;:::i;231:12607:22:-;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;3877:6:0;231:12607:22;;;;;;;3877:22:0;231:12607:22;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;;;;;;;1325:47;;;:::i;:::-;;231:12607;1325:47;;;:::i;:::-;;;;231:12607;;;;-1:-1:-1;;;;;231:12607:22;1325:47;231:12607;1325:47;;;:::i;:::-;;;231:12607;1325:47;;;:::i;:::-;;;;;231:12607;1325:47;;;;231:12607;1325:47;;;231:12607;1325:47;;;;231:12607;1325:47;;;;231:12607;1325:47;;;;231:12607;1325:47;;;231:12607;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1325:47;231:12607;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;12299:13;231:12607;-1:-1:-1;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2649:47:0;;;:87;;;;231:12607:22;;;;;;;2649:87:0;-1:-1:-1;;;829:40:17;;-1:-1:-1;2649:87:0;;;231:12607:22;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;:::o;:::-;;;;;;-1:-1:-1;231:12607:22;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;231:12607:22;;;;-1:-1:-1;231:12607:22;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;231:12607:22;;;;:::o;:::-;;;;-1:-1:-1;;;;;231:12607:22;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;231:12607:22;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;231:12607:22;;;-1:-1:-1;231:12607:22;;;;;-1:-1:-1;231:12607:22;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;231:12607:22;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;231:12607:22;;-1:-1:-1;231:12607:22;;;-1:-1:-1;231:12607:22;:::o;:::-;;;;;;;;-1:-1:-1;231:12607:22;;;-1:-1:-1;231:12607:22;;;;;-1:-1:-1;231:12607:22;:::o;3175:103:0:-;735:10:13;231:12607:22;;;;;;;;;;;;;3495:23:0;3491:108;;3175:103;:::o;:::-;231:12607:22;-1:-1:-1;231:12607:22;2930:6:0;231:12607:22;;;-1:-1:-1;231:12607:22;735:10:13;-1:-1:-1;231:12607:22;;;;;-1:-1:-1;231:12607:22;;;3495:23:0;3491:108;;3175:103;:::o;6155:316::-;-1:-1:-1;;;;;231:12607:22;-1:-1:-1;231:12607:22;;;;;;;;;;-1:-1:-1;;231:12607:22;-1:-1:-1;;;;;;;;;;;419:26:22;231:12607;;;;;;;2930:6:0;231:12607:22;;;;;;;;;;;;;;;;;;;;;;6346:40:0;735:10:13;6346:40:0;;;231:12607:22;6400:11:0;:::o;6248:217::-;6442:12;;;:::o;6155:316::-;;-1:-1:-1;231:12607:22;;;;2930:6:0;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;6252:23:0;6248:217;231:12607:22;;;;;;2930:6:0;231:12607:22;;;;;;;;;;;;;;;;;;;;;;6346:40:0;735:10:13;6346:40:0;;;231:12607:22;6400:11:0;:::o;6708:317::-;-1:-1:-1;;;;;231:12607:22;-1:-1:-1;231:12607:22;;;;;;;;;;-1:-1:-1;;231:12607:22;-1:-1:-1;;;;;;;;;;;419:26:22;231:12607;;;;;;;;2930:6:0;231:12607:22;;;;;;;;;;;;;;;;;;;;6900:40:0;735:10:13;6900:40:0;;;231:12607:22;6954:11:0;:::o;6708:317::-;;-1:-1:-1;231:12607:22;;;;2930:6:0;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;6802:217:0;231:12607:22;;;;;;2930:6:0;231:12607:22;;;;;;;;;;;;;;;;;;;;6900:40:0;735:10:13;6900:40:0;;;231:12607:22;6954:11:0;:::o;1796:162:2:-;1710:6;231:12607:22;-1:-1:-1;;;;;231:12607:22;735:10:13;1855:23:2;1851:101;;1796:162::o;1851:101::-;231:12607:22;;-1:-1:-1;;;1901:40:2;;735:10:13;1901:40:2;;;231:12607:22;;;1901:40:2;231:12607:22;;;;:::o;:::-;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:12607:22;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;231:12607:22;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;231:12607:22;;;;-1:-1:-1;;;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;231:12607:22;;;;-1:-1:-1;;;;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;-1:-1:-1;231:12607:22;;-1:-1:-1;231:12607:22;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;231:12607:22;;;;;;;;;;-1:-1:-1;231:12607:22;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;-1:-1:-1;231:12607:22;;-1:-1:-1;231:12607:22;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;231:12607:22;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;-1:-1:-1;231:12607:22;;-1:-1:-1;231:12607:22;;-1:-1:-1;231:12607:22;;;;;;;;;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;231:12607:22;;-1:-1:-1;231:12607:22;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2575:307:15;1899:1;2702:7;231:12607:22;2702:18:15;2698:86;;1899:1;2702:7;231:12607:22;2575:307:15:o;2698:86::-;231:12607:22;;-1:-1:-1;;;2743:30:15;;;;;231:12607:22;;;;:::o;:::-;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;231:12607:22;;;;;;;;;;;;-1:-1:-1;;;231:12607:22;;;;;;"},"methodIdentifiers":{"DATASET_ADMIN_ROLE()":"dd5af6cc","DEFAULT_ADMIN_ROLE()":"a217fddf","VERIFIER_ROLE()":"e7705db6","accessRequests(uint256,uint256)":"3ee9ac05","addVerifier(address)":"9000b3d6","allDatasets(uint256)":"a1cd59c3","checkAccess(uint256,address)":"d13c8703","datasetVersions(uint256,uint256)":"795d5cb7","datasets(uint256)":"1cff85e1","getAccessRequests(uint256)":"c0b281f2","getAllDatasets()":"4d72cd12","getDataset(uint256)":"ee004221","getDatasetVersions(uint256)":"9abd9d62","getOwnerDatasets(address)":"f1767ffd","getRoleAdmin(bytes32)":"248a9ca3","getTotalDatasets()":"1af8e976","grantAccess(uint256,address,uint256)":"d603b284","grantRole(bytes32,address)":"2f2ff15d","hasAccess(uint256,address)":"ced14198","hasRole(bytes32,address)":"91d14854","nameToDatasetId(string)":"dfb216aa","nextDatasetId()":"52955670","owner()":"8da5cb5b","ownerDatasets(address,uint256)":"668e84be","recordDownload(uint256)":"4b51c301","registerDataset(string,string,string,string,bool,uint256,string[])":"44bc6d25","removeVerifier(address)":"ca2dfd0a","renounceOwnership()":"715018a6","renounceRole(bytes32,address)":"36568abe","requestAccess(uint256,string)":"dab52a76","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","updateCitationCount(uint256,uint256)":"fef7e61a","updateDataset(uint256,string,string,string)":"a1d534cc","verifyDataset(uint256,bool)":"fe2cb4c5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"grantor\",\"type\":\"address\"}],\"name\":\"AccessGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"}],\"name\":\"AccessRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"downloader\",\"type\":\"address\"}],\"name\":\"DatasetDownloaded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dataHash\",\"type\":\"string\"}],\"name\":\"DatasetRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newDataHash\",\"type\":\"string\"}],\"name\":\"DatasetUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"name\":\"DatasetVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DATASET_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERIFIER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accessRequests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requestedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"approvedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"}],\"name\":\"addVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allDatasets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_datasetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"checkAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"datasetVersions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"dataHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"changeLog\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"datasets\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"dataHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPublic\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"accessPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"downloadCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"citationCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_datasetId\",\"type\":\"uint256\"}],\"name\":\"getAccessRequests\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requestedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"approvedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Dataset.AccessRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDatasets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_datasetId\",\"type\":\"uint256\"}],\"name\":\"getDataset\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"dataHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPublic\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"accessPrice\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"downloadCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"citationCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Dataset.DatasetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_datasetId\",\"type\":\"uint256\"}],\"name\":\"getDatasetVersions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"dataHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"changeLog\",\"type\":\"string\"}],\"internalType\":\"struct Dataset.DatasetVersion[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getOwnerDatasets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalDatasets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_datasetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_requestIndex\",\"type\":\"uint256\"}],\"name\":\"grantAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"nameToDatasetId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextDatasetId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerDatasets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_datasetId\",\"type\":\"uint256\"}],\"name\":\"recordDownload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dataHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_metadataHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_isPublic\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_accessPrice\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"}],\"name\":\"registerDataset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"}],\"name\":\"removeVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_datasetId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_purpose\",\"type\":\"string\"}],\"name\":\"requestAccess\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_datasetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"updateCitationCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_datasetId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newDataHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newMetadataHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_changeLog\",\"type\":\"string\"}],\"name\":\"updateDataset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_datasetId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_verified\",\"type\":\"bool\"}],\"name\":\"verifyDataset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"addVerifier(address)\":{\"details\":\"Add verifier role to an address\",\"params\":{\"_verifier\":\"Address to add as verifier\"}},\"checkAccess(uint256,address)\":{\"details\":\"Check if user has access to dataset\",\"params\":{\"_datasetId\":\"ID of the dataset\",\"_user\":\"Address of the user\"},\"returns\":{\"_0\":\"Whether user has access\"}},\"getAccessRequests(uint256)\":{\"details\":\"Get access requests for a dataset\",\"params\":{\"_datasetId\":\"ID of the dataset\"},\"returns\":{\"_0\":\"Array of AccessRequest structs\"}},\"getAllDatasets()\":{\"details\":\"Get all dataset IDs\",\"returns\":{\"_0\":\"Array of all dataset IDs\"}},\"getDataset(uint256)\":{\"details\":\"Get dataset information\",\"params\":{\"_datasetId\":\"ID of the dataset\"},\"returns\":{\"_0\":\"DatasetInfo struct\"}},\"getDatasetVersions(uint256)\":{\"details\":\"Get dataset versions\",\"params\":{\"_datasetId\":\"ID of the dataset\"},\"returns\":{\"_0\":\"Array of DatasetVersion structs\"}},\"getOwnerDatasets(address)\":{\"details\":\"Get datasets owned by an address\",\"params\":{\"_owner\":\"Address of the owner\"},\"returns\":{\"_0\":\"Array of dataset IDs\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getTotalDatasets()\":{\"details\":\"Get total number of datasets\",\"returns\":{\"_0\":\"Total dataset count\"}},\"grantAccess(uint256,address,uint256)\":{\"details\":\"Grant access to a user (for private datasets)\",\"params\":{\"_datasetId\":\"ID of the dataset\",\"_requestIndex\":\"Index of the access request (if applicable)\",\"_user\":\"Address of the user to grant access\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recordDownload(uint256)\":{\"details\":\"Record dataset download (for analytics)\",\"params\":{\"_datasetId\":\"ID of the dataset\"}},\"registerDataset(string,string,string,string,bool,uint256,string[])\":{\"details\":\"Register a new dataset\",\"params\":{\"_accessPrice\":\"Price to access the dataset (0 for free)\",\"_dataHash\":\"Hash of the dataset content\",\"_description\":\"Description of the dataset\",\"_isPublic\":\"Whether the dataset is publicly accessible\",\"_metadataHash\":\"IPFS hash for metadata\",\"_name\":\"Name of the dataset\",\"_tags\":\"Array of tags for categorization\"}},\"removeVerifier(address)\":{\"details\":\"Remove verifier role from an address\",\"params\":{\"_verifier\":\"Address to remove verifier role from\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"requestAccess(uint256,string)\":{\"details\":\"Request access to a dataset\",\"params\":{\"_datasetId\":\"ID of the dataset\",\"_purpose\":\"Purpose for accessing the dataset\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateCitationCount(uint256,uint256)\":{\"details\":\"Update citation count\",\"params\":{\"_count\":\"New citation count\",\"_datasetId\":\"ID of the dataset\"}},\"updateDataset(uint256,string,string,string)\":{\"details\":\"Update dataset with new version\",\"params\":{\"_changeLog\":\"Description of changes\",\"_datasetId\":\"ID of the dataset\",\"_newDataHash\":\"New data hash\",\"_newMetadataHash\":\"New metadata hash\"}},\"verifyDataset(uint256,bool)\":{\"details\":\"Verify a dataset (only by verifiers)\",\"params\":{\"_datasetId\":\"ID of the dataset\",\"_verified\":\"Verification status\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dataset.sol\":\"Dataset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/Dataset.sol\":{\"keccak256\":\"0x0eecf562a057a0655722736c22273c095be23e55cfca0a456d1185156d121a53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4b166cba6b0e20f1604ded1ab25ba62a14d665c2c616a5537a9bc6c5bca91ed\",\"dweb:/ipfs/QmdjMvZFu5VBArWDxrPRVmotyFdHtWvE7PwBrUMoFUgB3v\"]}},\"version\":1}"}},"contracts/DeSciNFTSimple.sol":{"DeSciNFTSimple":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newCount","type":"uint256"}],"name":"CitationAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newScore","type":"uint256"}],"name":"ImpactScoreUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"verified","type":"bool"}],"name":"NFTVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"researcher","type":"address"},{"indexed":false,"internalType":"string","name":"title","type":"string"},{"indexed":false,"internalType":"string","name":"researchType","type":"string"}],"name":"ResearchNFTMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"addCitation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getResearchNFT","outputs":[{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"researcher","type":"address"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"string","name":"researchType","type":"string"},{"internalType":"uint256","name":"citationCount","type":"uint256"},{"internalType":"uint256","name":"impactScore","type":"uint256"},{"internalType":"bool","name":"isVerified","type":"bool"}],"internalType":"struct DeSciNFTSimple.ResearchNFT","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"researcher","type":"address"}],"name":"getResearcherNFTs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalNFTs","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"string","name":"researchType","type":"string"}],"name":"mintResearchNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"researchNFTs","outputs":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"researcher","type":"address"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"string","name":"researchType","type":"string"},{"internalType":"uint256","name":"citationCount","type":"uint256"},{"internalType":"uint256","name":"impactScore","type":"uint256"},{"internalType":"bool","name":"isVerified","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"researcherNFTs","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"titleToTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bool","name":"verified","type":"bool"}],"name":"verifyResearch","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608034620003a9576001600160401b0390604081810183811183821017620003935781526012825260209271111954d8da4814995cd9585c98da0813919560721b848401528151908282018281108282111762000393578352600491828152634453434960e01b868201528451908282116200037e576000968754926001978885811c9516801562000373575b8386101462000360578190601f958681116200030d575b508390868311600114620002a9578b926200029d575b5050600019600383901b1c191690881b1788555b81519384116200028a5786548781811c911680156200027f575b828210146200026c57908184869594931162000215575b5080928411600114620001ad57508792620001a1575b5050600019600383901b1c191690841b1783555b33156200018c575060078054336001600160a01b03198216811790925591519390916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a380600855600955611df89081620003af8239f35b836024925191631e4fbdf760e01b8352820152fd5b01519050388062000114565b9190879450601f198416858a52838a20938a905b828210620001fb5750508411620001e1575b505050811b01835562000128565b015160001960f88460031b161c19169055388080620001d3565b8484015186558a97909501949384019390810190620001c1565b90919293508789528189208480870160051c82019284881062000262575b9187968b92969594930160051c01915b82811062000253575050620000fe565b8b81558796508a910162000243565b9250819262000233565b634e487b7160e01b895260228652602489fd5b90607f1690620000e7565b634e487b7160e01b885260418552602488fd5b015190503880620000b9565b8b8052848c208b94509190601f1984168d5b87828210620002f65750508411620002dc575b505050811b018855620000cd565b015160001960f88460031b161c19169055388080620002ce565b8385015186558e97909501949384019301620002bb565b9091508a8052838b208680850160051c82019286861062000356575b918c91869594930160051c01915b82811062000347575050620000a3565b8d81558594508c910162000337565b9250819262000329565b634e487b7160e01b8a526022875260248afd5b94607f16946200008c565b604184634e487b7160e01b6000525260246000fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146117225750806306fdde031461167f578063081812fc14611641578063095ea7b31461155a57806320a2b3a01461149457806323b872dd1461147d5780632bc6c4e3146113c95780632ef706ab1461137157806330bdb3511461134657806342842e0e146113185780634f7a3a75146108c5578063507d34a51461083a5780636352211e1461080a57806370a08231146107b1578063715018a6146107545780638da5cb5b1461072b57806395d89b411461064c5780639a60f5be146104e35780639e6b3f4214610487578063a22cb465146103dc578063b88d4fde1461036f578063c87b56dd14610312578063e985e9c5146102bc578063f2fde38b1461022e5763f9202f001461013257600080fd5b346102295760208060031936011261022957600435906101646001600160a01b0361015c84611be7565b161515611d7f565b81600052600a8152600560406000200161017e8154611d70565b905581600052600a8152604060002090600582015491600a830292808404600a1490151715610213577fbf72494abeb41ebcbebb2336bea955f18098ff14bc9264d4ab666168b67af0b382847f2e2699c09f8992c0d6290f13906bc2ee1123da7fcb3a7524e04359385709476695600688950155604051908152a282600052600a8152600560406000200154604051908152a2005b634e487b7160e01b600052601160045260246000fd5b600080fd5b34610229576020366003190112610229576102476117ef565b61024f611a35565b6001600160a01b039081169081156102a357600754826bffffffffffffffffffffffff60a01b821617600755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b34610229576040366003190112610229576102d56117ef565b6102dd611805565b9060018060a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b346102295760203660031901126102295760043561032f81611be7565b50600052600660205261036b61034860406000206118ad565b600060405161035681611871565b526040519182916020835260208301906117ca565b0390f35b34610229576080366003190112610229576103886117ef565b610390611805565b90604435606435926001600160401b0384116102295736602385011215610229576103c86103da9436906024816004013591016119d1565b926103d4838383611a61565b33611c22565b005b34610229576040366003190112610229576103f56117ef565b6103fd611a26565b6001600160a01b0390911690811561046e5733600052600560205260406000208260005260205261043e8160406000209060ff801983541691151516179055565b60405190151581527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051630b61174360e31b815260048101839052602490fd5b34610229576020366003190112610229576004356001600160401b038111610229576104d060206104bd81933690600401611a08565b81604051938285809451938492016117a7565b8101600c81520301902054604051908152f35b346102295760208060031936011261022957610602600435916040519061050982611855565b600060e0606093848152848482015282604082015282858201528460808201528260a08201528260c0820152015260018060a01b039361054c8561015c83611be7565b600052600a81526040600020936040519461056686611855565b61056f816118ad565b8652610634610580600183016118ad565b9684810197885283600284015416906040810191825260038401548782019081526105ad600486016118ad565b906080830191825260058601549860a08401998a5260ff600760068901549860c08701998a520154169760e0850198151589526106176040519d8e9d8e978d895251610100809e8a01526101208901906117ca565b9051601f1997604089828503019101526117ca565b955116908b01525160808a015251908883030160a08901526117ca565b935160c08601525160e0850152511515908301520390f35b3461022957600036600319011261022957604051600060018054906106708261181b565b8085529181811690811561070457506001146106ab575b61036b846106978186038261188c565b6040519182916020835260208301906117ca565b600081815292507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106106ec57505050810160200161069782610687565b805460208587018101919091529093019281016106d4565b60ff191660208087019190915292151560051b850190920192506106979150839050610687565b34610229576000366003190112610229576007546040516001600160a01b039091168152602090f35b346102295760003660031901126102295761076d611a35565b600780546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610229576020366003190112610229576001600160a01b036107d26117ef565b1680156107f15760005260036020526020604060002054604051908152f35b6040516322718ad960e21b815260006004820152602490fd5b34610229576020366003190112610229576020610828600435611be7565b6040516001600160a01b039091168152f35b34610229576040366003190112610229576004357f4727b85a09e6ca94a7e26b46423373a951492773e32fbefde21a3ca6448303516020610879611a26565b610881611a35565b6108956001600160a01b0361015c86611be7565b83600052600a82526108ba8160076040600020019060ff801983541691151516179055565b6040519015158152a2005b346102295760a0366003190112610229576108de6117ef565b6024356001600160401b038111610229576108fd903690600401611a08565b906044356001600160401b0381116102295761091d903690600401611a08565b6064356001600160401b0381116102295761093c903690600401611a08565b916084356001600160401b0381116102295761095c903690600401611a08565b916002600854146113065760026008558451156112c95760405160208187516109888183858c016117a7565b8101600c8152030190205461127457600954936109a485611d70565b6009556040516109b381611871565b600081526001600160a01b0384161561125b576000868152600260205260409020546001600160a01b031680611224575b6001600160a01b0385166000818152600360209081526040808320805460010190558a83526002909152812080546001600160a01b0319168317905588919083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a461120b57833b6110c0575b508460005260066020526040600020908051906001600160401b038211610d81578190610a81845461181b565b601f8111611070575b50602090601f831160011461100457600092610ff9575b50508160011b916000199060031b1c19161790555b7ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051868152a160405190610aed82611855565b858252602082015260018060a01b0382166040820152426060820152826080820152600060a0820152600060c0820152600060e082015283600052600a60205260406000209080518051906001600160401b038211610d81578190610b52855461181b565b601f8111610fa9575b50602090601f8311600114610f3d57600092610f32575b50508160011b916000199060031b1c19161782555b60208101518051906001600160401b038211610d81578190610bac600186015461181b565b601f8111610edf575b50602090601f8311600114610e6d57600092610e62575b50508160011b916000199060031b1c19161760018301555b6002820160018060a01b036040830151166bffffffffffffffffffffffff60a01b8254161790556060810151600383015560808101518051906001600160401b038211610d8157610c38600485015461181b565b601f8111610e1b575b50602090601f8311600114610da257928260079360e093610ca89796600092610d97575b50508160011b916000199060031b1c19161760048501555b60a0810151600585015560c081015160068501550151151591019060ff801983541691151516179055565b826040516020818751610cbe8183858c016117a7565b8101600c8152030190205560018060a01b038116600052600b60205260406000209081549168010000000000000000831015610d8157602095610d717f0c1def36ef14836e9b195f50c1fbc0b8035e8c6c472625326c1add6bb08ccd7693610d3086610d599560018b99018155611988565b81549060031b9088821b91600019901b19161790556040519384936040855260408501906117ca565b8381038a8501526001600160a01b03909116966117ca565b0390a36001600855604051908152f35b634e487b7160e01b600052604160045260246000fd5b015190508b80610c65565b906004850160005260206000209160005b601f1985168110610e0357508360e093610ca8979693600193600797601f19811610610dea575b505050811b016004850155610c7d565b015160001960f88460031b161c191690558b8080610dda565b91926020600181928685015181550194019201610db3565b600485016000526020600020601f840160051c810160208510610e5b575b601f830160051c82018110610e4f575050610c41565b60008155600101610e39565b5080610e39565b015190508880610bcc565b9250600185016000526020600020906000935b601f1984168510610ec4576001945083601f19811610610eab575b505050811b016001830155610be4565b015160001960f88460031b161c19169055888080610e9b565b81810151835560209485019460019093019290910190610e80565b909150600185016000526020600020601f840160051c810160208510610f2b575b90849392915b601f830160051c82018110610f1c575050610bb5565b60008155859450600101610f06565b5080610f00565b015190508880610b72565b9250846000526020600020906000935b601f1984168510610f8e576001945083601f19811610610f75575b505050811b018255610b87565b015160001960f88460031b161c19169055888080610f68565b81810151835560209485019460019093019290910190610f4d565b909150846000526020600020601f840160051c810160208510610ff2575b90849392915b601f830160051c82018110610fe3575050610b5b565b60008155859450600101610fcd565b5080610fc7565b015190508880610aa1565b9250836000526020600020906000935b601f1984168510611055576001945083601f1981161061103c575b505050811b019055610ab6565b015160001960f88460031b161c1916905588808061102f565b81810151835560209485019460019093019290910190611014565b909150836000526020600020601f840160051c8101602085106110b9575b90849392915b601f830160051c820181106110aa575050610a8a565b60008155859450600101611094565b508061108e565b602061110091604098979695985180938192630a85bd0160e11b8352336004840152600060248401528960448401526080606484015260848301906117ca565b038160006001600160a01b038c165af1600091816111c6575b5061118157863d15611179573d90611130826119b6565b9161113e604051938461188c565b82523d6000602084013e5b8151918261117257604051633250574960e11b81526001600160a01b0383166004820152602490fd5b6020915001fd5b606090611149565b949593949293926001600160e01b03191663757a42ff60e11b016111a55786610a54565b604051633250574960e11b81526001600160a01b0384166004820152602490fd5b9091506020813d602011611203575b816111e26020938361188c565b8101031261022957516001600160e01b031981168103610229579088611119565b3d91506111d5565b6040516339e3563760e11b815260006004820152602490fd5b600087815260046020526040902080546001600160a01b0319169055806000526003602052604060002060001981540190556109e4565b604051633250574960e11b815260006004820152602490fd5b60405162461bcd60e51b815260206004820152602760248201527f526573656172636820776974682074686973207469746c6520616c72656164796044820152662065786973747360c81b6064820152608490fd5b60405162461bcd60e51b81526020600482015260156024820152745469746c652063616e6e6f7420626520656d70747960581b6044820152606490fd5b604051633ee5aeb560e01b8152600490fd5b34610229576103da61132936611953565b906040519261133784611871565b600084526103d4838383611a61565b3461022957600036600319011261022957600954600019810190811161021357602090604051908152f35b346102295760403660031901126102295761138a6117ef565b6001600160a01b03166000908152600b6020526040902080546024359190821015610229576020916113bb91611988565b90546040519160031b1c8152f35b3461022957602080600319360112610229576001600160a01b036113eb6117ef565b16600052600b8152604060002060405190818382549182815201908192600052846000209060005b868282106114695786866114298288038361188c565b604051928392818401908285525180915260408401929160005b82811061145257505050500390f35b835185528695509381019392810192600101611443565b835485529093019260019283019201611413565b34610229576103da61148e36611953565b91611a61565b3461022957602036600319011261022957600435600052600a60205261151e60406000206114c1816118ad565b906114ce600182016118ad565b600282015460038301549290611544906001600160a01b03166114f3600484016118ad565b60058401549561152c60ff6007600688015497015416966040519a8b9a610100808d528c01906117ca565b908a820360208c01526117ca565b926040890152606088015286820360808801526117ca565b9260a085015260c0840152151560e08301520390f35b34610229576040366003190112610229576115736117ef565b60243561157f81611be7565b3315158061162e575b80611601575b6115e9576001600160a01b039283169282918491167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4600090815260046020526040902080546001600160a01b0319169091179055005b60405163a9fbf51f60e01b8152336004820152602490fd5b5060018060a01b038116600052600560205260406000203360005260205260ff604060002054161561158e565b506001600160a01b038116331415611588565b346102295760203660031901126102295760043561165e81611be7565b506000526004602052602060018060a01b0360406000205416604051908152f35b3461022957600036600319011261022957604051600080546116a08161181b565b8084529060019081811690811561070457506001146116c95761036b846106978186038261188c565b600080805292507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061170a57505050810160200161069782610687565b805460208587018101919091529093019281016116f2565b34610229576020366003190112610229576004359063ffffffff60e01b821680920361022957602091632483248360e11b8114908115611764575b5015158152f35b6380ac58cd60e01b811491508115611796575b8115611785575b508361175d565b6301ffc9a760e01b1490508361177e565b635b5e139f60e01b81149150611777565b60005b8381106117ba5750506000910152565b81810151838201526020016117aa565b906020916117e3815180928185528580860191016117a7565b601f01601f1916010190565b600435906001600160a01b038216820361022957565b602435906001600160a01b038216820361022957565b90600182811c9216801561184b575b602083101461183557565b634e487b7160e01b600052602260045260246000fd5b91607f169161182a565b61010081019081106001600160401b03821117610d8157604052565b602081019081106001600160401b03821117610d8157604052565b90601f801991011681019081106001600160401b03821117610d8157604052565b90604051918260008254926118c18461181b565b90818452600194858116908160001461193057506001146118ed575b50506118eb9250038361188c565b565b9093915060005260209081600020936000915b8183106119185750506118eb935082010138806118dd565b85548884018501529485019487945091830191611900565b9150506118eb94506020925060ff191682840152151560051b82010138806118dd565b6060906003190112610229576001600160a01b0390600435828116810361022957916024359081168103610229579060443590565b80548210156119a05760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160401b038111610d8157601f01601f191660200190565b9291926119dd826119b6565b916119eb604051938461188c565b829481845281830111610229578281602093846000960137010152565b9080601f8301121561022957816020611a23933591016119d1565b90565b60243590811515820361022957565b6007546001600160a01b03163303611a4957565b60405163118cdaa760e01b8152336004820152602490fd5b6001600160a01b03918216929091831561125b57600092828452826020956002875260409684888820541696879133151580611b51575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284611b1e575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303611afd5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055611ac4565b91939450915080611ba6575b15611b6d57859291879138611a98565b878688611b8a576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015611bcb575b80611b5d5750858252600481523385898420541614611b5d565b5086825260058152878220338352815260ff8883205416611bb1565b6000818152600260205260409020546001600160a01b0316908115611c0a575090565b60249060405190637e27328960e01b82526004820152fd5b90939192833b611c34575b5050505050565b604051630a85bd0160e11b8082526001600160a01b039384166004830152958316602482015260448101919091526080606482015294921692602092918590611c819060848301906117ca565b039483816000978189895af1869181611d2c575b50611cf6575050503d600014611ced573d611caf816119b6565b90611cbd604051928361188c565b81528093823d92013e5b82519283611ce857604051633250574960e11b815260048101849052602490fd5b019050fd5b60609250611cc7565b919450915063ffffffff60e01b1603611d1457503880808080611c2d565b60249060405190633250574960e11b82526004820152fd5b9091508481813d8311611d69575b611d44818361188c565b81010312611d6557516001600160e01b031981168103611d65579038611c95565b8680fd5b503d611d3a565b60001981146102135760010190565b15611d8657565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fdfea264697066735822122026de08ca0c8b45cca15e0733c0437b905cb5c3b6842c80ee18a2ca927abb7fc764736f6c63430008140033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x3A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x40 DUP2 DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR PUSH3 0x393 JUMPI DUP2 MSTORE PUSH1 0x12 DUP3 MSTORE PUSH1 0x20 SWAP3 PUSH18 0x111954D8DA4814995CD9585C98DA08139195 PUSH1 0x72 SHL DUP5 DUP5 ADD MSTORE DUP2 MLOAD SWAP1 DUP3 DUP3 ADD DUP3 DUP2 LT DUP3 DUP3 GT OR PUSH3 0x393 JUMPI DUP4 MSTORE PUSH1 0x4 SWAP2 DUP3 DUP2 MSTORE PUSH4 0x44534349 PUSH1 0xE0 SHL DUP7 DUP3 ADD MSTORE DUP5 MLOAD SWAP1 DUP3 DUP3 GT PUSH3 0x37E JUMPI PUSH1 0x0 SWAP7 DUP8 SLOAD SWAP3 PUSH1 0x1 SWAP8 DUP9 DUP6 DUP2 SHR SWAP6 AND DUP1 ISZERO PUSH3 0x373 JUMPI JUMPDEST DUP4 DUP7 LT EQ PUSH3 0x360 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP6 DUP7 DUP2 GT PUSH3 0x30D JUMPI JUMPDEST POP DUP4 SWAP1 DUP7 DUP4 GT PUSH1 0x1 EQ PUSH3 0x2A9 JUMPI DUP12 SWAP3 PUSH3 0x29D JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP9 SHL OR DUP9 SSTORE JUMPDEST DUP2 MLOAD SWAP4 DUP5 GT PUSH3 0x28A JUMPI DUP7 SLOAD DUP8 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x27F JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x26C JUMPI SWAP1 DUP2 DUP5 DUP7 SWAP6 SWAP5 SWAP4 GT PUSH3 0x215 JUMPI JUMPDEST POP DUP1 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH3 0x1AD JUMPI POP DUP8 SWAP3 PUSH3 0x1A1 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP4 SSTORE JUMPDEST CALLER ISZERO PUSH3 0x18C JUMPI POP PUSH1 0x7 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD SWAP4 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 DUP1 PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE PUSH2 0x1DF8 SWAP1 DUP2 PUSH3 0x3AF DUP3 CODECOPY RETURN JUMPDEST DUP4 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x114 JUMP JUMPDEST SWAP2 SWAP1 DUP8 SWAP5 POP PUSH1 0x1F NOT DUP5 AND DUP6 DUP11 MSTORE DUP4 DUP11 KECCAK256 SWAP4 DUP11 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x1FB JUMPI POP POP DUP5 GT PUSH3 0x1E1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0x128 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x1D3 JUMP JUMPDEST DUP5 DUP5 ADD MLOAD DUP7 SSTORE DUP11 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 SWAP1 DUP2 ADD SWAP1 PUSH3 0x1C1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP DUP8 DUP10 MSTORE DUP2 DUP10 KECCAK256 DUP5 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP9 LT PUSH3 0x262 JUMPI JUMPDEST SWAP2 DUP8 SWAP7 DUP12 SWAP3 SWAP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x253 JUMPI POP POP PUSH3 0xFE JUMP JUMPDEST DUP12 DUP2 SSTORE DUP8 SWAP7 POP DUP11 SWAP2 ADD PUSH3 0x243 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x233 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP7 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xE7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xB9 JUMP JUMPDEST DUP12 DUP1 MSTORE DUP5 DUP13 KECCAK256 DUP12 SWAP5 POP SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP14 JUMPDEST DUP8 DUP3 DUP3 LT PUSH3 0x2F6 JUMPI POP POP DUP5 GT PUSH3 0x2DC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP9 SSTORE PUSH3 0xCD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x2CE JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP15 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP1 SWAP2 POP DUP11 DUP1 MSTORE DUP4 DUP12 KECCAK256 DUP7 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP7 DUP7 LT PUSH3 0x356 JUMPI JUMPDEST SWAP2 DUP13 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x347 JUMPI POP POP PUSH3 0xA3 JUMP JUMPDEST DUP14 DUP2 SSTORE DUP6 SWAP5 POP DUP13 SWAP2 ADD PUSH3 0x337 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x329 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x22 DUP8 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST SWAP5 PUSH1 0x7F AND SWAP5 PUSH3 0x8C JUMP JUMPDEST PUSH1 0x41 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1722 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x167F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1641 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x155A JUMPI DUP1 PUSH4 0x20A2B3A0 EQ PUSH2 0x1494 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x147D JUMPI DUP1 PUSH4 0x2BC6C4E3 EQ PUSH2 0x13C9 JUMPI DUP1 PUSH4 0x2EF706AB EQ PUSH2 0x1371 JUMPI DUP1 PUSH4 0x30BDB351 EQ PUSH2 0x1346 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1318 JUMPI DUP1 PUSH4 0x4F7A3A75 EQ PUSH2 0x8C5 JUMPI DUP1 PUSH4 0x507D34A5 EQ PUSH2 0x83A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x80A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x754 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x72B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0x9A60F5BE EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x9E6B3F42 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22E JUMPI PUSH4 0xF9202F00 EQ PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x164 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x15C DUP5 PUSH2 0x1BE7 JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1D7F JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x17E DUP2 SLOAD PUSH2 0x1D70 JUMP JUMPDEST SWAP1 SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 DUP3 ADD SLOAD SWAP2 PUSH1 0xA DUP4 MUL SWAP3 DUP1 DUP5 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0x213 JUMPI PUSH32 0xBF72494ABEB41EBCBEBB2336BEA955F18098FF14BC9264D4AB666168B67AF0B3 DUP3 DUP5 PUSH32 0x2E2699C09F8992C0D6290F13906BC2EE1123DA7FCB3A7524E043593857094766 SWAP6 PUSH1 0x6 DUP9 SWAP6 ADD SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP3 PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x247 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x24F PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x7 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x7 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x2D5 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x2DD PUSH2 0x1805 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x32F DUP2 PUSH2 0x1BE7 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x36B PUSH2 0x348 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x356 DUP2 PUSH2 0x1871 JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x388 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x390 PUSH2 0x1805 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x229 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x229 JUMPI PUSH2 0x3C8 PUSH2 0x3DA SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP3 PUSH2 0x3D4 DUP4 DUP4 DUP4 PUSH2 0x1A61 JUMP JUMPDEST CALLER PUSH2 0x1C22 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x3F5 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x46E JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x43E DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x229 JUMPI PUSH2 0x4D0 PUSH1 0x20 PUSH2 0x4BD DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1A08 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x17A7 JUMP JUMPDEST DUP2 ADD PUSH1 0xC DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x229 JUMPI PUSH2 0x602 PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x509 DUP3 PUSH2 0x1855 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 PUSH1 0x60 SWAP4 DUP5 DUP2 MSTORE DUP5 DUP5 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP5 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 PUSH2 0x54C DUP6 PUSH2 0x15C DUP4 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x566 DUP7 PUSH2 0x1855 JUMP JUMPDEST PUSH2 0x56F DUP2 PUSH2 0x18AD JUMP JUMPDEST DUP7 MSTORE PUSH2 0x634 PUSH2 0x580 PUSH1 0x1 DUP4 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP7 DUP5 DUP2 ADD SWAP8 DUP9 MSTORE DUP4 PUSH1 0x2 DUP5 ADD SLOAD AND SWAP1 PUSH1 0x40 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 DUP5 ADD SLOAD DUP8 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x5AD PUSH1 0x4 DUP7 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 DUP7 ADD SLOAD SWAP9 PUSH1 0xA0 DUP5 ADD SWAP10 DUP11 MSTORE PUSH1 0xFF PUSH1 0x7 PUSH1 0x6 DUP10 ADD SLOAD SWAP9 PUSH1 0xC0 DUP8 ADD SWAP10 DUP11 MSTORE ADD SLOAD AND SWAP8 PUSH1 0xE0 DUP6 ADD SWAP9 ISZERO ISZERO DUP10 MSTORE PUSH2 0x617 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 SWAP8 DUP14 DUP10 MSTORE MLOAD PUSH2 0x100 DUP1 SWAP15 DUP11 ADD MSTORE PUSH2 0x120 DUP10 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x1F NOT SWAP8 PUSH1 0x40 DUP10 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x17CA JUMP JUMPDEST SWAP6 MLOAD AND SWAP1 DUP12 ADD MSTORE MLOAD PUSH1 0x80 DUP11 ADD MSTORE MLOAD SWAP1 DUP9 DUP4 SUB ADD PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x17CA JUMP JUMPDEST SWAP4 MLOAD PUSH1 0xC0 DUP7 ADD MSTORE MLOAD PUSH1 0xE0 DUP6 ADD MSTORE MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x670 DUP3 PUSH2 0x181B JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x704 JUMPI POP PUSH1 0x1 EQ PUSH2 0x6AB JUMPI JUMPDEST PUSH2 0x36B DUP5 PUSH2 0x697 DUP2 DUP7 SUB DUP3 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE SWAP3 POP PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP3 DUP5 LT PUSH2 0x6EC JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x697 DUP3 PUSH2 0x687 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x697 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x687 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x76D PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7D2 PUSH2 0x17EF JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x20 PUSH2 0x828 PUSH1 0x4 CALLDATALOAD PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0x4727B85A09E6CA94A7E26B46423373A951492773E32FBEFDE21A3CA644830351 PUSH1 0x20 PUSH2 0x879 PUSH2 0x1A26 JUMP JUMPDEST PUSH2 0x881 PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x895 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x15C DUP7 PUSH2 0x1BE7 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0x8BA DUP2 PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x8DE PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x229 JUMPI PUSH2 0x8FD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1A08 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x229 JUMPI PUSH2 0x91D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x229 JUMPI PUSH2 0x93C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1A08 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x229 JUMPI PUSH2 0x95C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1A08 JUMP JUMPDEST SWAP2 PUSH1 0x2 PUSH1 0x8 SLOAD EQ PUSH2 0x1306 JUMPI PUSH1 0x2 PUSH1 0x8 SSTORE DUP5 MLOAD ISZERO PUSH2 0x12C9 JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP8 MLOAD PUSH2 0x988 DUP2 DUP4 DUP6 DUP13 ADD PUSH2 0x17A7 JUMP JUMPDEST DUP2 ADD PUSH1 0xC DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH2 0x1274 JUMPI PUSH1 0x9 SLOAD SWAP4 PUSH2 0x9A4 DUP6 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH2 0x9B3 DUP2 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x125B JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1224 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP11 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE DUP9 SWAP2 SWAP1 DUP4 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP1 LOG4 PUSH2 0x120B JUMPI DUP4 EXTCODESIZE PUSH2 0x10C0 JUMPI JUMPDEST POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD81 JUMPI DUP2 SWAP1 PUSH2 0xA81 DUP5 SLOAD PUSH2 0x181B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1070 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1004 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xFF9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 PUSH1 0x20 PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xAED DUP3 PUSH2 0x1855 JUMP JUMPDEST DUP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD81 JUMPI DUP2 SWAP1 PUSH2 0xB52 DUP6 SLOAD PUSH2 0x181B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xFA9 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xF3D JUMPI PUSH1 0x0 SWAP3 PUSH2 0xF32 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD81 JUMPI DUP2 SWAP1 PUSH2 0xBAC PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x181B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xEDF JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE6D JUMPI PUSH1 0x0 SWAP3 PUSH2 0xE62 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD81 JUMPI PUSH2 0xC38 PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x181B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE1B JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xDA2 JUMPI SWAP3 DUP3 PUSH1 0x7 SWAP4 PUSH1 0xE0 SWAP4 PUSH2 0xCA8 SWAP8 SWAP7 PUSH1 0x0 SWAP3 PUSH2 0xD97 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP6 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP8 MLOAD PUSH2 0xCBE DUP2 DUP4 DUP6 DUP13 ADD PUSH2 0x17A7 JUMP JUMPDEST DUP2 ADD PUSH1 0xC DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0xD81 JUMPI PUSH1 0x20 SWAP6 PUSH2 0xD71 PUSH32 0xC1DEF36EF14836E9B195F50C1FBC0B8035E8C6C472625326C1ADD6BB08CCD76 SWAP4 PUSH2 0xD30 DUP7 PUSH2 0xD59 SWAP6 PUSH1 0x1 DUP12 SWAP10 ADD DUP2 SSTORE PUSH2 0x1988 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP9 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST DUP4 DUP2 SUB DUP11 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP7 PUSH2 0x17CA JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0xC65 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xE03 JUMPI POP DUP4 PUSH1 0xE0 SWAP4 PUSH2 0xCA8 SWAP8 SWAP7 SWAP4 PUSH1 0x1 SWAP4 PUSH1 0x7 SWAP8 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xDEA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0xC7D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0xDDA JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xE5B JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xE4F JUMPI POP POP PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE39 JUMP JUMPDEST POP DUP1 PUSH2 0xE39 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xBCC JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xEC4 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xEAB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0xBE4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xE9B JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xE80 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xF2B JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xF1C JUMPI POP POP PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xF06 JUMP JUMPDEST POP DUP1 PUSH2 0xF00 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xB72 JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xF8E JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xF75 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0xB87 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xF68 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xF4D JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xFF2 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xFE3 JUMPI POP POP PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xFCD JUMP JUMPDEST POP DUP1 PUSH2 0xFC7 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xAA1 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1055 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x103C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xAB6 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x102F JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1014 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x10B9 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x10AA JUMPI POP POP PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1094 JUMP JUMPDEST POP DUP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x20 PUSH2 0x1100 SWAP2 PUSH1 0x40 SWAP9 SWAP8 SWAP7 SWAP6 SWAP9 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP5 ADD MSTORE DUP10 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x11C6 JUMPI JUMPDEST POP PUSH2 0x1181 JUMPI DUP7 RETURNDATASIZE ISZERO PUSH2 0x1179 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1130 DUP3 PUSH2 0x19B6 JUMP JUMPDEST SWAP2 PUSH2 0x113E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x188C JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST DUP2 MLOAD SWAP2 DUP3 PUSH2 0x1172 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x1149 JUMP JUMPDEST SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x757A42FF PUSH1 0xE1 SHL ADD PUSH2 0x11A5 JUMPI DUP7 PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1203 JUMPI JUMPDEST DUP2 PUSH2 0x11E2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x188C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x229 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x229 JUMPI SWAP1 DUP9 PUSH2 0x1119 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526573656172636820776974682074686973207469746C6520616C7265616479 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x20657869737473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5469746C652063616E6E6F7420626520656D707479 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH2 0x3DA PUSH2 0x1329 CALLDATASIZE PUSH2 0x1953 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1337 DUP5 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x3D4 DUP4 DUP4 DUP4 PUSH2 0x1A61 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x9 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x213 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x138A PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x13BB SWAP2 PUSH2 0x1988 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x229 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13EB PUSH2 0x17EF JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x1469 JUMPI DUP7 DUP7 PUSH2 0x1429 DUP3 DUP9 SUB DUP4 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1452 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1443 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1413 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH2 0x3DA PUSH2 0x148E CALLDATASIZE PUSH2 0x1953 JUMP JUMPDEST SWAP2 PUSH2 0x1A61 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x151E PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x14C1 DUP2 PUSH2 0x18AD JUMP JUMPDEST SWAP1 PUSH2 0x14CE PUSH1 0x1 DUP3 ADD PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD SWAP3 SWAP1 PUSH2 0x1544 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14F3 PUSH1 0x4 DUP5 ADD PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x5 DUP5 ADD SLOAD SWAP6 PUSH2 0x152C PUSH1 0xFF PUSH1 0x7 PUSH1 0x6 DUP9 ADD SLOAD SWAP8 ADD SLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x100 DUP1 DUP14 MSTORE DUP13 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x17CA JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x60 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH1 0x80 DUP9 ADD MSTORE PUSH2 0x17CA JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x1573 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x157F DUP2 PUSH2 0x1BE7 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x162E JUMPI JUMPDEST DUP1 PUSH2 0x1601 JUMPI JUMPDEST PUSH2 0x15E9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP3 SWAP2 DUP5 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x158E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x1588 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x165E DUP2 PUSH2 0x1BE7 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD PUSH2 0x16A0 DUP2 PUSH2 0x181B JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x704 JUMPI POP PUSH1 0x1 EQ PUSH2 0x16C9 JUMPI PUSH2 0x36B DUP5 PUSH2 0x697 DUP2 DUP7 SUB DUP3 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE SWAP3 POP PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP5 LT PUSH2 0x170A JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x697 DUP3 PUSH2 0x687 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x16F2 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x229 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x24832483 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1764 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x1796 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1785 JUMPI JUMPDEST POP DUP4 PUSH2 0x175D JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x177E JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x17BA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17AA JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x17E3 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x17A7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x229 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x229 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x184B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1835 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x182A JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x18C1 DUP5 PUSH2 0x181B JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1930 JUMPI POP PUSH1 0x1 EQ PUSH2 0x18ED JUMPI JUMPDEST POP POP PUSH2 0x18EB SWAP3 POP SUB DUP4 PUSH2 0x188C JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1918 JUMPI POP POP PUSH2 0x18EB SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x18DD JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1900 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18EB SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x229 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x229 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x19A0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD81 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x19DD DUP3 PUSH2 0x19B6 JUMP JUMPDEST SWAP2 PUSH2 0x19EB PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x188C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x229 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x229 JUMPI DUP2 PUSH1 0x20 PUSH2 0x1A23 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x229 JUMPI JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1A49 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 ISZERO PUSH2 0x125B JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0x1B51 JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0x1B1E JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0x1AFD JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0x1BA6 JUMPI JUMPDEST ISZERO PUSH2 0x1B6D JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0x1A98 JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0x1B8A JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0x1BCB JUMPI JUMPDEST DUP1 PUSH2 0x1B5D JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0x1B5D JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0x1BB1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1C0A JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP4 EXTCODESIZE PUSH2 0x1C34 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP6 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE SWAP5 SWAP3 AND SWAP3 PUSH1 0x20 SWAP3 SWAP2 DUP6 SWAP1 PUSH2 0x1C81 SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST SUB SWAP5 DUP4 DUP2 PUSH1 0x0 SWAP8 DUP2 DUP10 DUP10 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x1D2C JUMPI JUMPDEST POP PUSH2 0x1CF6 JUMPI POP POP POP RETURNDATASIZE PUSH1 0x0 EQ PUSH2 0x1CED JUMPI RETURNDATASIZE PUSH2 0x1CAF DUP2 PUSH2 0x19B6 JUMP JUMPDEST SWAP1 PUSH2 0x1CBD PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x188C JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP4 DUP3 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP3 MLOAD SWAP3 DUP4 PUSH2 0x1CE8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD SWAP1 POP REVERT JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x1CC7 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SUB PUSH2 0x1D14 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1D69 JUMPI JUMPDEST PUSH2 0x1D44 DUP2 DUP4 PUSH2 0x188C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1D65 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x1D65 JUMPI SWAP1 CODESIZE PUSH2 0x1C95 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x213 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1D86 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xDE ADDMOD 0xCA 0xC DUP12 GASLIMIT 0xCC LOG1 0x5E SMOD CALLER 0xC0 NUMBER PUSH28 0x905CB5C3B6842C80EE18A2CA927ABB7FC764736F6C63430008140033 ","sourceMap":"309:4739:23:-:0;;;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;309:4739:23;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;;;-1:-1:-1;;;;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;309:4739:23;;;;;;;;;;;;;;1319:10;1273:26:2;1269:95;;-1:-1:-1;3004:6:2;309:4739:23;;1319:10;-1:-1:-1;;;;;;309:4739:23;;;;;;;;;;1319:10;;-1:-1:-1;;;;;309:4739:23;;3052:40:2;;309:4739:23;3052:40:2;309:4739:23;2061:21:15;309:4739:23;1341:19;309:4739;;;;;;;;1269:95:2;309:4739:23;;;;1322:31:2;;;;;;;;309:4739:23;1322:31:2;309:4739:23;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;-1:-1:-1;;;309:4739:23;;;;;;;;;;;;;;;;-1:-1:-1;;;309:4739:23;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;-1:-1:-1;;309:4739:23;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;-1:-1:-1;;;309:4739:23;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;-1:-1:-1;309:4739:23;;;;;-1:-1:-1;309:4739:23;;;;;-1:-1:-1;309:4739:23;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":6149,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_20532":{"entryPoint":6127,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":6483,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_available_length_string":{"entryPoint":6609,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":6694,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":6664,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":6090,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_string":{"entryPoint":6582,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":6317,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":6055,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6171,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6284,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_20544":{"entryPoint":6229,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_32501":{"entryPoint":6257,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approve":{"entryPoint":null,"id":1586,"parameterSlots":1,"returnSlots":0},"fun_checkOnERC721Received":{"entryPoint":7202,"id":2020,"parameterSlots":5,"returnSlots":0},"fun_checkOwner":{"entryPoint":6709,"id":464,"parameterSlots":0,"returnSlots":0},"fun_requireOwned":{"entryPoint":7143,"id":1652,"parameterSlots":1,"returnSlots":1},"fun_transferFrom":{"entryPoint":6753,"id":1013,"parameterSlots":3,"returnSlots":0},"increment_uint256":{"entryPoint":7536,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_547b":{"entryPoint":7551,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_uint256_dyn":{"entryPoint":6536,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146117225750806306fdde031461167f578063081812fc14611641578063095ea7b31461155a57806320a2b3a01461149457806323b872dd1461147d5780632bc6c4e3146113c95780632ef706ab1461137157806330bdb3511461134657806342842e0e146113185780634f7a3a75146108c5578063507d34a51461083a5780636352211e1461080a57806370a08231146107b1578063715018a6146107545780638da5cb5b1461072b57806395d89b411461064c5780639a60f5be146104e35780639e6b3f4214610487578063a22cb465146103dc578063b88d4fde1461036f578063c87b56dd14610312578063e985e9c5146102bc578063f2fde38b1461022e5763f9202f001461013257600080fd5b346102295760208060031936011261022957600435906101646001600160a01b0361015c84611be7565b161515611d7f565b81600052600a8152600560406000200161017e8154611d70565b905581600052600a8152604060002090600582015491600a830292808404600a1490151715610213577fbf72494abeb41ebcbebb2336bea955f18098ff14bc9264d4ab666168b67af0b382847f2e2699c09f8992c0d6290f13906bc2ee1123da7fcb3a7524e04359385709476695600688950155604051908152a282600052600a8152600560406000200154604051908152a2005b634e487b7160e01b600052601160045260246000fd5b600080fd5b34610229576020366003190112610229576102476117ef565b61024f611a35565b6001600160a01b039081169081156102a357600754826bffffffffffffffffffffffff60a01b821617600755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b34610229576040366003190112610229576102d56117ef565b6102dd611805565b9060018060a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b346102295760203660031901126102295760043561032f81611be7565b50600052600660205261036b61034860406000206118ad565b600060405161035681611871565b526040519182916020835260208301906117ca565b0390f35b34610229576080366003190112610229576103886117ef565b610390611805565b90604435606435926001600160401b0384116102295736602385011215610229576103c86103da9436906024816004013591016119d1565b926103d4838383611a61565b33611c22565b005b34610229576040366003190112610229576103f56117ef565b6103fd611a26565b6001600160a01b0390911690811561046e5733600052600560205260406000208260005260205261043e8160406000209060ff801983541691151516179055565b60405190151581527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051630b61174360e31b815260048101839052602490fd5b34610229576020366003190112610229576004356001600160401b038111610229576104d060206104bd81933690600401611a08565b81604051938285809451938492016117a7565b8101600c81520301902054604051908152f35b346102295760208060031936011261022957610602600435916040519061050982611855565b600060e0606093848152848482015282604082015282858201528460808201528260a08201528260c0820152015260018060a01b039361054c8561015c83611be7565b600052600a81526040600020936040519461056686611855565b61056f816118ad565b8652610634610580600183016118ad565b9684810197885283600284015416906040810191825260038401548782019081526105ad600486016118ad565b906080830191825260058601549860a08401998a5260ff600760068901549860c08701998a520154169760e0850198151589526106176040519d8e9d8e978d895251610100809e8a01526101208901906117ca565b9051601f1997604089828503019101526117ca565b955116908b01525160808a015251908883030160a08901526117ca565b935160c08601525160e0850152511515908301520390f35b3461022957600036600319011261022957604051600060018054906106708261181b565b8085529181811690811561070457506001146106ab575b61036b846106978186038261188c565b6040519182916020835260208301906117ca565b600081815292507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106106ec57505050810160200161069782610687565b805460208587018101919091529093019281016106d4565b60ff191660208087019190915292151560051b850190920192506106979150839050610687565b34610229576000366003190112610229576007546040516001600160a01b039091168152602090f35b346102295760003660031901126102295761076d611a35565b600780546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610229576020366003190112610229576001600160a01b036107d26117ef565b1680156107f15760005260036020526020604060002054604051908152f35b6040516322718ad960e21b815260006004820152602490fd5b34610229576020366003190112610229576020610828600435611be7565b6040516001600160a01b039091168152f35b34610229576040366003190112610229576004357f4727b85a09e6ca94a7e26b46423373a951492773e32fbefde21a3ca6448303516020610879611a26565b610881611a35565b6108956001600160a01b0361015c86611be7565b83600052600a82526108ba8160076040600020019060ff801983541691151516179055565b6040519015158152a2005b346102295760a0366003190112610229576108de6117ef565b6024356001600160401b038111610229576108fd903690600401611a08565b906044356001600160401b0381116102295761091d903690600401611a08565b6064356001600160401b0381116102295761093c903690600401611a08565b916084356001600160401b0381116102295761095c903690600401611a08565b916002600854146113065760026008558451156112c95760405160208187516109888183858c016117a7565b8101600c8152030190205461127457600954936109a485611d70565b6009556040516109b381611871565b600081526001600160a01b0384161561125b576000868152600260205260409020546001600160a01b031680611224575b6001600160a01b0385166000818152600360209081526040808320805460010190558a83526002909152812080546001600160a01b0319168317905588919083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a461120b57833b6110c0575b508460005260066020526040600020908051906001600160401b038211610d81578190610a81845461181b565b601f8111611070575b50602090601f831160011461100457600092610ff9575b50508160011b916000199060031b1c19161790555b7ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051868152a160405190610aed82611855565b858252602082015260018060a01b0382166040820152426060820152826080820152600060a0820152600060c0820152600060e082015283600052600a60205260406000209080518051906001600160401b038211610d81578190610b52855461181b565b601f8111610fa9575b50602090601f8311600114610f3d57600092610f32575b50508160011b916000199060031b1c19161782555b60208101518051906001600160401b038211610d81578190610bac600186015461181b565b601f8111610edf575b50602090601f8311600114610e6d57600092610e62575b50508160011b916000199060031b1c19161760018301555b6002820160018060a01b036040830151166bffffffffffffffffffffffff60a01b8254161790556060810151600383015560808101518051906001600160401b038211610d8157610c38600485015461181b565b601f8111610e1b575b50602090601f8311600114610da257928260079360e093610ca89796600092610d97575b50508160011b916000199060031b1c19161760048501555b60a0810151600585015560c081015160068501550151151591019060ff801983541691151516179055565b826040516020818751610cbe8183858c016117a7565b8101600c8152030190205560018060a01b038116600052600b60205260406000209081549168010000000000000000831015610d8157602095610d717f0c1def36ef14836e9b195f50c1fbc0b8035e8c6c472625326c1add6bb08ccd7693610d3086610d599560018b99018155611988565b81549060031b9088821b91600019901b19161790556040519384936040855260408501906117ca565b8381038a8501526001600160a01b03909116966117ca565b0390a36001600855604051908152f35b634e487b7160e01b600052604160045260246000fd5b015190508b80610c65565b906004850160005260206000209160005b601f1985168110610e0357508360e093610ca8979693600193600797601f19811610610dea575b505050811b016004850155610c7d565b015160001960f88460031b161c191690558b8080610dda565b91926020600181928685015181550194019201610db3565b600485016000526020600020601f840160051c810160208510610e5b575b601f830160051c82018110610e4f575050610c41565b60008155600101610e39565b5080610e39565b015190508880610bcc565b9250600185016000526020600020906000935b601f1984168510610ec4576001945083601f19811610610eab575b505050811b016001830155610be4565b015160001960f88460031b161c19169055888080610e9b565b81810151835560209485019460019093019290910190610e80565b909150600185016000526020600020601f840160051c810160208510610f2b575b90849392915b601f830160051c82018110610f1c575050610bb5565b60008155859450600101610f06565b5080610f00565b015190508880610b72565b9250846000526020600020906000935b601f1984168510610f8e576001945083601f19811610610f75575b505050811b018255610b87565b015160001960f88460031b161c19169055888080610f68565b81810151835560209485019460019093019290910190610f4d565b909150846000526020600020601f840160051c810160208510610ff2575b90849392915b601f830160051c82018110610fe3575050610b5b565b60008155859450600101610fcd565b5080610fc7565b015190508880610aa1565b9250836000526020600020906000935b601f1984168510611055576001945083601f1981161061103c575b505050811b019055610ab6565b015160001960f88460031b161c1916905588808061102f565b81810151835560209485019460019093019290910190611014565b909150836000526020600020601f840160051c8101602085106110b9575b90849392915b601f830160051c820181106110aa575050610a8a565b60008155859450600101611094565b508061108e565b602061110091604098979695985180938192630a85bd0160e11b8352336004840152600060248401528960448401526080606484015260848301906117ca565b038160006001600160a01b038c165af1600091816111c6575b5061118157863d15611179573d90611130826119b6565b9161113e604051938461188c565b82523d6000602084013e5b8151918261117257604051633250574960e11b81526001600160a01b0383166004820152602490fd5b6020915001fd5b606090611149565b949593949293926001600160e01b03191663757a42ff60e11b016111a55786610a54565b604051633250574960e11b81526001600160a01b0384166004820152602490fd5b9091506020813d602011611203575b816111e26020938361188c565b8101031261022957516001600160e01b031981168103610229579088611119565b3d91506111d5565b6040516339e3563760e11b815260006004820152602490fd5b600087815260046020526040902080546001600160a01b0319169055806000526003602052604060002060001981540190556109e4565b604051633250574960e11b815260006004820152602490fd5b60405162461bcd60e51b815260206004820152602760248201527f526573656172636820776974682074686973207469746c6520616c72656164796044820152662065786973747360c81b6064820152608490fd5b60405162461bcd60e51b81526020600482015260156024820152745469746c652063616e6e6f7420626520656d70747960581b6044820152606490fd5b604051633ee5aeb560e01b8152600490fd5b34610229576103da61132936611953565b906040519261133784611871565b600084526103d4838383611a61565b3461022957600036600319011261022957600954600019810190811161021357602090604051908152f35b346102295760403660031901126102295761138a6117ef565b6001600160a01b03166000908152600b6020526040902080546024359190821015610229576020916113bb91611988565b90546040519160031b1c8152f35b3461022957602080600319360112610229576001600160a01b036113eb6117ef565b16600052600b8152604060002060405190818382549182815201908192600052846000209060005b868282106114695786866114298288038361188c565b604051928392818401908285525180915260408401929160005b82811061145257505050500390f35b835185528695509381019392810192600101611443565b835485529093019260019283019201611413565b34610229576103da61148e36611953565b91611a61565b3461022957602036600319011261022957600435600052600a60205261151e60406000206114c1816118ad565b906114ce600182016118ad565b600282015460038301549290611544906001600160a01b03166114f3600484016118ad565b60058401549561152c60ff6007600688015497015416966040519a8b9a610100808d528c01906117ca565b908a820360208c01526117ca565b926040890152606088015286820360808801526117ca565b9260a085015260c0840152151560e08301520390f35b34610229576040366003190112610229576115736117ef565b60243561157f81611be7565b3315158061162e575b80611601575b6115e9576001600160a01b039283169282918491167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4600090815260046020526040902080546001600160a01b0319169091179055005b60405163a9fbf51f60e01b8152336004820152602490fd5b5060018060a01b038116600052600560205260406000203360005260205260ff604060002054161561158e565b506001600160a01b038116331415611588565b346102295760203660031901126102295760043561165e81611be7565b506000526004602052602060018060a01b0360406000205416604051908152f35b3461022957600036600319011261022957604051600080546116a08161181b565b8084529060019081811690811561070457506001146116c95761036b846106978186038261188c565b600080805292507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061170a57505050810160200161069782610687565b805460208587018101919091529093019281016116f2565b34610229576020366003190112610229576004359063ffffffff60e01b821680920361022957602091632483248360e11b8114908115611764575b5015158152f35b6380ac58cd60e01b811491508115611796575b8115611785575b508361175d565b6301ffc9a760e01b1490508361177e565b635b5e139f60e01b81149150611777565b60005b8381106117ba5750506000910152565b81810151838201526020016117aa565b906020916117e3815180928185528580860191016117a7565b601f01601f1916010190565b600435906001600160a01b038216820361022957565b602435906001600160a01b038216820361022957565b90600182811c9216801561184b575b602083101461183557565b634e487b7160e01b600052602260045260246000fd5b91607f169161182a565b61010081019081106001600160401b03821117610d8157604052565b602081019081106001600160401b03821117610d8157604052565b90601f801991011681019081106001600160401b03821117610d8157604052565b90604051918260008254926118c18461181b565b90818452600194858116908160001461193057506001146118ed575b50506118eb9250038361188c565b565b9093915060005260209081600020936000915b8183106119185750506118eb935082010138806118dd565b85548884018501529485019487945091830191611900565b9150506118eb94506020925060ff191682840152151560051b82010138806118dd565b6060906003190112610229576001600160a01b0390600435828116810361022957916024359081168103610229579060443590565b80548210156119a05760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160401b038111610d8157601f01601f191660200190565b9291926119dd826119b6565b916119eb604051938461188c565b829481845281830111610229578281602093846000960137010152565b9080601f8301121561022957816020611a23933591016119d1565b90565b60243590811515820361022957565b6007546001600160a01b03163303611a4957565b60405163118cdaa760e01b8152336004820152602490fd5b6001600160a01b03918216929091831561125b57600092828452826020956002875260409684888820541696879133151580611b51575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284611b1e575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303611afd5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055611ac4565b91939450915080611ba6575b15611b6d57859291879138611a98565b878688611b8a576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015611bcb575b80611b5d5750858252600481523385898420541614611b5d565b5086825260058152878220338352815260ff8883205416611bb1565b6000818152600260205260409020546001600160a01b0316908115611c0a575090565b60249060405190637e27328960e01b82526004820152fd5b90939192833b611c34575b5050505050565b604051630a85bd0160e11b8082526001600160a01b039384166004830152958316602482015260448101919091526080606482015294921692602092918590611c819060848301906117ca565b039483816000978189895af1869181611d2c575b50611cf6575050503d600014611ced573d611caf816119b6565b90611cbd604051928361188c565b81528093823d92013e5b82519283611ce857604051633250574960e11b815260048101849052602490fd5b019050fd5b60609250611cc7565b919450915063ffffffff60e01b1603611d1457503880808080611c2d565b60249060405190633250574960e11b82526004820152fd5b9091508481813d8311611d69575b611d44818361188c565b81010312611d6557516001600160e01b031981168103611d65579038611c95565b8680fd5b503d611d3a565b60001981146102135760010190565b15611d8657565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fdfea264697066735822122026de08ca0c8b45cca15e0733c0437b905cb5c3b6842c80ee18a2ca927abb7fc764736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1722 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x167F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1641 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x155A JUMPI DUP1 PUSH4 0x20A2B3A0 EQ PUSH2 0x1494 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x147D JUMPI DUP1 PUSH4 0x2BC6C4E3 EQ PUSH2 0x13C9 JUMPI DUP1 PUSH4 0x2EF706AB EQ PUSH2 0x1371 JUMPI DUP1 PUSH4 0x30BDB351 EQ PUSH2 0x1346 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1318 JUMPI DUP1 PUSH4 0x4F7A3A75 EQ PUSH2 0x8C5 JUMPI DUP1 PUSH4 0x507D34A5 EQ PUSH2 0x83A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x80A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x754 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x72B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0x9A60F5BE EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x9E6B3F42 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22E JUMPI PUSH4 0xF9202F00 EQ PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x164 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x15C DUP5 PUSH2 0x1BE7 JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1D7F JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x17E DUP2 SLOAD PUSH2 0x1D70 JUMP JUMPDEST SWAP1 SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 DUP3 ADD SLOAD SWAP2 PUSH1 0xA DUP4 MUL SWAP3 DUP1 DUP5 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0x213 JUMPI PUSH32 0xBF72494ABEB41EBCBEBB2336BEA955F18098FF14BC9264D4AB666168B67AF0B3 DUP3 DUP5 PUSH32 0x2E2699C09F8992C0D6290F13906BC2EE1123DA7FCB3A7524E043593857094766 SWAP6 PUSH1 0x6 DUP9 SWAP6 ADD SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP3 PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x247 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x24F PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x7 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x7 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x2D5 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x2DD PUSH2 0x1805 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x32F DUP2 PUSH2 0x1BE7 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x36B PUSH2 0x348 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x356 DUP2 PUSH2 0x1871 JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x388 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x390 PUSH2 0x1805 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x229 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x229 JUMPI PUSH2 0x3C8 PUSH2 0x3DA SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP3 PUSH2 0x3D4 DUP4 DUP4 DUP4 PUSH2 0x1A61 JUMP JUMPDEST CALLER PUSH2 0x1C22 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x3F5 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x46E JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x43E DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x229 JUMPI PUSH2 0x4D0 PUSH1 0x20 PUSH2 0x4BD DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1A08 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x17A7 JUMP JUMPDEST DUP2 ADD PUSH1 0xC DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x229 JUMPI PUSH2 0x602 PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x509 DUP3 PUSH2 0x1855 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 PUSH1 0x60 SWAP4 DUP5 DUP2 MSTORE DUP5 DUP5 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP5 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 PUSH2 0x54C DUP6 PUSH2 0x15C DUP4 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x566 DUP7 PUSH2 0x1855 JUMP JUMPDEST PUSH2 0x56F DUP2 PUSH2 0x18AD JUMP JUMPDEST DUP7 MSTORE PUSH2 0x634 PUSH2 0x580 PUSH1 0x1 DUP4 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP7 DUP5 DUP2 ADD SWAP8 DUP9 MSTORE DUP4 PUSH1 0x2 DUP5 ADD SLOAD AND SWAP1 PUSH1 0x40 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 DUP5 ADD SLOAD DUP8 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x5AD PUSH1 0x4 DUP7 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 DUP7 ADD SLOAD SWAP9 PUSH1 0xA0 DUP5 ADD SWAP10 DUP11 MSTORE PUSH1 0xFF PUSH1 0x7 PUSH1 0x6 DUP10 ADD SLOAD SWAP9 PUSH1 0xC0 DUP8 ADD SWAP10 DUP11 MSTORE ADD SLOAD AND SWAP8 PUSH1 0xE0 DUP6 ADD SWAP9 ISZERO ISZERO DUP10 MSTORE PUSH2 0x617 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 SWAP8 DUP14 DUP10 MSTORE MLOAD PUSH2 0x100 DUP1 SWAP15 DUP11 ADD MSTORE PUSH2 0x120 DUP10 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x1F NOT SWAP8 PUSH1 0x40 DUP10 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x17CA JUMP JUMPDEST SWAP6 MLOAD AND SWAP1 DUP12 ADD MSTORE MLOAD PUSH1 0x80 DUP11 ADD MSTORE MLOAD SWAP1 DUP9 DUP4 SUB ADD PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x17CA JUMP JUMPDEST SWAP4 MLOAD PUSH1 0xC0 DUP7 ADD MSTORE MLOAD PUSH1 0xE0 DUP6 ADD MSTORE MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x670 DUP3 PUSH2 0x181B JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x704 JUMPI POP PUSH1 0x1 EQ PUSH2 0x6AB JUMPI JUMPDEST PUSH2 0x36B DUP5 PUSH2 0x697 DUP2 DUP7 SUB DUP3 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE SWAP3 POP PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP3 DUP5 LT PUSH2 0x6EC JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x697 DUP3 PUSH2 0x687 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x697 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x687 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x76D PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7D2 PUSH2 0x17EF JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x20 PUSH2 0x828 PUSH1 0x4 CALLDATALOAD PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0x4727B85A09E6CA94A7E26B46423373A951492773E32FBEFDE21A3CA644830351 PUSH1 0x20 PUSH2 0x879 PUSH2 0x1A26 JUMP JUMPDEST PUSH2 0x881 PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x895 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x15C DUP7 PUSH2 0x1BE7 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0x8BA DUP2 PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x8DE PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x229 JUMPI PUSH2 0x8FD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1A08 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x229 JUMPI PUSH2 0x91D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x229 JUMPI PUSH2 0x93C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1A08 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x229 JUMPI PUSH2 0x95C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1A08 JUMP JUMPDEST SWAP2 PUSH1 0x2 PUSH1 0x8 SLOAD EQ PUSH2 0x1306 JUMPI PUSH1 0x2 PUSH1 0x8 SSTORE DUP5 MLOAD ISZERO PUSH2 0x12C9 JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP8 MLOAD PUSH2 0x988 DUP2 DUP4 DUP6 DUP13 ADD PUSH2 0x17A7 JUMP JUMPDEST DUP2 ADD PUSH1 0xC DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH2 0x1274 JUMPI PUSH1 0x9 SLOAD SWAP4 PUSH2 0x9A4 DUP6 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH2 0x9B3 DUP2 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x125B JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1224 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP11 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE DUP9 SWAP2 SWAP1 DUP4 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP1 LOG4 PUSH2 0x120B JUMPI DUP4 EXTCODESIZE PUSH2 0x10C0 JUMPI JUMPDEST POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD81 JUMPI DUP2 SWAP1 PUSH2 0xA81 DUP5 SLOAD PUSH2 0x181B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1070 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1004 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xFF9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 PUSH1 0x20 PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xAED DUP3 PUSH2 0x1855 JUMP JUMPDEST DUP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD81 JUMPI DUP2 SWAP1 PUSH2 0xB52 DUP6 SLOAD PUSH2 0x181B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xFA9 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xF3D JUMPI PUSH1 0x0 SWAP3 PUSH2 0xF32 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD81 JUMPI DUP2 SWAP1 PUSH2 0xBAC PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x181B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xEDF JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE6D JUMPI PUSH1 0x0 SWAP3 PUSH2 0xE62 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD81 JUMPI PUSH2 0xC38 PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x181B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE1B JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xDA2 JUMPI SWAP3 DUP3 PUSH1 0x7 SWAP4 PUSH1 0xE0 SWAP4 PUSH2 0xCA8 SWAP8 SWAP7 PUSH1 0x0 SWAP3 PUSH2 0xD97 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP6 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP8 MLOAD PUSH2 0xCBE DUP2 DUP4 DUP6 DUP13 ADD PUSH2 0x17A7 JUMP JUMPDEST DUP2 ADD PUSH1 0xC DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0xD81 JUMPI PUSH1 0x20 SWAP6 PUSH2 0xD71 PUSH32 0xC1DEF36EF14836E9B195F50C1FBC0B8035E8C6C472625326C1ADD6BB08CCD76 SWAP4 PUSH2 0xD30 DUP7 PUSH2 0xD59 SWAP6 PUSH1 0x1 DUP12 SWAP10 ADD DUP2 SSTORE PUSH2 0x1988 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP9 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST DUP4 DUP2 SUB DUP11 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP7 PUSH2 0x17CA JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0xC65 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xE03 JUMPI POP DUP4 PUSH1 0xE0 SWAP4 PUSH2 0xCA8 SWAP8 SWAP7 SWAP4 PUSH1 0x1 SWAP4 PUSH1 0x7 SWAP8 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xDEA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0xC7D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0xDDA JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xE5B JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xE4F JUMPI POP POP PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE39 JUMP JUMPDEST POP DUP1 PUSH2 0xE39 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xBCC JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xEC4 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xEAB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0xBE4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xE9B JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xE80 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xF2B JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xF1C JUMPI POP POP PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xF06 JUMP JUMPDEST POP DUP1 PUSH2 0xF00 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xB72 JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xF8E JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xF75 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0xB87 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xF68 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xF4D JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xFF2 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xFE3 JUMPI POP POP PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xFCD JUMP JUMPDEST POP DUP1 PUSH2 0xFC7 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xAA1 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1055 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x103C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xAB6 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x102F JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1014 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x10B9 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x10AA JUMPI POP POP PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1094 JUMP JUMPDEST POP DUP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x20 PUSH2 0x1100 SWAP2 PUSH1 0x40 SWAP9 SWAP8 SWAP7 SWAP6 SWAP9 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP5 ADD MSTORE DUP10 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x11C6 JUMPI JUMPDEST POP PUSH2 0x1181 JUMPI DUP7 RETURNDATASIZE ISZERO PUSH2 0x1179 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1130 DUP3 PUSH2 0x19B6 JUMP JUMPDEST SWAP2 PUSH2 0x113E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x188C JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST DUP2 MLOAD SWAP2 DUP3 PUSH2 0x1172 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x1149 JUMP JUMPDEST SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x757A42FF PUSH1 0xE1 SHL ADD PUSH2 0x11A5 JUMPI DUP7 PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1203 JUMPI JUMPDEST DUP2 PUSH2 0x11E2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x188C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x229 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x229 JUMPI SWAP1 DUP9 PUSH2 0x1119 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526573656172636820776974682074686973207469746C6520616C7265616479 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x20657869737473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5469746C652063616E6E6F7420626520656D707479 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH2 0x3DA PUSH2 0x1329 CALLDATASIZE PUSH2 0x1953 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1337 DUP5 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x3D4 DUP4 DUP4 DUP4 PUSH2 0x1A61 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x9 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x213 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x138A PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x13BB SWAP2 PUSH2 0x1988 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x229 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13EB PUSH2 0x17EF JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x1469 JUMPI DUP7 DUP7 PUSH2 0x1429 DUP3 DUP9 SUB DUP4 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1452 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1443 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1413 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH2 0x3DA PUSH2 0x148E CALLDATASIZE PUSH2 0x1953 JUMP JUMPDEST SWAP2 PUSH2 0x1A61 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x151E PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x14C1 DUP2 PUSH2 0x18AD JUMP JUMPDEST SWAP1 PUSH2 0x14CE PUSH1 0x1 DUP3 ADD PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD SWAP3 SWAP1 PUSH2 0x1544 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14F3 PUSH1 0x4 DUP5 ADD PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x5 DUP5 ADD SLOAD SWAP6 PUSH2 0x152C PUSH1 0xFF PUSH1 0x7 PUSH1 0x6 DUP9 ADD SLOAD SWAP8 ADD SLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x100 DUP1 DUP14 MSTORE DUP13 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x17CA JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x60 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH1 0x80 DUP9 ADD MSTORE PUSH2 0x17CA JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH2 0x1573 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x157F DUP2 PUSH2 0x1BE7 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x162E JUMPI JUMPDEST DUP1 PUSH2 0x1601 JUMPI JUMPDEST PUSH2 0x15E9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP3 SWAP2 DUP5 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x158E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x1588 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x165E DUP2 PUSH2 0x1BE7 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD PUSH2 0x16A0 DUP2 PUSH2 0x181B JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x704 JUMPI POP PUSH1 0x1 EQ PUSH2 0x16C9 JUMPI PUSH2 0x36B DUP5 PUSH2 0x697 DUP2 DUP7 SUB DUP3 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE SWAP3 POP PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP5 LT PUSH2 0x170A JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x697 DUP3 PUSH2 0x687 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x16F2 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x229 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x24832483 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1764 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x1796 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1785 JUMPI JUMPDEST POP DUP4 PUSH2 0x175D JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x177E JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x17BA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17AA JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x17E3 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x17A7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x229 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x229 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x184B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1835 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x182A JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x18C1 DUP5 PUSH2 0x181B JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1930 JUMPI POP PUSH1 0x1 EQ PUSH2 0x18ED JUMPI JUMPDEST POP POP PUSH2 0x18EB SWAP3 POP SUB DUP4 PUSH2 0x188C JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1918 JUMPI POP POP PUSH2 0x18EB SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x18DD JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1900 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18EB SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x229 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x229 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x229 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x19A0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD81 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x19DD DUP3 PUSH2 0x19B6 JUMP JUMPDEST SWAP2 PUSH2 0x19EB PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x188C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x229 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x229 JUMPI DUP2 PUSH1 0x20 PUSH2 0x1A23 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x229 JUMPI JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1A49 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 ISZERO PUSH2 0x125B JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0x1B51 JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0x1B1E JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0x1AFD JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0x1BA6 JUMPI JUMPDEST ISZERO PUSH2 0x1B6D JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0x1A98 JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0x1B8A JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0x1BCB JUMPI JUMPDEST DUP1 PUSH2 0x1B5D JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0x1B5D JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0x1BB1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1C0A JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP4 EXTCODESIZE PUSH2 0x1C34 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP6 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE SWAP5 SWAP3 AND SWAP3 PUSH1 0x20 SWAP3 SWAP2 DUP6 SWAP1 PUSH2 0x1C81 SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x17CA JUMP JUMPDEST SUB SWAP5 DUP4 DUP2 PUSH1 0x0 SWAP8 DUP2 DUP10 DUP10 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x1D2C JUMPI JUMPDEST POP PUSH2 0x1CF6 JUMPI POP POP POP RETURNDATASIZE PUSH1 0x0 EQ PUSH2 0x1CED JUMPI RETURNDATASIZE PUSH2 0x1CAF DUP2 PUSH2 0x19B6 JUMP JUMPDEST SWAP1 PUSH2 0x1CBD PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x188C JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP4 DUP3 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP3 MLOAD SWAP3 DUP4 PUSH2 0x1CE8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD SWAP1 POP REVERT JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x1CC7 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SUB PUSH2 0x1D14 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1D69 JUMPI JUMPDEST PUSH2 0x1D44 DUP2 DUP4 PUSH2 0x188C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1D65 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x1D65 JUMPI SWAP1 CODESIZE PUSH2 0x1C95 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x213 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1D86 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xDE ADDMOD 0xCA 0xC DUP12 GASLIMIT 0xCC LOG1 0x5E SMOD CALLER 0xC0 NUMBER PUSH28 0x905CB5C3B6842C80EE18A2CA927ABB7FC764736F6C63430008140033 ","sourceMap":"309:4739:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2860:63;-1:-1:-1;;;;;2192:22:7;309:4739:23;2192:22:7;:::i;:::-;309:4739:23;2868:30;;2860:63;:::i;:::-;309:4739;;;2942:12;309:4739;;2942:35;309:4739;;;2942:35;:37;309:4739;;2942:37;:::i;:::-;309:4739;;;;;2942:12;309:4739;;;;;3372:22;2942:35;3372:22;;309:4739;;2942:12;309:4739;;;;;;2942:12;309:4739;;;;;;;3414:49;3349:20;;3040:59;3349:20;;;;;309:4739;;;;;;3414:49;309:4739;;;2942:12;309:4739;;2942:35;309:4739;;;3063:35;309:4739;;;;;;3040:59;309:4739;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;309:4739:23;;;;2627:22:2;;2623:91;;3004:6;309:4739:23;;;;;;;;3004:6:2;309:4739:23;;3052:40:2;309:4739:23;3052:40:2;;309:4739:23;2623:91:2;309:4739:23;;-1:-1:-1;;;2672:31:2;;309:4739:23;;2672:31:2;;309:4739:23;;;2672:31:2;309:4739:23;;;;;;-1:-1:-1;;309:4739:23;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;3776:18:7;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;1308:22:10;;;:::i;:::-;;309:4739:23;;1367:10:10;309:4739:23;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;;;;4851:4:7;309:4739:23;;;;;;;;;;;:::i;:::-;4766:7:7;;;;;;:::i;:::-;735:10:13;4851:4:7;:::i;:::-;309:4739:23;;;;;;;-1:-1:-1;;309:4739:23;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;309:4739:23;;;;15418:22:7;;15414:91;;735:10:13;309:4739:23;;15514:18:7;309:4739:23;;;;;;;;;;15514:46:7;309:4739:23;;;;;;;;;;;;;;;;;;;15514:46:7;309:4739:23;;;;;;;15575:41:7;309:4739:23;735:10:13;15575:41:7;;309:4739:23;15414:91:7;309:4739:23;;-1:-1:-1;;;15463:31:7;;309:4739:23;15463:31:7;;309:4739:23;;;;;15463:31:7;309:4739:23;;;;;;-1:-1:-1;;309:4739:23;;;;;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;836:48;309:4739;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2192:22:7;4090:63:23;2192:22:7;;;;:::i;4090:63:23:-;309:4739;;4170:12;309:4739;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;;2473:7:7;309:4739:23;;;;;;:::i;:::-;;;;;;;;;2473:7:7;;;;309:4739:23;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;309:4739:23;;;;;;;-1:-1:-1;;;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;-1:-1:-1;309:4739:23;;-1:-1:-1;309:4739:23;;;;;;;;-1:-1:-1;;309:4739:23;;;;1710:6:2;309:4739:23;;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;1500:62:2;;:::i;:::-;3004:6;309:4739:23;;-1:-1:-1;;;;;;309:4739:23;;;;;;;-1:-1:-1;;;;;309:4739:23;3052:40:2;309:4739:23;;3052:40:2;309:4739:23;;;;;;;-1:-1:-1;;309:4739:23;;;;-1:-1:-1;;;;;309:4739:23;;:::i;:::-;;1947:19:7;;1943:87;;309:4739:23;;;;;;;;;;;;;;;;1943:87:7;309:4739:23;;-1:-1:-1;;;1989:30:7;;309:4739:23;;1989:30:7;;309:4739:23;;;1989:30:7;309:4739:23;;;;;;-1:-1:-1;;309:4739:23;;;;;2192:22:7;309:4739:23;;2192:22:7;:::i;:::-;309:4739:23;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;3835:30;309:4739;;;:::i;:::-;1500:62:2;;:::i;:::-;3695:63:23;-1:-1:-1;;;;;2192:22:7;;;:::i;3695:63:23:-;309:4739;;;3777:12;309:4739;;3777:43;309:4739;3777:32;309:4739;;;3777:32;309:4739;;;;;;;;;;;;;;;3777:43;309:4739;;;;;;;3835:30;309:4739;;;;;;;-1:-1:-1;;309:4739:23;;;;;;:::i;:::-;;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;;:::i;:::-;;1899:1:15;2702:7;309:4739:23;2702:18:15;2698:86;;1899:1;2702:7;309:4739:23;;;1890:23;309:4739;;;;;;;;;;;;;;;:::i;:::-;;;1957:14;309:4739;;;;;;;;;2056:15;309:4739;2081:17;;;;:::i;:::-;2056:15;309:4739;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;309:4739:23;;9691:16:7;9687:87;;309:4739:23;;;;1899:1:15;309:4739:23;;;;;;-1:-1:-1;;;;;309:4739:23;;8826:256:7;;309:4739:23;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;1899:1:15;309:4739:23;;;;;;;-1:-1:-1;;;;;;309:4739:23;;;;;;;;9246:27:7;;;;309:4739:23;9246:27:7;9849:96;;1173:14:12;;1169:744;;309:4739:23;;;;;2022:10:10;309:4739:23;;;;;;;;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2068:23:10;309:4739:23;;;;;;2068:23:10;309:4739:23;;;;;;:::i;:::-;;;;;2202:284;;309:4739;;;;;;;;;2202:284;;309:4739;2331:15;309:4739;2202:284;;309:4739;2202:284;309:4739;2202:284;;309:4739;;;2202:284;;309:4739;;2202:284;;;309:4739;;;2202:284;;309:4739;;;;2178:12;309:4739;;;;;;;;;;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2202:284;;309:4739;;;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1899:1:15;309:4739:23;;;;;;;;2202:284;;309:4739;;;;;;;;;;;;2202:284;;309:4739;;;;;;2202:284;;309:4739;;;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2202:284;;309:4739;;;;;2202:284;;;309:4739;2022:10:10;309:4739:23;;;2202:284;309:4739;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1957:14;309:4739;;;;;;;;;;;;;;;;2538:14;309:4739;;;;;;;;;;;;;;;;;;2586:51;309:4739;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;309:4739:23;;;;;:::i;:::-;2586:51;;;309:4739;2702:7:15;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;-1:-1:-1;309:4739:23;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;-1:-1:-1;309:4739:23;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;-1:-1:-1;309:4739:23;;;1169:744:12;309:4739:23;;;;;;;;;;;;;;;;;1211:67:12;;735:10:13;309:4739:23;1211:67:12;;309:4739:23;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:12;309:4739:23;;-1:-1:-1;;;;;309:4739:23;;1211:67:12;;309:4739:23;;1211:67:12;;;1169:744;-1:-1:-1;1207:696:12;;1518:385;309:4739:23;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;1568:18:12;;;309:4739:23;;-1:-1:-1;;;1672:39:12;;-1:-1:-1;;;;;309:4739:23;;;1672:39:12;;309:4739:23;;;1672:39:12;1564:325;309:4739:23;1758:113:12;;;;309:4739:23;;;;;1207:696:12;309:4739:23;;;;;;;-1:-1:-1;;;;;;309:4739:23;-1:-1:-1;;;1325:51:12;1321:182;;1169:744;;;1321:182;309:4739:23;;-1:-1:-1;;;1445:39:12;;-1:-1:-1;;;;;309:4739:23;;;1445:39:12;;309:4739:23;;;1445:39:12;1211:67;;;;309:4739:23;1211:67:12;;309:4739:23;1211:67:12;;;;;;309:4739:23;1211:67:12;;;:::i;:::-;;;309:4739:23;;;;;-1:-1:-1;;;;;;309:4739:23;;;;;;1211:67:12;;;;;;;-1:-1:-1;1211:67:12;;9849:96:7;309:4739:23;;-1:-1:-1;;;9903:31:7;;309:4739:23;;9903:31:7;;309:4739:23;;;9903:31:7;8826:256;309:4739:23;;;;15066:15:7;309:4739:23;;;;;;;-1:-1:-1;;;;;;309:4739:23;;;;;;;;;;;;;;;;;;;8826:256:7;;9687:87;309:4739:23;;-1:-1:-1;;;9730:33:7;;309:4739:23;;9730:33:7;;309:4739:23;;;9730:33:7;309:4739:23;;;-1:-1:-1;;;309:4739:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;309:4739:23;;;;;;;;;;-1:-1:-1;;;309:4739:23;;;;;;;;;;;;-1:-1:-1;;;309:4739:23;;;;;;;2698:86:15;309:4739:23;;-1:-1:-1;;;2743:30:15;;309:4739:23;;2743:30:15;309:4739:23;;;;4851:4:7;309:4739:23;;;:::i;:::-;;;;;;;;:::i;:::-;;;;4766:7:7;;;;;:::i;309:4739:23:-;;;;;;-1:-1:-1;;309:4739:23;;;;4660:15;309:4739;-1:-1:-1;;309:4739:23;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;:::i;:::-;-1:-1:-1;;;;;309:4739:23;;;;;779:51;309:4739;;;;;;;;;;;779:51;;;;;309:4739;779:51;;;;:::i;:::-;309:4739;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;309:4739:23;;:::i;:::-;;;;4457:14;309:4739;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;309:4739:23;;;;;;;;722:51;309:4739;;;;;;722:51;;;:::i;:::-;;;309:4739;722:51;;;:::i;:::-;;;;309:4739;;722:51;;309:4739;;722:51;309:4739;;-1:-1:-1;;;;;309:4739:23;722:51;309:4739;722:51;;;:::i;:::-;;;;309:4739;722:51;309:4739;;722:51;;;;309:4739;722:51;;309:4739;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;:::i;:::-;;;14663:22:7;;;:::i;:::-;735:10:13;14813:18:7;;:35;;;309:4739:23;14813:69:7;;;309:4739:23;14809:142:7;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;15003:28:7;309:4739:23;;15003:28:7;309:4739:23;;;;;;;;;;;;-1:-1:-1;;;;;;309:4739:23;;;;;;;14809:142:7;309:4739:23;;-1:-1:-1;;;14909:27:7;;735:10:13;309:4739:23;14909:27:7;;309:4739:23;;;14909:27:7;14813:69;309:4739:23;;;;;;;;;;3776:18:7;309:4739:23;;;;;735:10:13;309:4739:23;;;;;;;;;;14852:30:7;14813:69;;:35;-1:-1:-1;;;;;;309:4739:23;;735:10:13;14835:13:7;;14813:35;;309:4739:23;;;;;;-1:-1:-1;;309:4739:23;;;;;;3385:22:7;;;:::i;:::-;;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;309:4739:23;;;;;;;-1:-1:-1;;;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;309:4739:23;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1086:35:10;;;:75;;;;309:4739:23;;;;;;;1086:75:10;-1:-1:-1;;;1664:40:7;;;-1:-1:-1;1664:104:7;;;;1086:75:10;1664:156:7;;;;1086:75:10;;;;;1664:156:7;-1:-1:-1;;;829:40:17;;-1:-1:-1;1664:156:7;;;:104;-1:-1:-1;;;1720:48:7;;;-1:-1:-1;1664:104:7;;309:4739:23;;;;;;;;-1:-1:-1;;309:4739:23;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;309:4739:23;;;;:::o;:::-;;;;-1:-1:-1;;;;;309:4739:23;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;309:4739:23;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;309:4739:23;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;309:4739:23;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;309:4739:23;;;;;;;:::o;:::-;;;;;;-1:-1:-1;309:4739:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;309:4739:23;;;;-1:-1:-1;309:4739:23;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;309:4739:23;;-1:-1:-1;309:4739:23;;;-1:-1:-1;309:4739:23;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;309:4739:23;;;;;;-1:-1:-1;;309:4739:23;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;309:4739:23;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;:::o;1796:162:2:-;1710:6;309:4739:23;-1:-1:-1;;;;;309:4739:23;735:10:13;1855:23:2;1851:101;;1796:162::o;1851:101::-;309:4739:23;;-1:-1:-1;;;1901:40:2;;735:10:13;1901:40:2;;;309:4739:23;;;1901:40:2;3852:578:7;-1:-1:-1;;;;;309:4739:23;;;;3852:578:7;;3946:16;;3942:87;;-1:-1:-1;309:4739:23;;;;;;;5470:7:7;309:4739:23;;;;;;;;;;735:10:13;;;;8704:18:7;;8700:86;;;3852:578;8830:18;;5470:7;9246:27;8830:18;;8826:256;;3852:578;309:4739:23;;;9156:9:7;309:4739:23;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;309:4739:23;;;;;;9246:27:7;309:4739:23;4319:21:7;;;;4315:109;;3852:578;;;;:::o;4315:109::-;309:4739:23;;;;4363:50:7;;;;;;;;;309:4739:23;;;;;;;;;4363:50:7;8826:256;309:4739:23;;;;15066:15:7;309:4739:23;;;;;;;-1:-1:-1;;;;;;309:4739:23;;;;;;9037:9:7;309:4739:23;;;;;;;-1:-1:-1;;309:4739:23;;;8826:256:7;;8700:86;6185:127;;;;;;;;;8700:86;6862:39;6858:255;;8700:86;;;;;;;;6858:255;6921:19;;;309:4739:23;;;;;6967:31:7;;;;;;;;;309:4739:23;6967:31:7;6917:186;309:4739:23;;;7044:44:7;;;;;;735:10:13;7044:44:7;;;309:4739:23;;;;;7044:44:7;6185:127;735:10:13;;6223:16:7;;:52;;;;6185:127;6223:88;6185:127;6223:88;309:4739:23;;;;5705:15:7;309:4739:23;;735:10:13;309:4739:23;;;;;;6279:32:7;6185:127;;6223:52;309:4739:23;;;;3776:18:7;309:4739:23;;;;;735:10:13;309:4739:23;;;;;;;;;;6223:52:7;;15858:241;-1:-1:-1;309:4739:23;;;5470:7:7;309:4739:23;;;;;;-1:-1:-1;;;;;309:4739:23;;15987:19:7;;15983:88;;16080:12;15858:241;:::o;15983:88::-;309:4739:23;;;;6967:31:7;;;;16029;;;;;309:4739:23;16029:31:7;993:926:12;;;;;1173:14;;1169:744;;993:926;;;;;;:::o;1169:744::-;309:4739:23;;-1:-1:-1;;;1211:67:12;;;-1:-1:-1;;;;;309:4739:23;;;1211:67:12;;;309:4739:23;;;;;;;;;;;;;;;;;;;;;;;;1211:67:12;;309:4739:23;;;;;;;;;;:::i;:::-;1211:67:12;1190:1;;;;1211:67;;;;;;;;;;;1169:744;-1:-1:-1;1207:696:12;;1518:385;;;309:4739:23;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1568:18:12;;;309:4739:23;;-1:-1:-1;;;1672:39:12;;1211:67;1672:39;;309:4739:23;;;;;1672:39:12;1564:325;1758:113;;-1:-1:-1;1758:113:12;309:4739:23;;;-1:-1:-1;309:4739:23;;1207:696:12;309:4739:23;;;;;;;;;1325:51:12;1321:182;;1207:696;1169:744;;;;;;;1321:182;309:4739:23;;;;9730:33:7;;;;1445:39:12;;1211:67;1445:39;;309:4739:23;1445:39:12;1211:67;;;;;;;;;;;;;;;;;:::i;:::-;;;309:4739:23;;;;;-1:-1:-1;;;;;;309:4739:23;;;;;;1211:67:12;;;;309:4739:23;;;;1211:67:12;;;;;309:4739:23;-1:-1:-1;;309:4739:23;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;309:4739:23;;;;;;;;;;;;-1:-1:-1;;;309:4739:23;;;;;;"},"methodIdentifiers":{"addCitation(uint256)":"f9202f00","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getResearchNFT(uint256)":"9a60f5be","getResearcherNFTs(address)":"2bc6c4e3","getTotalNFTs()":"30bdb351","isApprovedForAll(address,address)":"e985e9c5","mintResearchNFT(address,string,string,string,string)":"4f7a3a75","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","researchNFTs(uint256)":"20a2b3a0","researcherNFTs(address,uint256)":"2ef706ab","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","titleToTokenId(string)":"9e6b3f42","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","verifyResearch(uint256,bool)":"507d34a5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCount\",\"type\":\"uint256\"}],\"name\":\"CitationAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newScore\",\"type\":\"uint256\"}],\"name\":\"ImpactScoreUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"name\":\"NFTVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"researchType\",\"type\":\"string\"}],\"name\":\"ResearchNFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"addCitation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getResearchNFT\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"researchType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"citationCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"impactScore\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"internalType\":\"struct DeSciNFTSimple.ResearchNFT\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"}],\"name\":\"getResearcherNFTs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalNFTs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"researchType\",\"type\":\"string\"}],\"name\":\"mintResearchNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"researchNFTs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"researchType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"citationCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"impactScore\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"researcherNFTs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"titleToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"name\":\"verifyResearch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"addCitation(uint256)\":{\"details\":\"Add a citation to increase citation count\",\"params\":{\"tokenId\":\"Token ID to add citation to\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getResearchNFT(uint256)\":{\"details\":\"Get research NFT details\",\"params\":{\"tokenId\":\"Token ID\"},\"returns\":{\"_0\":\"ResearchNFT struct\"}},\"getResearcherNFTs(address)\":{\"details\":\"Get all NFTs owned by a researcher\",\"params\":{\"researcher\":\"Address of the researcher\"},\"returns\":{\"_0\":\"Array of token IDs\"}},\"getTotalNFTs()\":{\"details\":\"Get total number of minted NFTs\",\"returns\":{\"_0\":\"Total NFT count\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mintResearchNFT(address,string,string,string,string)\":{\"details\":\"Mint a new research NFT\",\"params\":{\"description\":\"Description of the research\",\"researchType\":\"Type of research\",\"title\":\"Title of the research\",\"to\":\"Address to mint the NFT to\",\"uri\":\"URI for the token metadata\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"verifyResearch(uint256,bool)\":{\"details\":\"Verify a research NFT\",\"params\":{\"tokenId\":\"Token ID to verify\",\"verified\":\"Verification status\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DeSciNFTSimple.sol\":\"DeSciNFTSimple\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/DeSciNFTSimple.sol\":{\"keccak256\":\"0x64a6edd90446c00fac80e1e0e1fea826adefafbdf4ad1b43019515d64296c5f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0152cd7905579731d9451f303f4cd141237651e17ea1619f9b354c2841c55384\",\"dweb:/ipfs/Qma58ZVKCipLdhc4ADYCq2FT5ckmUJXDHgz2VhSySfUBD1\"]}},\"version\":1}"}},"contracts/DeSciPlatform.sol":{"DeSciPlatform":{"abi":[{"inputs":[{"internalType":"address","name":"_userProfileContract","type":"address"},{"internalType":"address","name":"_zkProofContract","type":"address"},{"internalType":"address","name":"_nftContract","type":"address"},{"internalType":"address","name":"_datasetContract","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"researchId","type":"uint256"},{"indexed":true,"internalType":"address","name":"reviewer","type":"address"},{"indexed":false,"internalType":"uint256","name":"rating","type":"uint256"}],"name":"PeerReviewSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"researchId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"nftTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"researcher","type":"address"}],"name":"ResearchPublished","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"researchId","type":"uint256"},{"indexed":false,"internalType":"enum DeSciPlatform.ResearchStatus","name":"oldStatus","type":"uint8"},{"indexed":false,"internalType":"enum DeSciPlatform.ResearchStatus","name":"newStatus","type":"uint8"}],"name":"ResearchStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"researchId","type":"uint256"},{"indexed":true,"internalType":"address","name":"researcher","type":"address"},{"indexed":false,"internalType":"string","name":"title","type":"string"},{"indexed":false,"internalType":"uint256","name":"datasetId","type":"uint256"}],"name":"ResearchSubmitted","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allResearches","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"datasetContract","outputs":[{"internalType":"contract Dataset","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fundReviewRewards","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getAllResearches","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_researchId","type":"uint256"}],"name":"getPeerReviews","outputs":[{"components":[{"internalType":"uint256","name":"researchId","type":"uint256"},{"internalType":"address","name":"reviewer","type":"address"},{"internalType":"uint256","name":"rating","type":"uint256"},{"internalType":"string","name":"comments","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"reviewedAt","type":"uint256"},{"internalType":"bool","name":"isVerified","type":"bool"}],"internalType":"struct DeSciPlatform.PeerReview[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_researchId","type":"uint256"}],"name":"getResearch","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"researcher","type":"address"},{"internalType":"uint256","name":"datasetId","type":"uint256"},{"internalType":"uint256","name":"nftTokenId","type":"uint256"},{"internalType":"uint256[]","name":"zkProofIds","type":"uint256[]"},{"internalType":"string","name":"metadataHash","type":"string"},{"internalType":"uint256","name":"publishedAt","type":"uint256"},{"internalType":"enum DeSciPlatform.ResearchStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"peerReviewCount","type":"uint256"},{"internalType":"uint256","name":"averageRating","type":"uint256"}],"internalType":"struct DeSciPlatform.Research","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_researcher","type":"address"}],"name":"getResearcherPublications","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalResearches","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"hasReviewed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_researchId","type":"uint256"}],"name":"manuallyPublishResearch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"minimumReputationToReview","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minimumReviewsToPublish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextResearchId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftContract","outputs":[{"internalType":"contract DeSciNFTSimple","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"peerReviews","outputs":[{"internalType":"uint256","name":"researchId","type":"uint256"},{"internalType":"address","name":"reviewer","type":"address"},{"internalType":"uint256","name":"rating","type":"uint256"},{"internalType":"string","name":"comments","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"reviewedAt","type":"uint256"},{"internalType":"bool","name":"isVerified","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_title","type":"string"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"string","name":"_datasetName","type":"string"},{"internalType":"string","name":"_datasetDescription","type":"string"},{"internalType":"string","name":"_datasetHash","type":"string"},{"internalType":"string","name":"_metadataHash","type":"string"},{"internalType":"uint256[]","name":"_zkProofIds","type":"uint256[]"},{"internalType":"bool","name":"_isDatasetPublic","type":"bool"},{"internalType":"uint256","name":"_datasetAccessPrice","type":"uint256"}],"name":"publishResearch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"researcherPublications","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"researches","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"researcher","type":"address"},{"internalType":"uint256","name":"datasetId","type":"uint256"},{"internalType":"uint256","name":"nftTokenId","type":"uint256"},{"internalType":"string","name":"metadataHash","type":"string"},{"internalType":"uint256","name":"publishedAt","type":"uint256"},{"internalType":"enum DeSciPlatform.ResearchStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"peerReviewCount","type":"uint256"},{"internalType":"uint256","name":"averageRating","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reviewReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_researchId","type":"uint256"},{"internalType":"uint256","name":"_rating","type":"uint256"},{"internalType":"string","name":"_comments","type":"string"},{"internalType":"string","name":"_ipfsHash","type":"string"}],"name":"submitPeerReview","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userProfileContract","type":"address"},{"internalType":"address","name":"_zkProofContract","type":"address"},{"internalType":"address","name":"_nftContract","type":"address"},{"internalType":"address","name":"_datasetContract","type":"address"}],"name":"updateContractAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minimumReputationToReview","type":"uint256"},{"internalType":"uint256","name":"_minimumReviewsToPublish","type":"uint256"},{"internalType":"uint256","name":"_reviewReward","type":"uint256"}],"name":"updatePlatformSettings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"userProfileContract","outputs":[{"internalType":"contract UserProfile","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"zkProofContract","outputs":[{"internalType":"contract ZKProof","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":341,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080346200013a57601f62002c5238819003918201601f19168301916001600160401b038311848410176200013f578084926080946040528339810103126200013a576200004d8162000155565b906200005c6020820162000155565b620000786060620000706040850162000155565b930162000155565b331562000121576000549360018060a01b03199333858716176000556040519560018060a01b03948580948193823391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600180556032600c556002600d55662386f26fc10000600e55168760025416176002551685600354161760035516836004541617600455169060055416176005556001600a55612ae790816200016b8239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200013a5756fe608080604052600436101561001357600080fd5b60003560e01c9081630699b9d41461221e575080631c5f3099146121f55780632f3f4b921461217a5780633ccfd60b1461213357806347d0fa76146121155780634dd8eb1c146120c457806353d263801461209357806355018530146120495780635f7d070414611f43578063715018a614611eea5780637788bc6c14611ec15780637c7198cc14611e745780638a61809c14611def5780638da5cb5b14611dc65780638fa37b4614611d855780639423d32114611d67578063b0c8226614611d3e578063b8f02b301461153a578063c1ecfefa146107b0578063cecd8306146106dd578063d56d229d146106b4578063d6f13d541461065c578063e07bc5921461063e578063e3e02ba7146103d2578063ea41608a14610224578063eb2093e01461020e578063f2fde38b146101855763ff4385521461015357600080fd5b346101805760603660031901126101805761016c6124e5565b600435600c55602435600d55604435600e55005b600080fd5b346101805760203660031901126101805761019e61228c565b6101a66124e5565b6001600160a01b039081169081156101f557600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b6000366003190112610180576102226124e5565b005b346101805760208060031936011261018057600435610246600a54821061260f565b6000526007908181526040600020805461025f816124b2565b9361026d60405195866123da565b8185528385018093600052846000206000915b84831061033e57604080518881528951818a01819052600092600582901b83018101918a918c9085015b8287106102b75785850386f35b909192938280600192603f1989820301855287519081518152848060a01b0383830151168382015260408201516040820152610318610305606060e0818601519185015260e084019061241e565b608080850151908483039085015261241e565b9160a0808201519083015260c080910151151591015296019201960195929190926102aa565b838760019260409a999a5161035281612388565b85548152848060a01b038587015416838201526002860154604082015260405161038a816103838160038b016122f2565b03826123da565b60608201526040516103a3816103838160048b016122f2565b6080820152600586015460a082015260ff600687015416151560c0820152815201920192019190969596610280565b346101805760203660031901126101805760043560006101606040516103f7816123a3565b82815260606020820152606060408201528260608201528260808201528260a0820152606060c0820152606060e0820152826101008201528261012082015282610140820152015261044c600a54821061260f565b6000526006602052604060002060405190610466826123a3565b8054825260405161047e8161038381600186016122f2565b60208301526040516104978161038381600286016122f2565b604083015260038101546001600160a01b0316606083015260048101546080830152600581015460a08301526104cf60068201612a60565b60c08301526040516104e88161038381600786016122f2565b60e0830152600881015461010083015260ff60098201541690600582101561062857600b91610120840152600a8101546101408401520154610160820152604051602081528151602082015261054f602083015161018060408401526101a083019061241e565b9161056c604082015193601f19948585830301606086015261241e565b9260018060a01b036060830151166080840152608082015160a084015260a082015160c084015260c082015193818482030160e08501526020808651928381520195019060005b818110610612575050506105db83946101609260e0850151908683030161010087015261241e565b916101008101516101208501526105fc610120820151610140860190612443565b6101408101518285015201516101808301520390f35b82518752602096870196909201916001016105b3565b634e487b7160e01b600052602160045260246000fd5b34610180576000366003190112610180576020600e54604051908152f35b346101805760403660031901126101805761067561228c565b6001600160a01b0316600090815260086020526040902080546024359190821015610180576020916106a691612274565b90546040519160031b1c8152f35b34610180576000366003190112610180576004546040516001600160a01b039091168152602090f35b34610180576040366003190112610180576024356004356000526007602052604060002090815481101561018057610714916124c9565b50805460018060a01b0360018301541691600281015461079f6040516107418161038381600388016122f2565b61079160405191610760836107598160048a016122f2565b03846123da565b60ff60066005880154970154169460405198899889526020890152604088015260e0606088015260e087019061241e565b90858203608087015261241e565b9160a0840152151560c08301520390f35b3461018057610120366003190112610180576004356001600160401b038111610180576107e190369060040161246b565b6024356001600160401b0381116101805761080090369060040161246b565b906044356001600160401b0381116101805761082090369060040161246b565b916064356001600160401b0381116101805761084090369060040161246b565b6084356001600160401b0381116101805761085f90369060040161246b565b9260a4356001600160401b0381116101805761087f90369060040161246b565b926001600160401b0360c435116101805736602360c435011215610180576108ac60c435600401356124b2565b936108ba60405195866123da565b60c4356004013585526020850136602460c4356004013560051b60c43501011161018057602460c43501905b602460c4356004013560051b60c4350101821061152a57505060e4359687151588036101805760025460405163a787c80b60e01b815233600482015290602090829060249082906001600160a01b03165afa8015610c72576000906114ef575b610950915061251e565b6109586125ec565b8351156114b25760025460405163056720bf60e51b815233600482015290602090829060249082906001600160a01b03165afa908115610c7257600091611478575b501561143b5760035496976001600160a01b039097169660005b8751811015610cf0576109c7818961257c565b51604051906374b7c47560e11b825260048201526020816024818d5afa908115610c7257600091610cb6575b5015610c7e57610a03818961257c565b516040519063088a4d6d60e11b825260048201526000816024818d5afa908115610c7257600091610a94575b5051336001600160a01b0390911603610a5057610a4b90612560565b6109b4565b606460405162461bcd60e51b815260206004820152602060248201527f5a4b2070726f6f66206e6f74206f776e656420627920726573656172636865726044820152fd5b90503d806000833e610aa681836123da565b6020828281010312610180578151916001600160401b0383116101805761020083820183830103126101805760405192836101008101106001600160401b0361010086011117610c5c576101008401604052818101516001600160a01b0381168103610180578452602081830101516001600160401b03811161018057610b34908484019083850101612590565b6020850152828201605f82840101121561018057604051806101008101106001600160401b0361010083011117610c5c57610100810160405280848401610140848601011161018057604083850101905b610140848601018210610c4c575050604085015282820161015f82840101121561018057604051610bb5816123bf565b8084840161018084860101116101805761014083850101905b610180848601018210610c3c5750506060850152610bf161018082840101612511565b60808501528181016101a081015160a08601526101c081015160c08601526101e00151906001600160401b03821161018057610c31938301920101612590565b60e08201528b610a2f565b8151815260209182019101610bce565b8151815260209182019101610b85565b634e487b7160e01b600052604160045260246000fd5b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2102d2590383937b7b360811b6044820152606490fd5b90506020813d602011610ce8575b81610cd1602093836123da565b8101031261018057610ce290612511565b8b6109f3565b3d9150610cc4565b50604051969495919089610d03896123bf565b6001895260005b60208110611428575090610dc1610daf610d8b98999a93604051610d2d816123bf565b60088152670e4cae6cac2e4c6d60c31b6020820152610d4b8661256f565b52610d558561256f565b506005546040516344bc6d2560e01b815260e060048201529a6001600160a01b03909116978b97610d9d929060e48a019061241e565b8881036003190160248a01529061241e565b8681036003190160448801529061241e565b8481036003190160648601528661241e565b90151560848401526101043560a48401526003198382030160c4840152815180825260208201916020808360051b8301019401926000915b8383106113f7575050505050918160008160209503925af1928315610c72576000936113c3575b50600a5493610e2e85612560565b600a5560405192610e3e846123a3565b8584528660208501526040840152336060840152836080840152600060a084015260c083015260e082015260006101008201526001610120820152600061014082015260006101608201528260005260066020526040600020908051825560208101518051906001600160401b038211610c5c578190610ec160018601546122b8565b601f811161138e575b50602090601f831160011461131c57600092611311575b50508160011b916000199060031b1c19161760018301555b60408101518051906001600160401b038211610c5c578190610f1e60028601546122b8565b601f81116112dc575b50602090601f831160011461126a5760009261125f575b50508160011b916000199060031b1c19161760028301555b6003820160018060a01b036060830151166001600160601b0360a01b8254161790556080810151600483015560a0810151600583015560c08101518051906001600160401b038211610c5c57600160401b8211610c5c57602090600685015483600687015580841061123f575b500160068401600052602060002060005b83811061122b575050505060e08101518051906001600160401b038211610c5c57819061100460078601546122b8565b601f81116111eb575b50602090601f83116001146111795760009261116e575b50508160011b916000199060031b1c19161760078301555b61010081015160088301556101208101516009830191600582101561062857600b926101609260ff80198354169116179055610140810151600a850155015191015533600052600860205260406000208054600160401b811015610c5c576110a991600182018155612274565b81549060031b9084821b91600019901b1916179055600b5492600160401b841015610c5c576001840180600b55841015611158577f7a4ae4a41033f0aa82dc3cc2d18817fcaa2691062e3b16227b5381250e038399839182602096600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db901556111416040519160408352604083019061241e565b93868201528033940390a360018055604051908152f35b634e487b7160e01b600052603260045260246000fd5b015190508780611024565b9250600785016000526020600020906000935b601f19841685106111d0576001945083601f198116106111b7575b505050811b01600783015561103c565b015160001960f88460031b161c191690558780806111a7565b8181015183556020948501946001909301929091019061118c565b61121b90600787016000526020600020601f850160051c81019160208610611221575b601f0160051c01906125d5565b8861100d565b909150819061120e565b600190602084519401938184015501610fd4565b6112599060068701600052848460002091820191016125d5565b88610fc3565b015190508780610f3e565b9250600285016000526020600020906000935b601f19841685106112c1576001945083601f198116106112a8575b505050811b016002830155610f56565b015160001960f88460031b161c19169055878080611298565b8181015183556020948501946001909301929091019061127d565b61130b90600287016000526020600020601f850160051c8101916020861061122157601f0160051c01906125d5565b88610f27565b015190508780610ee1565b9250600185016000526020600020906000935b601f1984168510611373576001945083601f1981161061135a575b505050811b016001830155610ef9565b015160001960f88460031b161c1916905587808061134a565b8181015183556020948501946001909301929091019061132f565b6113bd90600187016000526020600020601f850160051c8101916020861061122157601f0160051c01906125d5565b88610eca565b9092506020813d6020116113ef575b816113df602093836123da565b8101031261018057519185610e20565b3d91506113d2565b919395509193602080611416600193601f19868203018752895161241e565b97019301930190928995949293610df9565b60606020828c0181019190915201610d0a565b60405162461bcd60e51b8152602060048201526015602482015274155cd95c881b5d5cdd081899481d995c9a599a5959605a1b6044820152606490fd5b90506020813d6020116114aa575b81611493602093836123da565b81010312610180576114a490612511565b8961099a565b3d9150611486565b60405162461bcd60e51b81526020600482015260156024820152745469746c652063616e6e6f7420626520656d70747960581b6044820152606490fd5b506020813d602011611522575b81611509602093836123da565b810103126101805761151d61095091612511565b610946565b3d91506114fc565b81358152602091820191016108e6565b34610180576080366003190112610180576044356001600160401b0381116101805761156a90369060040161246b565b6064356001600160401b0381116101805761158990369060040161246b565b60025460405163a787c80b60e01b815233600482015290602090829060249082906001600160a01b03165afa8015610c7257600090611d03575b6115cd915061251e565b6115dc600a546004351061260f565b6115e46125ec565b600435600052600660205260406000209060ff60098301541660058110156106285760018114908115611cf8575b5015611ca95760038201546001600160a01b03163314611c6457600435600052600960205260406000203360005260205260ff60406000205416611c1f576001602435101580611c12575b15611bcd5760025460405163baccbfdb60e01b81523360048201526001600160a01b039091169190602081602481865afa908115610c7257600091611b9b575b50600c5411611b4c57602490600435600052600760205260206040600020936040519384809263056720bf60e51b82523360048301525afa918215610c7257600092611b10575b50604051946116f286612388565b60043586523360208701526024356040870152606086015260808501524260a0850152151560c08401528054600160401b811015610c5c57611739916001820181556124c9565b929092611afa57805183556001830160018060a01b036020830151166001600160601b0360a01b8254161790556040810151600284015560608101519283516001600160401b038111610c5c5761179360038301546122b8565b601f8111611ac5575b506020601f8211600114611a56578192939495600092611a4b575b50508160011b916000199060031b1c19161760038201555b60808201518051906001600160401b038211610c5c576117f260048401546122b8565b601f8111611a16575b50602090601f83116001146119a157918060c09492600694600092611996575b50508160011b916000199060031b1c19161760048201555b60a084015160058201550191015115159060ff199160ff83835416911617905560043560005260096020526040600020336000526020526040600020600182825416179055600a8201906118878254612560565b825560098301549060ff821660058110156106285760011461194f575b50506118b160043561298c565b47600e548091101561192a575b50604051602435815233907fc365c5f538389984d687768c80d5d858622fa9f66a9290efdc9defca6b0c973a602060043592a354600d541115908161191a575b5061190a575b60018055005b611915600435612668565b611904565b60079150600b01541015816118fe565b600080808093818115611946575b3390f115610c7257826118be565b506108fc611938565b6002911617600983015560405160018152600260208201527f0bf769e221fd48094869eacdbf9de22b6870f4f9fdf03fd35d6ab5cf72ede70d604060043592a282806118a4565b01519050878061181b565b906004840160005260206000209160005b601f19851681106119fe57509260c0949260019260069583601f198116106119e5575b505050811b016004820155611833565b015160001960f88460031b161c191690558780806119d5565b919260206001819286850151815501940192016119b2565b611a4590600485016000526020600020601f850160051c8101916020861061122157601f0160051c01906125d5565b856117fb565b0151905085806117b7565b6003830160005260206000209060005b601f1984168110611aad575060019394959683601f19811610611a94575b505050811b0160038201556117cf565b015160001960f88460031b161c19169055858080611a84565b9091602060018192858b015181550193019101611a66565b611af490600384016000526020600020601f840160051c8101916020851061122157601f0160051c01906125d5565b8561179c565b634e487b7160e01b600052600060045260246000fd5b9091506020813d602011611b44575b81611b2c602093836123da565b8101031261018057611b3d90612511565b90856116e4565b3d9150611b1f565b60405162461bcd60e51b815260206004820152602160248201527f496e73756666696369656e742072657075746174696f6e20746f2072657669656044820152607760f81b6064820152608490fd5b90506020813d602011611bc5575b81611bb6602093836123da565b8101031261018057518561169d565b3d9150611ba9565b60405162461bcd60e51b815260206004820152601b60248201527f526174696e67206d757374206265206265747765656e20312d313000000000006044820152606490fd5b50600a602435111561165d565b60405162461bcd60e51b815260206004820152601e60248201527f416c7265616479207265766965776564207468697320726573656172636800006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420726576696577206f776e2072657365617263680000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f5265736561726368206e6f7420617661696c61626c6520666f722072657669656044820152607760f81b6064820152608490fd5b600291501484611612565b506020813d602011611d36575b81611d1d602093836123da565b8101031261018057611d316115cd91612511565b6115c3565b3d9150611d10565b34610180576000366003190112610180576005546040516001600160a01b039091168152602090f35b34610180576000366003190112610180576020600a54604051908152f35b3461018057600036600319011261018057600a546000198101908111611db057602090604051908152f35b634e487b7160e01b600052601160045260246000fd5b34610180576000366003190112610180576000546040516001600160a01b039091168152602090f35b3461018057608036600319011261018057611e0861228c565b611e106122a2565b906044356001600160a01b0381811691829003610180576064359381851680950361018057611e3d6124e5565b816001600160601b0360a01b9416846002541617600255168260035416176003558160045416176004556005541617600555600080f35b3461018057604036600319011261018057611e8d6122a2565b600435600052600960205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b34610180576000366003190112610180576003546040516001600160a01b039091168152602090f35b3461018057600036600319011261018057611f036124e5565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101805760203660031901126101805760043560005260066020526040600020805460405191611f7b8361075981600185016122f2565b604051611f8f8161038381600286016122f2565b60018060a01b03600383015416916120396004820154612028600584015495604051611fc2816103838160078a016122f2565b60088601549760ff6009880154169461200b600b600a8a015499015499611ffd6040519e8f9e8f90815261016090816020820152019061241e565b8d810360408f01529061241e565b9360608c015260808b015260a08a015288820360c08a015261241e565b9460e0870152610100860190612443565b6101208401526101408301520390f35b34610180576020366003190112610180576001600160a01b0361206a61228c565b16600052600860205261208f6120836040600020612a60565b60405191829182612239565b0390f35b34610180576020366003190112610180576102226004356120b26124e5565b6120bf600a54821061260f565b612668565b3461018057602036600319011261018057600435600b5481101561018057602090600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90154604051908152f35b34610180576000366003190112610180576020600d54604051908152f35b346101805760003660031901126101805761214c6124e5565b6000805481908190819047906001600160a01b0316828215612171575bf115610c7257005b506108fc612169565b346101805760003660031901126101805760405180600b5491828152602080910192600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9916000905b8282106121de5761208f85612083818903826123da565b8354865294850194600193840193909101906121c7565b34610180576000366003190112610180576002546040516001600160a01b039091168152602090f35b3461018057600036600319011261018057602090600c548152f35b6020908160408183019282815285518094520193019160005b828110612260575050505090565b835185529381019392810192600101612252565b80548210156111585760005260206000200190600090565b600435906001600160a01b038216820361018057565b602435906001600160a01b038216820361018057565b90600182811c921680156122e8575b60208310146122d257565b634e487b7160e01b600052602260045260246000fd5b91607f16916122c7565b9060009291805491612303836122b8565b9182825260019384811690816000146123655750600114612325575b50505050565b90919394506000526020928360002092846000945b83861061235157505050500101903880808061231f565b80548587018301529401938590820161233a565b9294505050602093945060ff191683830152151560051b0101903880808061231f565b60e081019081106001600160401b03821117610c5c57604052565b61018081019081106001600160401b03821117610c5c57604052565b604081019081106001600160401b03821117610c5c57604052565b90601f801991011681019081106001600160401b03821117610c5c57604052565b60005b83811061240e5750506000910152565b81810151838201526020016123fe565b90602091612437815180928185528580860191016123fb565b601f01601f1916010190565b9060058210156106285752565b6001600160401b038111610c5c57601f01601f191660200190565b81601f820112156101805780359061248282612450565b9261249060405194856123da565b8284526020838301011161018057816000926020809301838601378301015290565b6001600160401b038111610c5c5760051b60200190565b8054821015611158576000526007602060002091020190600090565b6000546001600160a01b031633036124f957565b60405163118cdaa760e01b8152336004820152602490fd5b5190811515820361018057565b1561252557565b60405162461bcd60e51b8152602060048201526013602482015272155cd95c881b9bdd081c9959da5cdd195c9959606a1b6044820152606490fd5b6000198114611db05760010190565b8051156111585760200190565b80518210156111585760209160051b010190565b81601f820112156101805780516125a681612450565b926125b460405194856123da565b81845260208284010111610180576125d291602080850191016123fb565b90565b8181106125e0575050565b600081556001016125d5565b6002600154146125fd576002600155565b604051633ee5aeb560e01b8152600490fd5b1561261657565b60405162461bcd60e51b815260206004820152601760248201527f526573656172636820646f6573206e6f742065786973740000000000000000006044820152606490fd5b91908201809211611db057565b906000918083526020926006845260409081812094600986019560ff87541660058110156129785760020361292a5760018060a01b0360048181541692600381019985848c54168951968791634f7a3a7560e01b83528683015260a06024830152818a8c87643830b832b960d91b876127166127036126ed60a48901600187016122f2565b600260031996878b84030160448c0152016122f2565b8488820301606489015260078d016122f2565b868103938401608488015260058152015201925af19485156129205787956128ed575b5060058201859055426008830155805460ff191660031790556002548a54885163baccbfdb60e01b8152908516848201819052918516928782602481875afa9182156128e35789926128af575b50600b015490600a820291808304600a149015171561289c57906127a99161265b565b90823b15612898579060448892838b519586948593631eb9234160e31b85528985015260248401525af1801561288e5761283d575b505090600392917f0bf769e221fd48094869eacdbf9de22b6870f4f9fdf03fd35d6ab5cf72ede70d969798541690877fd8ce22afd7e21e21188ad06f8603f1d280d2c289bca98a7e29ccb17934c5bea487519680a460028352820152a2565b6001600160401b03819a96929a1161287b578652939750807f0bf769e221fd48094869eacdbf9de22b6870f4f9fdf03fd35d6ab5cf72ede70d6127de565b634e487b7160e01b825260418a52602482fd5b87513d88823e3d90fd5b8780fd5b634e487b7160e01b895260118552602489fd5b9091508781813d83116128dc575b6128c781836123da565b810103126128d8575190600b612786565b8880fd5b503d6128bd565b8a513d8b823e3d90fd5b9094508581813d8311612919575b61290581836123da565b8101031261291557519338612739565b8680fd5b503d6128fb565b88513d89823e3d90fd5b835162461bcd60e51b815260048101839052602160248201527f5265736561726368206e6f7420726561647920666f72207075626c697368696e6044820152606760f81b6064820152608490fd5b634e487b7160e01b84526021600452602484fd5b600090808252600760205260408220805490811561231f5783918491855b8281106129ed575050906129bd9161265b565b9182156129d95791604091600b93855260066020520492200155565b634e487b7160e01b84526012600452602484fd5b612a086129fa82846124c9565b50956002809701549061265b565b948560ff6006612a1885876124c9565b50015416612a31575b5050612a2c90612560565b6129aa565b612a2c929650612a44612a589296612560565b95612a4f88866124c9565b5001549061265b565b949038612a21565b9060405191828154918282526020928383019160005283600020936000905b828210612a9757505050612a95925003836123da565b565b855484526001958601958895509381019390910190612a7f56fea2646970667358221220476a2449d9e3ad41f37a67d25a8e2c5766cfbe84b9c7a5655e2afc28c4892df264736f6c63430008140033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x13A JUMPI PUSH1 0x1F PUSH3 0x2C52 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x13F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x80 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x13A JUMPI PUSH3 0x4D DUP2 PUSH3 0x155 JUMP JUMPDEST SWAP1 PUSH3 0x5C PUSH1 0x20 DUP3 ADD PUSH3 0x155 JUMP JUMPDEST PUSH3 0x78 PUSH1 0x60 PUSH3 0x70 PUSH1 0x40 DUP6 ADD PUSH3 0x155 JUMP JUMPDEST SWAP4 ADD PUSH3 0x155 JUMP JUMPDEST CALLER ISZERO PUSH3 0x121 JUMPI PUSH1 0x0 SLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP4 CALLER DUP6 DUP8 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 DUP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x32 PUSH1 0xC SSTORE PUSH1 0x2 PUSH1 0xD SSTORE PUSH7 0x2386F26FC10000 PUSH1 0xE SSTORE AND DUP8 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND DUP6 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE AND DUP4 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE AND SWAP1 PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0xA SSTORE PUSH2 0x2AE7 SWAP1 DUP2 PUSH3 0x16B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x13A JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x699B9D4 EQ PUSH2 0x221E JUMPI POP DUP1 PUSH4 0x1C5F3099 EQ PUSH2 0x21F5 JUMPI DUP1 PUSH4 0x2F3F4B92 EQ PUSH2 0x217A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2133 JUMPI DUP1 PUSH4 0x47D0FA76 EQ PUSH2 0x2115 JUMPI DUP1 PUSH4 0x4DD8EB1C EQ PUSH2 0x20C4 JUMPI DUP1 PUSH4 0x53D26380 EQ PUSH2 0x2093 JUMPI DUP1 PUSH4 0x55018530 EQ PUSH2 0x2049 JUMPI DUP1 PUSH4 0x5F7D0704 EQ PUSH2 0x1F43 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EEA JUMPI DUP1 PUSH4 0x7788BC6C EQ PUSH2 0x1EC1 JUMPI DUP1 PUSH4 0x7C7198CC EQ PUSH2 0x1E74 JUMPI DUP1 PUSH4 0x8A61809C EQ PUSH2 0x1DEF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DC6 JUMPI DUP1 PUSH4 0x8FA37B46 EQ PUSH2 0x1D85 JUMPI DUP1 PUSH4 0x9423D321 EQ PUSH2 0x1D67 JUMPI DUP1 PUSH4 0xB0C82266 EQ PUSH2 0x1D3E JUMPI DUP1 PUSH4 0xB8F02B30 EQ PUSH2 0x153A JUMPI DUP1 PUSH4 0xC1ECFEFA EQ PUSH2 0x7B0 JUMPI DUP1 PUSH4 0xCECD8306 EQ PUSH2 0x6DD JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x6B4 JUMPI DUP1 PUSH4 0xD6F13D54 EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0xE07BC592 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xE3E02BA7 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xEA41608A EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xEB2093E0 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x185 JUMPI PUSH4 0xFF438552 EQ PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x16C PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xC SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0xD SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xE SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x19E PUSH2 0x228C JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x222 PUSH2 0x24E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x180 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x246 PUSH1 0xA SLOAD DUP3 LT PUSH2 0x260F JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x7 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x25F DUP2 PUSH2 0x24B2 JUMP JUMPDEST SWAP4 PUSH2 0x26D PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x23DA JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP6 ADD DUP1 SWAP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x33E JUMPI PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE DUP10 MLOAD DUP2 DUP11 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x5 DUP3 SWAP1 SHL DUP4 ADD DUP2 ADD SWAP2 DUP11 SWAP2 DUP13 SWAP1 DUP6 ADD JUMPDEST DUP3 DUP8 LT PUSH2 0x2B7 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 DUP2 MLOAD DUP2 MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP4 DUP4 ADD MLOAD AND DUP4 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x318 PUSH2 0x305 PUSH1 0x60 PUSH1 0xE0 DUP2 DUP7 ADD MLOAD SWAP2 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD SWAP1 PUSH2 0x241E JUMP JUMPDEST PUSH1 0x80 DUP1 DUP6 ADD MLOAD SWAP1 DUP5 DUP4 SUB SWAP1 DUP6 ADD MSTORE PUSH2 0x241E JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xC0 DUP1 SWAP2 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x2AA JUMP JUMPDEST DUP4 DUP8 PUSH1 0x1 SWAP3 PUSH1 0x40 SWAP11 SWAP10 SWAP11 MLOAD PUSH2 0x352 DUP2 PUSH2 0x2388 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP6 DUP8 ADD SLOAD AND DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x38A DUP2 PUSH2 0x383 DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x22F2 JUMP JUMPDEST SUB DUP3 PUSH2 0x23DA JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3A3 DUP2 PUSH2 0x383 DUP2 PUSH1 0x4 DUP12 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x6 DUP8 ADD SLOAD AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP7 SWAP6 SWAP7 PUSH2 0x280 JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH2 0x160 PUSH1 0x40 MLOAD PUSH2 0x3F7 DUP2 PUSH2 0x23A3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE PUSH2 0x44C PUSH1 0xA SLOAD DUP3 LT PUSH2 0x260F JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x466 DUP3 PUSH2 0x23A3 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x40 MLOAD PUSH2 0x47E DUP2 PUSH2 0x383 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x497 DUP2 PUSH2 0x383 DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x4CF PUSH1 0x6 DUP3 ADD PUSH2 0x2A60 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x4E8 DUP2 PUSH2 0x383 DUP2 PUSH1 0x7 DUP7 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x9 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x628 JUMPI PUSH1 0xB SWAP2 PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x54F PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x180 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1A0 DUP4 ADD SWAP1 PUSH2 0x241E JUMP JUMPDEST SWAP2 PUSH2 0x56C PUSH1 0x40 DUP3 ADD MLOAD SWAP4 PUSH1 0x1F NOT SWAP5 DUP6 DUP6 DUP4 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x241E JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD SWAP4 DUP2 DUP5 DUP3 SUB ADD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x20 DUP1 DUP7 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP6 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x612 JUMPI POP POP POP PUSH2 0x5DB DUP4 SWAP5 PUSH2 0x160 SWAP3 PUSH1 0xE0 DUP6 ADD MLOAD SWAP1 DUP7 DUP4 SUB ADD PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x241E JUMP JUMPDEST SWAP2 PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x5FC PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x140 DUP7 ADD SWAP1 PUSH2 0x2443 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x180 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP8 MSTORE PUSH1 0x20 SWAP7 DUP8 ADD SWAP7 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x5B3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x675 PUSH2 0x228C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x180 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x6A6 SWAP2 PUSH2 0x2274 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x180 JUMPI PUSH2 0x714 SWAP2 PUSH2 0x24C9 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x79F PUSH1 0x40 MLOAD PUSH2 0x741 DUP2 PUSH2 0x383 DUP2 PUSH1 0x3 DUP9 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH2 0x791 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x760 DUP4 PUSH2 0x759 DUP2 PUSH1 0x4 DUP11 ADD PUSH2 0x22F2 JUMP JUMPDEST SUB DUP5 PUSH2 0x23DA JUMP JUMPDEST PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP9 ADD SLOAD SWAP8 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x241E JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x241E JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x7E1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x800 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x820 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x840 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x85F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST SWAP3 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x87F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xC4 CALLDATALOAD GT PUSH2 0x180 JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0xC4 CALLDATALOAD ADD SLT ISZERO PUSH2 0x180 JUMPI PUSH2 0x8AC PUSH1 0xC4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x24B2 JUMP JUMPDEST SWAP4 PUSH2 0x8BA PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x23DA JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP6 MSTORE PUSH1 0x20 DUP6 ADD CALLDATASIZE PUSH1 0x24 PUSH1 0xC4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x5 SHL PUSH1 0xC4 CALLDATALOAD ADD ADD GT PUSH2 0x180 JUMPI PUSH1 0x24 PUSH1 0xC4 CALLDATALOAD ADD SWAP1 JUMPDEST PUSH1 0x24 PUSH1 0xC4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x5 SHL PUSH1 0xC4 CALLDATALOAD ADD ADD DUP3 LT PUSH2 0x152A JUMPI POP POP PUSH1 0xE4 CALLDATALOAD SWAP7 DUP8 ISZERO ISZERO DUP9 SUB PUSH2 0x180 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA787C80B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x14EF JUMPI JUMPDEST PUSH2 0x950 SWAP2 POP PUSH2 0x251E JUMP JUMPDEST PUSH2 0x958 PUSH2 0x25EC JUMP JUMPDEST DUP4 MLOAD ISZERO PUSH2 0x14B2 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x56720BF PUSH1 0xE5 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1478 JUMPI JUMPDEST POP ISZERO PUSH2 0x143B JUMPI PUSH1 0x3 SLOAD SWAP7 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND SWAP7 PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0xCF0 JUMPI PUSH2 0x9C7 DUP2 DUP10 PUSH2 0x257C JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x74B7C475 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP14 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xCB6 JUMPI JUMPDEST POP ISZERO PUSH2 0xC7E JUMPI PUSH2 0xA03 DUP2 DUP10 PUSH2 0x257C JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x88A4D6D PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x24 DUP2 DUP14 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xA94 JUMPI JUMPDEST POP MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0xA50 JUMPI PUSH2 0xA4B SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A4B2070726F6F66206E6F74206F776E65642062792072657365617263686572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0xAA6 DUP2 DUP4 PUSH2 0x23DA JUMP JUMPDEST PUSH1 0x20 DUP3 DUP3 DUP2 ADD SUB SLT PUSH2 0x180 JUMPI DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x180 JUMPI PUSH2 0x200 DUP4 DUP3 ADD DUP4 DUP4 ADD SUB SLT PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x100 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x100 DUP7 ADD GT OR PUSH2 0xC5C JUMPI PUSH2 0x100 DUP5 ADD PUSH1 0x40 MSTORE DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x180 JUMPI DUP5 MSTORE PUSH1 0x20 DUP2 DUP4 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0xB34 SWAP1 DUP5 DUP5 ADD SWAP1 DUP4 DUP6 ADD ADD PUSH2 0x2590 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE DUP3 DUP3 ADD PUSH1 0x5F DUP3 DUP5 ADD ADD SLT ISZERO PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x100 DUP4 ADD GT OR PUSH2 0xC5C JUMPI PUSH2 0x100 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 ADD PUSH2 0x140 DUP5 DUP7 ADD ADD GT PUSH2 0x180 JUMPI PUSH1 0x40 DUP4 DUP6 ADD ADD SWAP1 JUMPDEST PUSH2 0x140 DUP5 DUP7 ADD ADD DUP3 LT PUSH2 0xC4C JUMPI POP POP PUSH1 0x40 DUP6 ADD MSTORE DUP3 DUP3 ADD PUSH2 0x15F DUP3 DUP5 ADD ADD SLT ISZERO PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH2 0xBB5 DUP2 PUSH2 0x23BF JUMP JUMPDEST DUP1 DUP5 DUP5 ADD PUSH2 0x180 DUP5 DUP7 ADD ADD GT PUSH2 0x180 JUMPI PUSH2 0x140 DUP4 DUP6 ADD ADD SWAP1 JUMPDEST PUSH2 0x180 DUP5 DUP7 ADD ADD DUP3 LT PUSH2 0xC3C JUMPI POP POP PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xBF1 PUSH2 0x180 DUP3 DUP5 ADD ADD PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE DUP2 DUP2 ADD PUSH2 0x1A0 DUP2 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x1C0 DUP2 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1E0 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x180 JUMPI PUSH2 0xC31 SWAP4 DUP4 ADD SWAP3 ADD ADD PUSH2 0x2590 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE DUP12 PUSH2 0xA2F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xBCE JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB85 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B2102D2590383937B7B3 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCE8 JUMPI JUMPDEST DUP2 PUSH2 0xCD1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI PUSH2 0xCE2 SWAP1 PUSH2 0x2511 JUMP JUMPDEST DUP12 PUSH2 0x9F3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCC4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP7 SWAP5 SWAP6 SWAP2 SWAP1 DUP10 PUSH2 0xD03 DUP10 PUSH2 0x23BF JUMP JUMPDEST PUSH1 0x1 DUP10 MSTORE PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x1428 JUMPI POP SWAP1 PUSH2 0xDC1 PUSH2 0xDAF PUSH2 0xD8B SWAP9 SWAP10 SWAP11 SWAP4 PUSH1 0x40 MLOAD PUSH2 0xD2D DUP2 PUSH2 0x23BF JUMP JUMPDEST PUSH1 0x8 DUP2 MSTORE PUSH8 0xE4CAE6CAC2E4C6D PUSH1 0xC3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xD4B DUP7 PUSH2 0x256F JUMP JUMPDEST MSTORE PUSH2 0xD55 DUP6 PUSH2 0x256F JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x44BC6D25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xE0 PUSH1 0x4 DUP3 ADD MSTORE SWAP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP8 DUP12 SWAP8 PUSH2 0xD9D SWAP3 SWAP1 PUSH1 0xE4 DUP11 ADD SWAP1 PUSH2 0x241E JUMP JUMPDEST DUP9 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x24 DUP11 ADD MSTORE SWAP1 PUSH2 0x241E JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x44 DUP9 ADD MSTORE SWAP1 PUSH2 0x241E JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x64 DUP7 ADD MSTORE DUP7 PUSH2 0x241E JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0x3 NOT DUP4 DUP3 SUB ADD PUSH1 0xC4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x13F7 JUMPI POP POP POP POP POP SWAP2 DUP2 PUSH1 0x0 DUP2 PUSH1 0x20 SWAP6 SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x13C3 JUMPI JUMPDEST POP PUSH1 0xA SLOAD SWAP4 PUSH2 0xE2E DUP6 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0xE3E DUP5 PUSH2 0x23A3 JUMP JUMPDEST DUP6 DUP5 MSTORE DUP7 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD MSTORE DUP4 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x1 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC5C JUMPI DUP2 SWAP1 PUSH2 0xEC1 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x138E JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x131C JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1311 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC5C JUMPI DUP2 SWAP1 PUSH2 0xF1E PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x12DC JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x126A JUMPI PUSH1 0x0 SWAP3 PUSH2 0x125F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC5C JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0xC5C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 DUP6 ADD SLOAD DUP4 PUSH1 0x6 DUP8 ADD SSTORE DUP1 DUP5 LT PUSH2 0x123F JUMPI JUMPDEST POP ADD PUSH1 0x6 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x122B JUMPI POP POP POP POP PUSH1 0xE0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC5C JUMPI DUP2 SWAP1 PUSH2 0x1004 PUSH1 0x7 DUP7 ADD SLOAD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x11EB JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1179 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x116E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 DUP4 ADD SSTORE JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x8 DUP4 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP4 ADD SWAP2 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x628 JUMPI PUSH1 0xB SWAP3 PUSH2 0x160 SWAP3 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xA DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xC5C JUMPI PUSH2 0x10A9 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2274 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP5 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0xB SLOAD SWAP3 PUSH1 0x1 PUSH1 0x40 SHL DUP5 LT ISZERO PUSH2 0xC5C JUMPI PUSH1 0x1 DUP5 ADD DUP1 PUSH1 0xB SSTORE DUP5 LT ISZERO PUSH2 0x1158 JUMPI PUSH32 0x7A4AE4A41033F0AA82DC3CC2D18817FCAA2691062E3B16227B5381250E038399 DUP4 SWAP2 DUP3 PUSH1 0x20 SWAP7 PUSH1 0xB PUSH1 0x0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SSTORE PUSH2 0x1141 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x241E JUMP JUMPDEST SWAP4 DUP7 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1024 JUMP JUMPDEST SWAP3 POP PUSH1 0x7 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x11D0 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x11B7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x103C JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x11A7 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x118C JUMP JUMPDEST PUSH2 0x121B SWAP1 PUSH1 0x7 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x1221 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x25D5 JUMP JUMPDEST DUP9 PUSH2 0x100D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x1259 SWAP1 PUSH1 0x6 DUP8 ADD PUSH1 0x0 MSTORE DUP5 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x25D5 JUMP JUMPDEST DUP9 PUSH2 0xFC3 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0xF3E JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x12C1 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x12A8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0xF56 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x1298 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH2 0x130B SWAP1 PUSH1 0x2 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x1221 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x25D5 JUMP JUMPDEST DUP9 PUSH2 0xF27 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0xEE1 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1373 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x135A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0xEF9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x134A JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0x13BD SWAP1 PUSH1 0x1 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x1221 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x25D5 JUMP JUMPDEST DUP9 PUSH2 0xECA JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13EF JUMPI JUMPDEST DUP2 PUSH2 0x13DF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI MLOAD SWAP2 DUP6 PUSH2 0xE20 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x13D2 JUMP JUMPDEST SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 PUSH1 0x20 DUP1 PUSH2 0x1416 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x241E JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP1 SWAP3 DUP10 SWAP6 SWAP5 SWAP3 SWAP4 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x20 DUP3 DUP13 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x155CD95C881B5D5CDD081899481D995C9A599A5959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x14AA JUMPI JUMPDEST DUP2 PUSH2 0x1493 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI PUSH2 0x14A4 SWAP1 PUSH2 0x2511 JUMP JUMPDEST DUP10 PUSH2 0x99A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5469746C652063616E6E6F7420626520656D707479 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1522 JUMPI JUMPDEST DUP2 PUSH2 0x1509 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI PUSH2 0x151D PUSH2 0x950 SWAP2 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0x946 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x14FC JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x8E6 JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x156A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x1589 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA787C80B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x1D03 JUMPI JUMPDEST PUSH2 0x15CD SWAP2 POP PUSH2 0x251E JUMP JUMPDEST PUSH2 0x15DC PUSH1 0xA SLOAD PUSH1 0x4 CALLDATALOAD LT PUSH2 0x260F JUMP JUMPDEST PUSH2 0x15E4 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF PUSH1 0x9 DUP4 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x628 JUMPI PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1CF8 JUMPI JUMPDEST POP ISZERO PUSH2 0x1CA9 JUMPI PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C64 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1C1F JUMPI PUSH1 0x1 PUSH1 0x24 CALLDATALOAD LT ISZERO DUP1 PUSH2 0x1C12 JUMPI JUMPDEST ISZERO PUSH2 0x1BCD JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xBACCBFDB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1B9B JUMPI JUMPDEST POP PUSH1 0xC SLOAD GT PUSH2 0x1B4C JUMPI PUSH1 0x24 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x56720BF PUSH1 0xE5 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1B10 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP5 PUSH2 0x16F2 DUP7 PUSH2 0x2388 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP7 MSTORE CALLER PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xC5C JUMPI PUSH2 0x1739 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x24C9 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x1AFA JUMPI DUP1 MLOAD DUP4 SSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xC5C JUMPI PUSH2 0x1793 PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1AC5 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1A56 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x1A4B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC5C JUMPI PUSH2 0x17F2 PUSH1 0x4 DUP5 ADD SLOAD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A16 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x19A1 JUMPI SWAP2 DUP1 PUSH1 0xC0 SWAP5 SWAP3 PUSH1 0x6 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1996 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP3 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO SWAP1 PUSH1 0xFF NOT SWAP2 PUSH1 0xFF DUP4 DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xA DUP3 ADD SWAP1 PUSH2 0x1887 DUP3 SLOAD PUSH2 0x2560 JUMP JUMPDEST DUP3 SSTORE PUSH1 0x9 DUP4 ADD SLOAD SWAP1 PUSH1 0xFF DUP3 AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x628 JUMPI PUSH1 0x1 EQ PUSH2 0x194F JUMPI JUMPDEST POP POP PUSH2 0x18B1 PUSH1 0x4 CALLDATALOAD PUSH2 0x298C JUMP JUMPDEST SELFBALANCE PUSH1 0xE SLOAD DUP1 SWAP2 LT ISZERO PUSH2 0x192A JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE CALLER SWAP1 PUSH32 0xC365C5F538389984D687768C80D5D858622FA9F66A9290EFDC9DEFCA6B0C973A PUSH1 0x20 PUSH1 0x4 CALLDATALOAD SWAP3 LOG3 SLOAD PUSH1 0xD SLOAD GT ISZERO SWAP1 DUP2 PUSH2 0x191A JUMPI JUMPDEST POP PUSH2 0x190A JUMPI JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0x1915 PUSH1 0x4 CALLDATALOAD PUSH2 0x2668 JUMP JUMPDEST PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x7 SWAP2 POP PUSH1 0xB ADD SLOAD LT ISZERO DUP2 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 DUP2 DUP2 ISZERO PUSH2 0x1946 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0xC72 JUMPI DUP3 PUSH2 0x18BE JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x2 SWAP2 AND OR PUSH1 0x9 DUP4 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xBF769E221FD48094869EACDBF9DE22B6870F4F9FDF03FD35D6AB5CF72EDE70D PUSH1 0x40 PUSH1 0x4 CALLDATALOAD SWAP3 LOG2 DUP3 DUP1 PUSH2 0x18A4 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x181B JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x19FE JUMPI POP SWAP3 PUSH1 0xC0 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x6 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x19E5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP3 ADD SSTORE PUSH2 0x1833 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x19D5 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH2 0x1A45 SWAP1 PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x1221 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x25D5 JUMP JUMPDEST DUP6 PUSH2 0x17FB JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x1AAD JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 SWAP7 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1A94 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x17CF JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1A84 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1A66 JUMP JUMPDEST PUSH2 0x1AF4 SWAP1 PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1221 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x25D5 JUMP JUMPDEST DUP6 PUSH2 0x179C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B44 JUMPI JUMPDEST DUP2 PUSH2 0x1B2C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI PUSH2 0x1B3D SWAP1 PUSH2 0x2511 JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x16E4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742072657075746174696F6E20746F207265766965 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1BC5 JUMPI JUMPDEST DUP2 PUSH2 0x1BB6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI MLOAD DUP6 PUSH2 0x169D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526174696E67206D757374206265206265747765656E20312D31300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xA PUSH1 0x24 CALLDATALOAD GT ISZERO PUSH2 0x165D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920726576696577656420746869732072657365617263680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420726576696577206F776E207265736561726368000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265736561726368206E6F7420617661696C61626C6520666F72207265766965 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP2 POP EQ DUP5 PUSH2 0x1612 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D36 JUMPI JUMPDEST DUP2 PUSH2 0x1D1D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI PUSH2 0x1D31 PUSH2 0x15CD SWAP2 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0x15C3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1D10 JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0xA SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1DB0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x1E08 PUSH2 0x228C JUMP JUMPDEST PUSH2 0x1E10 PUSH2 0x22A2 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x180 JUMPI PUSH1 0x64 CALLDATALOAD SWAP4 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x180 JUMPI PUSH2 0x1E3D PUSH2 0x24E5 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP5 AND DUP5 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND DUP3 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP2 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x1E8D PUSH2 0x22A2 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x1F03 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1F7B DUP4 PUSH2 0x759 DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8F DUP2 PUSH2 0x383 DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x2039 PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0x2028 PUSH1 0x5 DUP5 ADD SLOAD SWAP6 PUSH1 0x40 MLOAD PUSH2 0x1FC2 DUP2 PUSH2 0x383 DUP2 PUSH1 0x7 DUP11 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x8 DUP7 ADD SLOAD SWAP8 PUSH1 0xFF PUSH1 0x9 DUP9 ADD SLOAD AND SWAP5 PUSH2 0x200B PUSH1 0xB PUSH1 0xA DUP11 ADD SLOAD SWAP10 ADD SLOAD SWAP10 PUSH2 0x1FFD PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP1 DUP2 MSTORE PUSH2 0x160 SWAP1 DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x241E JUMP JUMPDEST DUP14 DUP2 SUB PUSH1 0x40 DUP16 ADD MSTORE SWAP1 PUSH2 0x241E JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE DUP9 DUP3 SUB PUSH1 0xC0 DUP11 ADD MSTORE PUSH2 0x241E JUMP JUMPDEST SWAP5 PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x2443 JUMP JUMPDEST PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x206A PUSH2 0x228C JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x208F PUSH2 0x2083 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2A60 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2239 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x222 PUSH1 0x4 CALLDATALOAD PUSH2 0x20B2 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0x20BF PUSH1 0xA SLOAD DUP3 LT PUSH2 0x260F JUMP JUMPDEST PUSH2 0x2668 JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x180 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xB PUSH1 0x0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x214C PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 SELFBALANCE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ISZERO PUSH2 0x2171 JUMPI JUMPDEST CALL ISZERO PUSH2 0xC72 JUMPI STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0x2169 JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xB SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 PUSH1 0xB PUSH1 0x0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x21DE JUMPI PUSH2 0x208F DUP6 PUSH2 0x2083 DUP2 DUP10 SUB DUP3 PUSH2 0x23DA JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x21C7 JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xC SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2260 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2252 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1158 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x180 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x180 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x22E8 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x22D2 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x22C7 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x2303 DUP4 PUSH2 0x22B8 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2365 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2325 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x2351 JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x231F JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x233A JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x231F JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xC5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x180 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xC5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xC5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xC5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x240E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23FE JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2437 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x23FB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x628 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xC5C JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x180 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x2482 DUP3 PUSH2 0x2450 JUMP JUMPDEST SWAP3 PUSH2 0x2490 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x23DA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x180 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xC5C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1158 JUMPI PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x24F9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x180 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2525 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x155CD95C881B9BDD081C9959DA5CDD195C9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1DB0 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1158 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1158 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x180 JUMPI DUP1 MLOAD PUSH2 0x25A6 DUP2 PUSH2 0x2450 JUMP JUMPDEST SWAP3 PUSH2 0x25B4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x23DA JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x180 JUMPI PUSH2 0x25D2 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x23FB JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x25E0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x25FD JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2616 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526573656172636820646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1DB0 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP2 KECCAK256 SWAP5 PUSH1 0x9 DUP7 ADD SWAP6 PUSH1 0xFF DUP8 SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x2978 JUMPI PUSH1 0x2 SUB PUSH2 0x292A JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 DUP2 DUP2 SLOAD AND SWAP3 PUSH1 0x3 DUP2 ADD SWAP10 DUP6 DUP5 DUP13 SLOAD AND DUP10 MLOAD SWAP7 DUP8 SWAP2 PUSH4 0x4F7A3A75 PUSH1 0xE0 SHL DUP4 MSTORE DUP7 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x24 DUP4 ADD MSTORE DUP2 DUP11 DUP13 DUP8 PUSH5 0x3830B832B9 PUSH1 0xD9 SHL DUP8 PUSH2 0x2716 PUSH2 0x2703 PUSH2 0x26ED PUSH1 0xA4 DUP10 ADD PUSH1 0x1 DUP8 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 NOT SWAP7 DUP8 DUP12 DUP5 SUB ADD PUSH1 0x44 DUP13 ADD MSTORE ADD PUSH2 0x22F2 JUMP JUMPDEST DUP5 DUP9 DUP3 SUB ADD PUSH1 0x64 DUP10 ADD MSTORE PUSH1 0x7 DUP14 ADD PUSH2 0x22F2 JUMP JUMPDEST DUP7 DUP2 SUB SWAP4 DUP5 ADD PUSH1 0x84 DUP9 ADD MSTORE PUSH1 0x5 DUP2 MSTORE ADD MSTORE ADD SWAP3 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x2920 JUMPI DUP8 SWAP6 PUSH2 0x28ED JUMPI JUMPDEST POP PUSH1 0x5 DUP3 ADD DUP6 SWAP1 SSTORE TIMESTAMP PUSH1 0x8 DUP4 ADD SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE PUSH1 0x2 SLOAD DUP11 SLOAD DUP9 MLOAD PUSH4 0xBACCBFDB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP6 AND DUP5 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP6 AND SWAP3 DUP8 DUP3 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x28E3 JUMPI DUP10 SWAP3 PUSH2 0x28AF JUMPI JUMPDEST POP PUSH1 0xB ADD SLOAD SWAP1 PUSH1 0xA DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0x289C JUMPI SWAP1 PUSH2 0x27A9 SWAP2 PUSH2 0x265B JUMP JUMPDEST SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x2898 JUMPI SWAP1 PUSH1 0x44 DUP9 SWAP3 DUP4 DUP12 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x1EB92341 PUSH1 0xE3 SHL DUP6 MSTORE DUP10 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x288E JUMPI PUSH2 0x283D JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x3 SWAP3 SWAP2 PUSH32 0xBF769E221FD48094869EACDBF9DE22B6870F4F9FDF03FD35D6AB5CF72EDE70D SWAP7 SWAP8 SWAP9 SLOAD AND SWAP1 DUP8 PUSH32 0xD8CE22AFD7E21E21188AD06F8603F1D280D2C289BCA98A7E29CCB17934C5BEA4 DUP8 MLOAD SWAP7 DUP1 LOG4 PUSH1 0x2 DUP4 MSTORE DUP3 ADD MSTORE LOG2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SWAP11 SWAP7 SWAP3 SWAP11 GT PUSH2 0x287B JUMPI DUP7 MSTORE SWAP4 SWAP8 POP DUP1 PUSH32 0xBF769E221FD48094869EACDBF9DE22B6870F4F9FDF03FD35D6AB5CF72EDE70D PUSH2 0x27DE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 DUP11 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x28DC JUMPI JUMPDEST PUSH2 0x28C7 DUP2 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x28D8 JUMPI MLOAD SWAP1 PUSH1 0xB PUSH2 0x2786 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x28BD JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP5 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2919 JUMPI JUMPDEST PUSH2 0x2905 DUP2 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2915 JUMPI MLOAD SWAP4 CODESIZE PUSH2 0x2739 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x28FB JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265736561726368206E6F7420726561647920666F72207075626C697368696E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x67 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x231F JUMPI DUP4 SWAP2 DUP5 SWAP2 DUP6 JUMPDEST DUP3 DUP2 LT PUSH2 0x29ED JUMPI POP POP SWAP1 PUSH2 0x29BD SWAP2 PUSH2 0x265B JUMP JUMPDEST SWAP2 DUP3 ISZERO PUSH2 0x29D9 JUMPI SWAP2 PUSH1 0x40 SWAP2 PUSH1 0xB SWAP4 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DIV SWAP3 KECCAK256 ADD SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH2 0x2A08 PUSH2 0x29FA DUP3 DUP5 PUSH2 0x24C9 JUMP JUMPDEST POP SWAP6 PUSH1 0x2 DUP1 SWAP8 ADD SLOAD SWAP1 PUSH2 0x265B JUMP JUMPDEST SWAP5 DUP6 PUSH1 0xFF PUSH1 0x6 PUSH2 0x2A18 DUP6 DUP8 PUSH2 0x24C9 JUMP JUMPDEST POP ADD SLOAD AND PUSH2 0x2A31 JUMPI JUMPDEST POP POP PUSH2 0x2A2C SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x2A2C SWAP3 SWAP7 POP PUSH2 0x2A44 PUSH2 0x2A58 SWAP3 SWAP7 PUSH2 0x2560 JUMP JUMPDEST SWAP6 PUSH2 0x2A4F DUP9 DUP7 PUSH2 0x24C9 JUMP JUMPDEST POP ADD SLOAD SWAP1 PUSH2 0x265B JUMP JUMPDEST SWAP5 SWAP1 CODESIZE PUSH2 0x2A21 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP4 ADD SWAP2 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A97 JUMPI POP POP POP PUSH2 0x2A95 SWAP3 POP SUB DUP4 PUSH2 0x23DA JUMP JUMPDEST JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2A7F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE PUSH11 0x2449D9E3AD41F37A67D25A DUP15 0x2C JUMPI PUSH7 0xCFBE84B9C7A565 0x5E 0x2A 0xFC 0x28 0xC4 DUP10 0x2D CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"279:13013:24:-:0;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;2896:10;1273:26:2;1269:95;;-1:-1:-1;279:13013:24;;;;;;;;2896:10;;279:13013;;;;-1:-1:-1;279:13013:24;;;;;;;;;2896:10;;;;;;;;279:13013;;3052:40:2;-1:-1:-1;3052:40:2;;279:13013:24;;;1599:2;;279:13013;1648:1;;279:13013;1685:10;;279:13013;;;1648:1;279:13013;;;1648:1;279:13013;;;2983:43;279:13013;;;2983:43;279:13013;;;3036:42;279:13013;;;3036:42;279:13013;;;3088:43;279:13013;;;3088:43;279:13013;;3141:18;279:13013;;;;;;;;1269:95:2;279:13013:24;;-1:-1:-1;;;1322:31:2;;-1:-1:-1;1322:31:2;;;279:13013:24;;;1322:31:2;279:13013:24;-1:-1:-1;279:13013:24;;;;;;-1:-1:-1;279:13013:24;;;;;-1:-1:-1;279:13013:24;;;;-1:-1:-1;;;;;279:13013:24;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":8844,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_40892":{"entryPoint":8866,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":9489,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":9323,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":9616,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":8761,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_ResearchStatus":{"entryPoint":9283,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":9246,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":8946,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":9394,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":9296,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":9819,"id":null,"parameterSlots":2,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":9685,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_from_storage_to_memory_array_uint256_dyn":{"entryPoint":10848,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":9211,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8888,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":9178,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_40897":{"entryPoint":9096,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_40909":{"entryPoint":9123,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_52222":{"entryPoint":9151,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":9445,"id":464,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":9708,"id":2152,"parameterSlots":0,"returnSlots":0},"fun_publishResearch":{"entryPoint":9832,"id":9100,"parameterSlots":1,"returnSlots":0},"fun_updateAverageRating":{"entryPoint":10636,"id":9195,"parameterSlots":1,"returnSlots":0},"increment_uint256":{"entryPoint":9568,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":9596,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_uint256_dyn_40907":{"entryPoint":9583,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":9743,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_263f":{"entryPoint":9502,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_PeerReview_dyn":{"entryPoint":9417,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn":{"entryPoint":8820,"id":null,"parameterSlots":2,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c9081630699b9d41461221e575080631c5f3099146121f55780632f3f4b921461217a5780633ccfd60b1461213357806347d0fa76146121155780634dd8eb1c146120c457806353d263801461209357806355018530146120495780635f7d070414611f43578063715018a614611eea5780637788bc6c14611ec15780637c7198cc14611e745780638a61809c14611def5780638da5cb5b14611dc65780638fa37b4614611d855780639423d32114611d67578063b0c8226614611d3e578063b8f02b301461153a578063c1ecfefa146107b0578063cecd8306146106dd578063d56d229d146106b4578063d6f13d541461065c578063e07bc5921461063e578063e3e02ba7146103d2578063ea41608a14610224578063eb2093e01461020e578063f2fde38b146101855763ff4385521461015357600080fd5b346101805760603660031901126101805761016c6124e5565b600435600c55602435600d55604435600e55005b600080fd5b346101805760203660031901126101805761019e61228c565b6101a66124e5565b6001600160a01b039081169081156101f557600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b6000366003190112610180576102226124e5565b005b346101805760208060031936011261018057600435610246600a54821061260f565b6000526007908181526040600020805461025f816124b2565b9361026d60405195866123da565b8185528385018093600052846000206000915b84831061033e57604080518881528951818a01819052600092600582901b83018101918a918c9085015b8287106102b75785850386f35b909192938280600192603f1989820301855287519081518152848060a01b0383830151168382015260408201516040820152610318610305606060e0818601519185015260e084019061241e565b608080850151908483039085015261241e565b9160a0808201519083015260c080910151151591015296019201960195929190926102aa565b838760019260409a999a5161035281612388565b85548152848060a01b038587015416838201526002860154604082015260405161038a816103838160038b016122f2565b03826123da565b60608201526040516103a3816103838160048b016122f2565b6080820152600586015460a082015260ff600687015416151560c0820152815201920192019190969596610280565b346101805760203660031901126101805760043560006101606040516103f7816123a3565b82815260606020820152606060408201528260608201528260808201528260a0820152606060c0820152606060e0820152826101008201528261012082015282610140820152015261044c600a54821061260f565b6000526006602052604060002060405190610466826123a3565b8054825260405161047e8161038381600186016122f2565b60208301526040516104978161038381600286016122f2565b604083015260038101546001600160a01b0316606083015260048101546080830152600581015460a08301526104cf60068201612a60565b60c08301526040516104e88161038381600786016122f2565b60e0830152600881015461010083015260ff60098201541690600582101561062857600b91610120840152600a8101546101408401520154610160820152604051602081528151602082015261054f602083015161018060408401526101a083019061241e565b9161056c604082015193601f19948585830301606086015261241e565b9260018060a01b036060830151166080840152608082015160a084015260a082015160c084015260c082015193818482030160e08501526020808651928381520195019060005b818110610612575050506105db83946101609260e0850151908683030161010087015261241e565b916101008101516101208501526105fc610120820151610140860190612443565b6101408101518285015201516101808301520390f35b82518752602096870196909201916001016105b3565b634e487b7160e01b600052602160045260246000fd5b34610180576000366003190112610180576020600e54604051908152f35b346101805760403660031901126101805761067561228c565b6001600160a01b0316600090815260086020526040902080546024359190821015610180576020916106a691612274565b90546040519160031b1c8152f35b34610180576000366003190112610180576004546040516001600160a01b039091168152602090f35b34610180576040366003190112610180576024356004356000526007602052604060002090815481101561018057610714916124c9565b50805460018060a01b0360018301541691600281015461079f6040516107418161038381600388016122f2565b61079160405191610760836107598160048a016122f2565b03846123da565b60ff60066005880154970154169460405198899889526020890152604088015260e0606088015260e087019061241e565b90858203608087015261241e565b9160a0840152151560c08301520390f35b3461018057610120366003190112610180576004356001600160401b038111610180576107e190369060040161246b565b6024356001600160401b0381116101805761080090369060040161246b565b906044356001600160401b0381116101805761082090369060040161246b565b916064356001600160401b0381116101805761084090369060040161246b565b6084356001600160401b0381116101805761085f90369060040161246b565b9260a4356001600160401b0381116101805761087f90369060040161246b565b926001600160401b0360c435116101805736602360c435011215610180576108ac60c435600401356124b2565b936108ba60405195866123da565b60c4356004013585526020850136602460c4356004013560051b60c43501011161018057602460c43501905b602460c4356004013560051b60c4350101821061152a57505060e4359687151588036101805760025460405163a787c80b60e01b815233600482015290602090829060249082906001600160a01b03165afa8015610c72576000906114ef575b610950915061251e565b6109586125ec565b8351156114b25760025460405163056720bf60e51b815233600482015290602090829060249082906001600160a01b03165afa908115610c7257600091611478575b501561143b5760035496976001600160a01b039097169660005b8751811015610cf0576109c7818961257c565b51604051906374b7c47560e11b825260048201526020816024818d5afa908115610c7257600091610cb6575b5015610c7e57610a03818961257c565b516040519063088a4d6d60e11b825260048201526000816024818d5afa908115610c7257600091610a94575b5051336001600160a01b0390911603610a5057610a4b90612560565b6109b4565b606460405162461bcd60e51b815260206004820152602060248201527f5a4b2070726f6f66206e6f74206f776e656420627920726573656172636865726044820152fd5b90503d806000833e610aa681836123da565b6020828281010312610180578151916001600160401b0383116101805761020083820183830103126101805760405192836101008101106001600160401b0361010086011117610c5c576101008401604052818101516001600160a01b0381168103610180578452602081830101516001600160401b03811161018057610b34908484019083850101612590565b6020850152828201605f82840101121561018057604051806101008101106001600160401b0361010083011117610c5c57610100810160405280848401610140848601011161018057604083850101905b610140848601018210610c4c575050604085015282820161015f82840101121561018057604051610bb5816123bf565b8084840161018084860101116101805761014083850101905b610180848601018210610c3c5750506060850152610bf161018082840101612511565b60808501528181016101a081015160a08601526101c081015160c08601526101e00151906001600160401b03821161018057610c31938301920101612590565b60e08201528b610a2f565b8151815260209182019101610bce565b8151815260209182019101610b85565b634e487b7160e01b600052604160045260246000fd5b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2102d2590383937b7b360811b6044820152606490fd5b90506020813d602011610ce8575b81610cd1602093836123da565b8101031261018057610ce290612511565b8b6109f3565b3d9150610cc4565b50604051969495919089610d03896123bf565b6001895260005b60208110611428575090610dc1610daf610d8b98999a93604051610d2d816123bf565b60088152670e4cae6cac2e4c6d60c31b6020820152610d4b8661256f565b52610d558561256f565b506005546040516344bc6d2560e01b815260e060048201529a6001600160a01b03909116978b97610d9d929060e48a019061241e565b8881036003190160248a01529061241e565b8681036003190160448801529061241e565b8481036003190160648601528661241e565b90151560848401526101043560a48401526003198382030160c4840152815180825260208201916020808360051b8301019401926000915b8383106113f7575050505050918160008160209503925af1928315610c72576000936113c3575b50600a5493610e2e85612560565b600a5560405192610e3e846123a3565b8584528660208501526040840152336060840152836080840152600060a084015260c083015260e082015260006101008201526001610120820152600061014082015260006101608201528260005260066020526040600020908051825560208101518051906001600160401b038211610c5c578190610ec160018601546122b8565b601f811161138e575b50602090601f831160011461131c57600092611311575b50508160011b916000199060031b1c19161760018301555b60408101518051906001600160401b038211610c5c578190610f1e60028601546122b8565b601f81116112dc575b50602090601f831160011461126a5760009261125f575b50508160011b916000199060031b1c19161760028301555b6003820160018060a01b036060830151166001600160601b0360a01b8254161790556080810151600483015560a0810151600583015560c08101518051906001600160401b038211610c5c57600160401b8211610c5c57602090600685015483600687015580841061123f575b500160068401600052602060002060005b83811061122b575050505060e08101518051906001600160401b038211610c5c57819061100460078601546122b8565b601f81116111eb575b50602090601f83116001146111795760009261116e575b50508160011b916000199060031b1c19161760078301555b61010081015160088301556101208101516009830191600582101561062857600b926101609260ff80198354169116179055610140810151600a850155015191015533600052600860205260406000208054600160401b811015610c5c576110a991600182018155612274565b81549060031b9084821b91600019901b1916179055600b5492600160401b841015610c5c576001840180600b55841015611158577f7a4ae4a41033f0aa82dc3cc2d18817fcaa2691062e3b16227b5381250e038399839182602096600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db901556111416040519160408352604083019061241e565b93868201528033940390a360018055604051908152f35b634e487b7160e01b600052603260045260246000fd5b015190508780611024565b9250600785016000526020600020906000935b601f19841685106111d0576001945083601f198116106111b7575b505050811b01600783015561103c565b015160001960f88460031b161c191690558780806111a7565b8181015183556020948501946001909301929091019061118c565b61121b90600787016000526020600020601f850160051c81019160208610611221575b601f0160051c01906125d5565b8861100d565b909150819061120e565b600190602084519401938184015501610fd4565b6112599060068701600052848460002091820191016125d5565b88610fc3565b015190508780610f3e565b9250600285016000526020600020906000935b601f19841685106112c1576001945083601f198116106112a8575b505050811b016002830155610f56565b015160001960f88460031b161c19169055878080611298565b8181015183556020948501946001909301929091019061127d565b61130b90600287016000526020600020601f850160051c8101916020861061122157601f0160051c01906125d5565b88610f27565b015190508780610ee1565b9250600185016000526020600020906000935b601f1984168510611373576001945083601f1981161061135a575b505050811b016001830155610ef9565b015160001960f88460031b161c1916905587808061134a565b8181015183556020948501946001909301929091019061132f565b6113bd90600187016000526020600020601f850160051c8101916020861061122157601f0160051c01906125d5565b88610eca565b9092506020813d6020116113ef575b816113df602093836123da565b8101031261018057519185610e20565b3d91506113d2565b919395509193602080611416600193601f19868203018752895161241e565b97019301930190928995949293610df9565b60606020828c0181019190915201610d0a565b60405162461bcd60e51b8152602060048201526015602482015274155cd95c881b5d5cdd081899481d995c9a599a5959605a1b6044820152606490fd5b90506020813d6020116114aa575b81611493602093836123da565b81010312610180576114a490612511565b8961099a565b3d9150611486565b60405162461bcd60e51b81526020600482015260156024820152745469746c652063616e6e6f7420626520656d70747960581b6044820152606490fd5b506020813d602011611522575b81611509602093836123da565b810103126101805761151d61095091612511565b610946565b3d91506114fc565b81358152602091820191016108e6565b34610180576080366003190112610180576044356001600160401b0381116101805761156a90369060040161246b565b6064356001600160401b0381116101805761158990369060040161246b565b60025460405163a787c80b60e01b815233600482015290602090829060249082906001600160a01b03165afa8015610c7257600090611d03575b6115cd915061251e565b6115dc600a546004351061260f565b6115e46125ec565b600435600052600660205260406000209060ff60098301541660058110156106285760018114908115611cf8575b5015611ca95760038201546001600160a01b03163314611c6457600435600052600960205260406000203360005260205260ff60406000205416611c1f576001602435101580611c12575b15611bcd5760025460405163baccbfdb60e01b81523360048201526001600160a01b039091169190602081602481865afa908115610c7257600091611b9b575b50600c5411611b4c57602490600435600052600760205260206040600020936040519384809263056720bf60e51b82523360048301525afa918215610c7257600092611b10575b50604051946116f286612388565b60043586523360208701526024356040870152606086015260808501524260a0850152151560c08401528054600160401b811015610c5c57611739916001820181556124c9565b929092611afa57805183556001830160018060a01b036020830151166001600160601b0360a01b8254161790556040810151600284015560608101519283516001600160401b038111610c5c5761179360038301546122b8565b601f8111611ac5575b506020601f8211600114611a56578192939495600092611a4b575b50508160011b916000199060031b1c19161760038201555b60808201518051906001600160401b038211610c5c576117f260048401546122b8565b601f8111611a16575b50602090601f83116001146119a157918060c09492600694600092611996575b50508160011b916000199060031b1c19161760048201555b60a084015160058201550191015115159060ff199160ff83835416911617905560043560005260096020526040600020336000526020526040600020600182825416179055600a8201906118878254612560565b825560098301549060ff821660058110156106285760011461194f575b50506118b160043561298c565b47600e548091101561192a575b50604051602435815233907fc365c5f538389984d687768c80d5d858622fa9f66a9290efdc9defca6b0c973a602060043592a354600d541115908161191a575b5061190a575b60018055005b611915600435612668565b611904565b60079150600b01541015816118fe565b600080808093818115611946575b3390f115610c7257826118be565b506108fc611938565b6002911617600983015560405160018152600260208201527f0bf769e221fd48094869eacdbf9de22b6870f4f9fdf03fd35d6ab5cf72ede70d604060043592a282806118a4565b01519050878061181b565b906004840160005260206000209160005b601f19851681106119fe57509260c0949260019260069583601f198116106119e5575b505050811b016004820155611833565b015160001960f88460031b161c191690558780806119d5565b919260206001819286850151815501940192016119b2565b611a4590600485016000526020600020601f850160051c8101916020861061122157601f0160051c01906125d5565b856117fb565b0151905085806117b7565b6003830160005260206000209060005b601f1984168110611aad575060019394959683601f19811610611a94575b505050811b0160038201556117cf565b015160001960f88460031b161c19169055858080611a84565b9091602060018192858b015181550193019101611a66565b611af490600384016000526020600020601f840160051c8101916020851061122157601f0160051c01906125d5565b8561179c565b634e487b7160e01b600052600060045260246000fd5b9091506020813d602011611b44575b81611b2c602093836123da565b8101031261018057611b3d90612511565b90856116e4565b3d9150611b1f565b60405162461bcd60e51b815260206004820152602160248201527f496e73756666696369656e742072657075746174696f6e20746f2072657669656044820152607760f81b6064820152608490fd5b90506020813d602011611bc5575b81611bb6602093836123da565b8101031261018057518561169d565b3d9150611ba9565b60405162461bcd60e51b815260206004820152601b60248201527f526174696e67206d757374206265206265747765656e20312d313000000000006044820152606490fd5b50600a602435111561165d565b60405162461bcd60e51b815260206004820152601e60248201527f416c7265616479207265766965776564207468697320726573656172636800006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420726576696577206f776e2072657365617263680000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f5265736561726368206e6f7420617661696c61626c6520666f722072657669656044820152607760f81b6064820152608490fd5b600291501484611612565b506020813d602011611d36575b81611d1d602093836123da565b8101031261018057611d316115cd91612511565b6115c3565b3d9150611d10565b34610180576000366003190112610180576005546040516001600160a01b039091168152602090f35b34610180576000366003190112610180576020600a54604051908152f35b3461018057600036600319011261018057600a546000198101908111611db057602090604051908152f35b634e487b7160e01b600052601160045260246000fd5b34610180576000366003190112610180576000546040516001600160a01b039091168152602090f35b3461018057608036600319011261018057611e0861228c565b611e106122a2565b906044356001600160a01b0381811691829003610180576064359381851680950361018057611e3d6124e5565b816001600160601b0360a01b9416846002541617600255168260035416176003558160045416176004556005541617600555600080f35b3461018057604036600319011261018057611e8d6122a2565b600435600052600960205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b34610180576000366003190112610180576003546040516001600160a01b039091168152602090f35b3461018057600036600319011261018057611f036124e5565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101805760203660031901126101805760043560005260066020526040600020805460405191611f7b8361075981600185016122f2565b604051611f8f8161038381600286016122f2565b60018060a01b03600383015416916120396004820154612028600584015495604051611fc2816103838160078a016122f2565b60088601549760ff6009880154169461200b600b600a8a015499015499611ffd6040519e8f9e8f90815261016090816020820152019061241e565b8d810360408f01529061241e565b9360608c015260808b015260a08a015288820360c08a015261241e565b9460e0870152610100860190612443565b6101208401526101408301520390f35b34610180576020366003190112610180576001600160a01b0361206a61228c565b16600052600860205261208f6120836040600020612a60565b60405191829182612239565b0390f35b34610180576020366003190112610180576102226004356120b26124e5565b6120bf600a54821061260f565b612668565b3461018057602036600319011261018057600435600b5481101561018057602090600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90154604051908152f35b34610180576000366003190112610180576020600d54604051908152f35b346101805760003660031901126101805761214c6124e5565b6000805481908190819047906001600160a01b0316828215612171575bf115610c7257005b506108fc612169565b346101805760003660031901126101805760405180600b5491828152602080910192600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9916000905b8282106121de5761208f85612083818903826123da565b8354865294850194600193840193909101906121c7565b34610180576000366003190112610180576002546040516001600160a01b039091168152602090f35b3461018057600036600319011261018057602090600c548152f35b6020908160408183019282815285518094520193019160005b828110612260575050505090565b835185529381019392810192600101612252565b80548210156111585760005260206000200190600090565b600435906001600160a01b038216820361018057565b602435906001600160a01b038216820361018057565b90600182811c921680156122e8575b60208310146122d257565b634e487b7160e01b600052602260045260246000fd5b91607f16916122c7565b9060009291805491612303836122b8565b9182825260019384811690816000146123655750600114612325575b50505050565b90919394506000526020928360002092846000945b83861061235157505050500101903880808061231f565b80548587018301529401938590820161233a565b9294505050602093945060ff191683830152151560051b0101903880808061231f565b60e081019081106001600160401b03821117610c5c57604052565b61018081019081106001600160401b03821117610c5c57604052565b604081019081106001600160401b03821117610c5c57604052565b90601f801991011681019081106001600160401b03821117610c5c57604052565b60005b83811061240e5750506000910152565b81810151838201526020016123fe565b90602091612437815180928185528580860191016123fb565b601f01601f1916010190565b9060058210156106285752565b6001600160401b038111610c5c57601f01601f191660200190565b81601f820112156101805780359061248282612450565b9261249060405194856123da565b8284526020838301011161018057816000926020809301838601378301015290565b6001600160401b038111610c5c5760051b60200190565b8054821015611158576000526007602060002091020190600090565b6000546001600160a01b031633036124f957565b60405163118cdaa760e01b8152336004820152602490fd5b5190811515820361018057565b1561252557565b60405162461bcd60e51b8152602060048201526013602482015272155cd95c881b9bdd081c9959da5cdd195c9959606a1b6044820152606490fd5b6000198114611db05760010190565b8051156111585760200190565b80518210156111585760209160051b010190565b81601f820112156101805780516125a681612450565b926125b460405194856123da565b81845260208284010111610180576125d291602080850191016123fb565b90565b8181106125e0575050565b600081556001016125d5565b6002600154146125fd576002600155565b604051633ee5aeb560e01b8152600490fd5b1561261657565b60405162461bcd60e51b815260206004820152601760248201527f526573656172636820646f6573206e6f742065786973740000000000000000006044820152606490fd5b91908201809211611db057565b906000918083526020926006845260409081812094600986019560ff87541660058110156129785760020361292a5760018060a01b0360048181541692600381019985848c54168951968791634f7a3a7560e01b83528683015260a06024830152818a8c87643830b832b960d91b876127166127036126ed60a48901600187016122f2565b600260031996878b84030160448c0152016122f2565b8488820301606489015260078d016122f2565b868103938401608488015260058152015201925af19485156129205787956128ed575b5060058201859055426008830155805460ff191660031790556002548a54885163baccbfdb60e01b8152908516848201819052918516928782602481875afa9182156128e35789926128af575b50600b015490600a820291808304600a149015171561289c57906127a99161265b565b90823b15612898579060448892838b519586948593631eb9234160e31b85528985015260248401525af1801561288e5761283d575b505090600392917f0bf769e221fd48094869eacdbf9de22b6870f4f9fdf03fd35d6ab5cf72ede70d969798541690877fd8ce22afd7e21e21188ad06f8603f1d280d2c289bca98a7e29ccb17934c5bea487519680a460028352820152a2565b6001600160401b03819a96929a1161287b578652939750807f0bf769e221fd48094869eacdbf9de22b6870f4f9fdf03fd35d6ab5cf72ede70d6127de565b634e487b7160e01b825260418a52602482fd5b87513d88823e3d90fd5b8780fd5b634e487b7160e01b895260118552602489fd5b9091508781813d83116128dc575b6128c781836123da565b810103126128d8575190600b612786565b8880fd5b503d6128bd565b8a513d8b823e3d90fd5b9094508581813d8311612919575b61290581836123da565b8101031261291557519338612739565b8680fd5b503d6128fb565b88513d89823e3d90fd5b835162461bcd60e51b815260048101839052602160248201527f5265736561726368206e6f7420726561647920666f72207075626c697368696e6044820152606760f81b6064820152608490fd5b634e487b7160e01b84526021600452602484fd5b600090808252600760205260408220805490811561231f5783918491855b8281106129ed575050906129bd9161265b565b9182156129d95791604091600b93855260066020520492200155565b634e487b7160e01b84526012600452602484fd5b612a086129fa82846124c9565b50956002809701549061265b565b948560ff6006612a1885876124c9565b50015416612a31575b5050612a2c90612560565b6129aa565b612a2c929650612a44612a589296612560565b95612a4f88866124c9565b5001549061265b565b949038612a21565b9060405191828154918282526020928383019160005283600020936000905b828210612a9757505050612a95925003836123da565b565b855484526001958601958895509381019390910190612a7f56fea2646970667358221220476a2449d9e3ad41f37a67d25a8e2c5766cfbe84b9c7a5655e2afc28c4892df264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x699B9D4 EQ PUSH2 0x221E JUMPI POP DUP1 PUSH4 0x1C5F3099 EQ PUSH2 0x21F5 JUMPI DUP1 PUSH4 0x2F3F4B92 EQ PUSH2 0x217A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2133 JUMPI DUP1 PUSH4 0x47D0FA76 EQ PUSH2 0x2115 JUMPI DUP1 PUSH4 0x4DD8EB1C EQ PUSH2 0x20C4 JUMPI DUP1 PUSH4 0x53D26380 EQ PUSH2 0x2093 JUMPI DUP1 PUSH4 0x55018530 EQ PUSH2 0x2049 JUMPI DUP1 PUSH4 0x5F7D0704 EQ PUSH2 0x1F43 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EEA JUMPI DUP1 PUSH4 0x7788BC6C EQ PUSH2 0x1EC1 JUMPI DUP1 PUSH4 0x7C7198CC EQ PUSH2 0x1E74 JUMPI DUP1 PUSH4 0x8A61809C EQ PUSH2 0x1DEF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DC6 JUMPI DUP1 PUSH4 0x8FA37B46 EQ PUSH2 0x1D85 JUMPI DUP1 PUSH4 0x9423D321 EQ PUSH2 0x1D67 JUMPI DUP1 PUSH4 0xB0C82266 EQ PUSH2 0x1D3E JUMPI DUP1 PUSH4 0xB8F02B30 EQ PUSH2 0x153A JUMPI DUP1 PUSH4 0xC1ECFEFA EQ PUSH2 0x7B0 JUMPI DUP1 PUSH4 0xCECD8306 EQ PUSH2 0x6DD JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x6B4 JUMPI DUP1 PUSH4 0xD6F13D54 EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0xE07BC592 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xE3E02BA7 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xEA41608A EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xEB2093E0 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x185 JUMPI PUSH4 0xFF438552 EQ PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x16C PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xC SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0xD SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xE SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x19E PUSH2 0x228C JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x222 PUSH2 0x24E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x180 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x246 PUSH1 0xA SLOAD DUP3 LT PUSH2 0x260F JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x7 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x25F DUP2 PUSH2 0x24B2 JUMP JUMPDEST SWAP4 PUSH2 0x26D PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x23DA JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP6 ADD DUP1 SWAP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x33E JUMPI PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE DUP10 MLOAD DUP2 DUP11 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x5 DUP3 SWAP1 SHL DUP4 ADD DUP2 ADD SWAP2 DUP11 SWAP2 DUP13 SWAP1 DUP6 ADD JUMPDEST DUP3 DUP8 LT PUSH2 0x2B7 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 DUP2 MLOAD DUP2 MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP4 DUP4 ADD MLOAD AND DUP4 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x318 PUSH2 0x305 PUSH1 0x60 PUSH1 0xE0 DUP2 DUP7 ADD MLOAD SWAP2 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD SWAP1 PUSH2 0x241E JUMP JUMPDEST PUSH1 0x80 DUP1 DUP6 ADD MLOAD SWAP1 DUP5 DUP4 SUB SWAP1 DUP6 ADD MSTORE PUSH2 0x241E JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xC0 DUP1 SWAP2 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x2AA JUMP JUMPDEST DUP4 DUP8 PUSH1 0x1 SWAP3 PUSH1 0x40 SWAP11 SWAP10 SWAP11 MLOAD PUSH2 0x352 DUP2 PUSH2 0x2388 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP6 DUP8 ADD SLOAD AND DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x38A DUP2 PUSH2 0x383 DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x22F2 JUMP JUMPDEST SUB DUP3 PUSH2 0x23DA JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3A3 DUP2 PUSH2 0x383 DUP2 PUSH1 0x4 DUP12 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x6 DUP8 ADD SLOAD AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP7 SWAP6 SWAP7 PUSH2 0x280 JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH2 0x160 PUSH1 0x40 MLOAD PUSH2 0x3F7 DUP2 PUSH2 0x23A3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE PUSH2 0x44C PUSH1 0xA SLOAD DUP3 LT PUSH2 0x260F JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x466 DUP3 PUSH2 0x23A3 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x40 MLOAD PUSH2 0x47E DUP2 PUSH2 0x383 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x497 DUP2 PUSH2 0x383 DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x4CF PUSH1 0x6 DUP3 ADD PUSH2 0x2A60 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x4E8 DUP2 PUSH2 0x383 DUP2 PUSH1 0x7 DUP7 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x9 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x628 JUMPI PUSH1 0xB SWAP2 PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x54F PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x180 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1A0 DUP4 ADD SWAP1 PUSH2 0x241E JUMP JUMPDEST SWAP2 PUSH2 0x56C PUSH1 0x40 DUP3 ADD MLOAD SWAP4 PUSH1 0x1F NOT SWAP5 DUP6 DUP6 DUP4 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x241E JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD SWAP4 DUP2 DUP5 DUP3 SUB ADD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x20 DUP1 DUP7 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP6 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x612 JUMPI POP POP POP PUSH2 0x5DB DUP4 SWAP5 PUSH2 0x160 SWAP3 PUSH1 0xE0 DUP6 ADD MLOAD SWAP1 DUP7 DUP4 SUB ADD PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x241E JUMP JUMPDEST SWAP2 PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x5FC PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x140 DUP7 ADD SWAP1 PUSH2 0x2443 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x180 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP8 MSTORE PUSH1 0x20 SWAP7 DUP8 ADD SWAP7 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x5B3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x675 PUSH2 0x228C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x180 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x6A6 SWAP2 PUSH2 0x2274 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x180 JUMPI PUSH2 0x714 SWAP2 PUSH2 0x24C9 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x79F PUSH1 0x40 MLOAD PUSH2 0x741 DUP2 PUSH2 0x383 DUP2 PUSH1 0x3 DUP9 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH2 0x791 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x760 DUP4 PUSH2 0x759 DUP2 PUSH1 0x4 DUP11 ADD PUSH2 0x22F2 JUMP JUMPDEST SUB DUP5 PUSH2 0x23DA JUMP JUMPDEST PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP9 ADD SLOAD SWAP8 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x241E JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x241E JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x7E1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x800 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x820 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x840 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x85F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST SWAP3 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x87F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xC4 CALLDATALOAD GT PUSH2 0x180 JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0xC4 CALLDATALOAD ADD SLT ISZERO PUSH2 0x180 JUMPI PUSH2 0x8AC PUSH1 0xC4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x24B2 JUMP JUMPDEST SWAP4 PUSH2 0x8BA PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x23DA JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP6 MSTORE PUSH1 0x20 DUP6 ADD CALLDATASIZE PUSH1 0x24 PUSH1 0xC4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x5 SHL PUSH1 0xC4 CALLDATALOAD ADD ADD GT PUSH2 0x180 JUMPI PUSH1 0x24 PUSH1 0xC4 CALLDATALOAD ADD SWAP1 JUMPDEST PUSH1 0x24 PUSH1 0xC4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x5 SHL PUSH1 0xC4 CALLDATALOAD ADD ADD DUP3 LT PUSH2 0x152A JUMPI POP POP PUSH1 0xE4 CALLDATALOAD SWAP7 DUP8 ISZERO ISZERO DUP9 SUB PUSH2 0x180 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA787C80B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x14EF JUMPI JUMPDEST PUSH2 0x950 SWAP2 POP PUSH2 0x251E JUMP JUMPDEST PUSH2 0x958 PUSH2 0x25EC JUMP JUMPDEST DUP4 MLOAD ISZERO PUSH2 0x14B2 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x56720BF PUSH1 0xE5 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1478 JUMPI JUMPDEST POP ISZERO PUSH2 0x143B JUMPI PUSH1 0x3 SLOAD SWAP7 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND SWAP7 PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0xCF0 JUMPI PUSH2 0x9C7 DUP2 DUP10 PUSH2 0x257C JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x74B7C475 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP14 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xCB6 JUMPI JUMPDEST POP ISZERO PUSH2 0xC7E JUMPI PUSH2 0xA03 DUP2 DUP10 PUSH2 0x257C JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x88A4D6D PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x24 DUP2 DUP14 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xA94 JUMPI JUMPDEST POP MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0xA50 JUMPI PUSH2 0xA4B SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A4B2070726F6F66206E6F74206F776E65642062792072657365617263686572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0xAA6 DUP2 DUP4 PUSH2 0x23DA JUMP JUMPDEST PUSH1 0x20 DUP3 DUP3 DUP2 ADD SUB SLT PUSH2 0x180 JUMPI DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x180 JUMPI PUSH2 0x200 DUP4 DUP3 ADD DUP4 DUP4 ADD SUB SLT PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x100 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x100 DUP7 ADD GT OR PUSH2 0xC5C JUMPI PUSH2 0x100 DUP5 ADD PUSH1 0x40 MSTORE DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x180 JUMPI DUP5 MSTORE PUSH1 0x20 DUP2 DUP4 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0xB34 SWAP1 DUP5 DUP5 ADD SWAP1 DUP4 DUP6 ADD ADD PUSH2 0x2590 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE DUP3 DUP3 ADD PUSH1 0x5F DUP3 DUP5 ADD ADD SLT ISZERO PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x100 DUP4 ADD GT OR PUSH2 0xC5C JUMPI PUSH2 0x100 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 ADD PUSH2 0x140 DUP5 DUP7 ADD ADD GT PUSH2 0x180 JUMPI PUSH1 0x40 DUP4 DUP6 ADD ADD SWAP1 JUMPDEST PUSH2 0x140 DUP5 DUP7 ADD ADD DUP3 LT PUSH2 0xC4C JUMPI POP POP PUSH1 0x40 DUP6 ADD MSTORE DUP3 DUP3 ADD PUSH2 0x15F DUP3 DUP5 ADD ADD SLT ISZERO PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH2 0xBB5 DUP2 PUSH2 0x23BF JUMP JUMPDEST DUP1 DUP5 DUP5 ADD PUSH2 0x180 DUP5 DUP7 ADD ADD GT PUSH2 0x180 JUMPI PUSH2 0x140 DUP4 DUP6 ADD ADD SWAP1 JUMPDEST PUSH2 0x180 DUP5 DUP7 ADD ADD DUP3 LT PUSH2 0xC3C JUMPI POP POP PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xBF1 PUSH2 0x180 DUP3 DUP5 ADD ADD PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE DUP2 DUP2 ADD PUSH2 0x1A0 DUP2 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x1C0 DUP2 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1E0 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x180 JUMPI PUSH2 0xC31 SWAP4 DUP4 ADD SWAP3 ADD ADD PUSH2 0x2590 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE DUP12 PUSH2 0xA2F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xBCE JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB85 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B2102D2590383937B7B3 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCE8 JUMPI JUMPDEST DUP2 PUSH2 0xCD1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI PUSH2 0xCE2 SWAP1 PUSH2 0x2511 JUMP JUMPDEST DUP12 PUSH2 0x9F3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCC4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP7 SWAP5 SWAP6 SWAP2 SWAP1 DUP10 PUSH2 0xD03 DUP10 PUSH2 0x23BF JUMP JUMPDEST PUSH1 0x1 DUP10 MSTORE PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x1428 JUMPI POP SWAP1 PUSH2 0xDC1 PUSH2 0xDAF PUSH2 0xD8B SWAP9 SWAP10 SWAP11 SWAP4 PUSH1 0x40 MLOAD PUSH2 0xD2D DUP2 PUSH2 0x23BF JUMP JUMPDEST PUSH1 0x8 DUP2 MSTORE PUSH8 0xE4CAE6CAC2E4C6D PUSH1 0xC3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xD4B DUP7 PUSH2 0x256F JUMP JUMPDEST MSTORE PUSH2 0xD55 DUP6 PUSH2 0x256F JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x44BC6D25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xE0 PUSH1 0x4 DUP3 ADD MSTORE SWAP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP8 DUP12 SWAP8 PUSH2 0xD9D SWAP3 SWAP1 PUSH1 0xE4 DUP11 ADD SWAP1 PUSH2 0x241E JUMP JUMPDEST DUP9 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x24 DUP11 ADD MSTORE SWAP1 PUSH2 0x241E JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x44 DUP9 ADD MSTORE SWAP1 PUSH2 0x241E JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x64 DUP7 ADD MSTORE DUP7 PUSH2 0x241E JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0x3 NOT DUP4 DUP3 SUB ADD PUSH1 0xC4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x13F7 JUMPI POP POP POP POP POP SWAP2 DUP2 PUSH1 0x0 DUP2 PUSH1 0x20 SWAP6 SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x13C3 JUMPI JUMPDEST POP PUSH1 0xA SLOAD SWAP4 PUSH2 0xE2E DUP6 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0xE3E DUP5 PUSH2 0x23A3 JUMP JUMPDEST DUP6 DUP5 MSTORE DUP7 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD MSTORE DUP4 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x1 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC5C JUMPI DUP2 SWAP1 PUSH2 0xEC1 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x138E JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x131C JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1311 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC5C JUMPI DUP2 SWAP1 PUSH2 0xF1E PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x12DC JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x126A JUMPI PUSH1 0x0 SWAP3 PUSH2 0x125F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC5C JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0xC5C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 DUP6 ADD SLOAD DUP4 PUSH1 0x6 DUP8 ADD SSTORE DUP1 DUP5 LT PUSH2 0x123F JUMPI JUMPDEST POP ADD PUSH1 0x6 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x122B JUMPI POP POP POP POP PUSH1 0xE0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC5C JUMPI DUP2 SWAP1 PUSH2 0x1004 PUSH1 0x7 DUP7 ADD SLOAD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x11EB JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1179 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x116E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 DUP4 ADD SSTORE JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x8 DUP4 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP4 ADD SWAP2 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x628 JUMPI PUSH1 0xB SWAP3 PUSH2 0x160 SWAP3 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xA DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xC5C JUMPI PUSH2 0x10A9 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2274 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP5 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0xB SLOAD SWAP3 PUSH1 0x1 PUSH1 0x40 SHL DUP5 LT ISZERO PUSH2 0xC5C JUMPI PUSH1 0x1 DUP5 ADD DUP1 PUSH1 0xB SSTORE DUP5 LT ISZERO PUSH2 0x1158 JUMPI PUSH32 0x7A4AE4A41033F0AA82DC3CC2D18817FCAA2691062E3B16227B5381250E038399 DUP4 SWAP2 DUP3 PUSH1 0x20 SWAP7 PUSH1 0xB PUSH1 0x0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SSTORE PUSH2 0x1141 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x241E JUMP JUMPDEST SWAP4 DUP7 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1024 JUMP JUMPDEST SWAP3 POP PUSH1 0x7 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x11D0 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x11B7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x103C JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x11A7 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x118C JUMP JUMPDEST PUSH2 0x121B SWAP1 PUSH1 0x7 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x1221 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x25D5 JUMP JUMPDEST DUP9 PUSH2 0x100D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x1259 SWAP1 PUSH1 0x6 DUP8 ADD PUSH1 0x0 MSTORE DUP5 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x25D5 JUMP JUMPDEST DUP9 PUSH2 0xFC3 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0xF3E JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x12C1 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x12A8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0xF56 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x1298 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH2 0x130B SWAP1 PUSH1 0x2 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x1221 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x25D5 JUMP JUMPDEST DUP9 PUSH2 0xF27 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0xEE1 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1373 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x135A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0xEF9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x134A JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0x13BD SWAP1 PUSH1 0x1 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x1221 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x25D5 JUMP JUMPDEST DUP9 PUSH2 0xECA JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13EF JUMPI JUMPDEST DUP2 PUSH2 0x13DF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI MLOAD SWAP2 DUP6 PUSH2 0xE20 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x13D2 JUMP JUMPDEST SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 PUSH1 0x20 DUP1 PUSH2 0x1416 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x241E JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP1 SWAP3 DUP10 SWAP6 SWAP5 SWAP3 SWAP4 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x20 DUP3 DUP13 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x155CD95C881B5D5CDD081899481D995C9A599A5959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x14AA JUMPI JUMPDEST DUP2 PUSH2 0x1493 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI PUSH2 0x14A4 SWAP1 PUSH2 0x2511 JUMP JUMPDEST DUP10 PUSH2 0x99A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5469746C652063616E6E6F7420626520656D707479 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1522 JUMPI JUMPDEST DUP2 PUSH2 0x1509 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI PUSH2 0x151D PUSH2 0x950 SWAP2 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0x946 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x14FC JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x8E6 JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x156A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x1589 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x246B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA787C80B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x1D03 JUMPI JUMPDEST PUSH2 0x15CD SWAP2 POP PUSH2 0x251E JUMP JUMPDEST PUSH2 0x15DC PUSH1 0xA SLOAD PUSH1 0x4 CALLDATALOAD LT PUSH2 0x260F JUMP JUMPDEST PUSH2 0x15E4 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF PUSH1 0x9 DUP4 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x628 JUMPI PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1CF8 JUMPI JUMPDEST POP ISZERO PUSH2 0x1CA9 JUMPI PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C64 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1C1F JUMPI PUSH1 0x1 PUSH1 0x24 CALLDATALOAD LT ISZERO DUP1 PUSH2 0x1C12 JUMPI JUMPDEST ISZERO PUSH2 0x1BCD JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xBACCBFDB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1B9B JUMPI JUMPDEST POP PUSH1 0xC SLOAD GT PUSH2 0x1B4C JUMPI PUSH1 0x24 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x56720BF PUSH1 0xE5 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1B10 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP5 PUSH2 0x16F2 DUP7 PUSH2 0x2388 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP7 MSTORE CALLER PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xC5C JUMPI PUSH2 0x1739 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x24C9 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x1AFA JUMPI DUP1 MLOAD DUP4 SSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xC5C JUMPI PUSH2 0x1793 PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1AC5 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1A56 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x1A4B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC5C JUMPI PUSH2 0x17F2 PUSH1 0x4 DUP5 ADD SLOAD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A16 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x19A1 JUMPI SWAP2 DUP1 PUSH1 0xC0 SWAP5 SWAP3 PUSH1 0x6 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1996 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP3 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO SWAP1 PUSH1 0xFF NOT SWAP2 PUSH1 0xFF DUP4 DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xA DUP3 ADD SWAP1 PUSH2 0x1887 DUP3 SLOAD PUSH2 0x2560 JUMP JUMPDEST DUP3 SSTORE PUSH1 0x9 DUP4 ADD SLOAD SWAP1 PUSH1 0xFF DUP3 AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x628 JUMPI PUSH1 0x1 EQ PUSH2 0x194F JUMPI JUMPDEST POP POP PUSH2 0x18B1 PUSH1 0x4 CALLDATALOAD PUSH2 0x298C JUMP JUMPDEST SELFBALANCE PUSH1 0xE SLOAD DUP1 SWAP2 LT ISZERO PUSH2 0x192A JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE CALLER SWAP1 PUSH32 0xC365C5F538389984D687768C80D5D858622FA9F66A9290EFDC9DEFCA6B0C973A PUSH1 0x20 PUSH1 0x4 CALLDATALOAD SWAP3 LOG3 SLOAD PUSH1 0xD SLOAD GT ISZERO SWAP1 DUP2 PUSH2 0x191A JUMPI JUMPDEST POP PUSH2 0x190A JUMPI JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0x1915 PUSH1 0x4 CALLDATALOAD PUSH2 0x2668 JUMP JUMPDEST PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x7 SWAP2 POP PUSH1 0xB ADD SLOAD LT ISZERO DUP2 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 DUP2 DUP2 ISZERO PUSH2 0x1946 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0xC72 JUMPI DUP3 PUSH2 0x18BE JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x2 SWAP2 AND OR PUSH1 0x9 DUP4 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xBF769E221FD48094869EACDBF9DE22B6870F4F9FDF03FD35D6AB5CF72EDE70D PUSH1 0x40 PUSH1 0x4 CALLDATALOAD SWAP3 LOG2 DUP3 DUP1 PUSH2 0x18A4 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x181B JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x19FE JUMPI POP SWAP3 PUSH1 0xC0 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x6 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x19E5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP3 ADD SSTORE PUSH2 0x1833 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x19D5 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH2 0x1A45 SWAP1 PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x1221 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x25D5 JUMP JUMPDEST DUP6 PUSH2 0x17FB JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x1AAD JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 SWAP7 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1A94 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x17CF JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1A84 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1A66 JUMP JUMPDEST PUSH2 0x1AF4 SWAP1 PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1221 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x25D5 JUMP JUMPDEST DUP6 PUSH2 0x179C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B44 JUMPI JUMPDEST DUP2 PUSH2 0x1B2C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI PUSH2 0x1B3D SWAP1 PUSH2 0x2511 JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x16E4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742072657075746174696F6E20746F207265766965 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1BC5 JUMPI JUMPDEST DUP2 PUSH2 0x1BB6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI MLOAD DUP6 PUSH2 0x169D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526174696E67206D757374206265206265747765656E20312D31300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xA PUSH1 0x24 CALLDATALOAD GT ISZERO PUSH2 0x165D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920726576696577656420746869732072657365617263680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420726576696577206F776E207265736561726368000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265736561726368206E6F7420617661696C61626C6520666F72207265766965 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP2 POP EQ DUP5 PUSH2 0x1612 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D36 JUMPI JUMPDEST DUP2 PUSH2 0x1D1D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x180 JUMPI PUSH2 0x1D31 PUSH2 0x15CD SWAP2 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0x15C3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1D10 JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0xA SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1DB0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x1E08 PUSH2 0x228C JUMP JUMPDEST PUSH2 0x1E10 PUSH2 0x22A2 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x180 JUMPI PUSH1 0x64 CALLDATALOAD SWAP4 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x180 JUMPI PUSH2 0x1E3D PUSH2 0x24E5 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP5 AND DUP5 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND DUP3 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP2 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x1E8D PUSH2 0x22A2 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x1F03 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1F7B DUP4 PUSH2 0x759 DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8F DUP2 PUSH2 0x383 DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x2039 PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0x2028 PUSH1 0x5 DUP5 ADD SLOAD SWAP6 PUSH1 0x40 MLOAD PUSH2 0x1FC2 DUP2 PUSH2 0x383 DUP2 PUSH1 0x7 DUP11 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x8 DUP7 ADD SLOAD SWAP8 PUSH1 0xFF PUSH1 0x9 DUP9 ADD SLOAD AND SWAP5 PUSH2 0x200B PUSH1 0xB PUSH1 0xA DUP11 ADD SLOAD SWAP10 ADD SLOAD SWAP10 PUSH2 0x1FFD PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP1 DUP2 MSTORE PUSH2 0x160 SWAP1 DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x241E JUMP JUMPDEST DUP14 DUP2 SUB PUSH1 0x40 DUP16 ADD MSTORE SWAP1 PUSH2 0x241E JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE DUP9 DUP3 SUB PUSH1 0xC0 DUP11 ADD MSTORE PUSH2 0x241E JUMP JUMPDEST SWAP5 PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x2443 JUMP JUMPDEST PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x206A PUSH2 0x228C JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x208F PUSH2 0x2083 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2A60 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2239 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x222 PUSH1 0x4 CALLDATALOAD PUSH2 0x20B2 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0x20BF PUSH1 0xA SLOAD DUP3 LT PUSH2 0x260F JUMP JUMPDEST PUSH2 0x2668 JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x180 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xB PUSH1 0x0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH2 0x214C PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 SELFBALANCE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ISZERO PUSH2 0x2171 JUMPI JUMPDEST CALL ISZERO PUSH2 0xC72 JUMPI STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0x2169 JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xB SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 PUSH1 0xB PUSH1 0x0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x21DE JUMPI PUSH2 0x208F DUP6 PUSH2 0x2083 DUP2 DUP10 SUB DUP3 PUSH2 0x23DA JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x21C7 JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x180 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xC SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2260 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2252 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1158 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x180 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x180 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x22E8 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x22D2 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x22C7 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x2303 DUP4 PUSH2 0x22B8 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2365 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2325 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x2351 JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x231F JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x233A JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x231F JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xC5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x180 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xC5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xC5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xC5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x240E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23FE JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2437 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x23FB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x628 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xC5C JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x180 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x2482 DUP3 PUSH2 0x2450 JUMP JUMPDEST SWAP3 PUSH2 0x2490 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x23DA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x180 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xC5C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1158 JUMPI PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x24F9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x180 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2525 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x155CD95C881B9BDD081C9959DA5CDD195C9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1DB0 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1158 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1158 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x180 JUMPI DUP1 MLOAD PUSH2 0x25A6 DUP2 PUSH2 0x2450 JUMP JUMPDEST SWAP3 PUSH2 0x25B4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x23DA JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x180 JUMPI PUSH2 0x25D2 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x23FB JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x25E0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x25FD JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2616 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526573656172636820646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1DB0 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP2 KECCAK256 SWAP5 PUSH1 0x9 DUP7 ADD SWAP6 PUSH1 0xFF DUP8 SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x2978 JUMPI PUSH1 0x2 SUB PUSH2 0x292A JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 DUP2 DUP2 SLOAD AND SWAP3 PUSH1 0x3 DUP2 ADD SWAP10 DUP6 DUP5 DUP13 SLOAD AND DUP10 MLOAD SWAP7 DUP8 SWAP2 PUSH4 0x4F7A3A75 PUSH1 0xE0 SHL DUP4 MSTORE DUP7 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x24 DUP4 ADD MSTORE DUP2 DUP11 DUP13 DUP8 PUSH5 0x3830B832B9 PUSH1 0xD9 SHL DUP8 PUSH2 0x2716 PUSH2 0x2703 PUSH2 0x26ED PUSH1 0xA4 DUP10 ADD PUSH1 0x1 DUP8 ADD PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 NOT SWAP7 DUP8 DUP12 DUP5 SUB ADD PUSH1 0x44 DUP13 ADD MSTORE ADD PUSH2 0x22F2 JUMP JUMPDEST DUP5 DUP9 DUP3 SUB ADD PUSH1 0x64 DUP10 ADD MSTORE PUSH1 0x7 DUP14 ADD PUSH2 0x22F2 JUMP JUMPDEST DUP7 DUP2 SUB SWAP4 DUP5 ADD PUSH1 0x84 DUP9 ADD MSTORE PUSH1 0x5 DUP2 MSTORE ADD MSTORE ADD SWAP3 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x2920 JUMPI DUP8 SWAP6 PUSH2 0x28ED JUMPI JUMPDEST POP PUSH1 0x5 DUP3 ADD DUP6 SWAP1 SSTORE TIMESTAMP PUSH1 0x8 DUP4 ADD SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE PUSH1 0x2 SLOAD DUP11 SLOAD DUP9 MLOAD PUSH4 0xBACCBFDB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP6 AND DUP5 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP6 AND SWAP3 DUP8 DUP3 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x28E3 JUMPI DUP10 SWAP3 PUSH2 0x28AF JUMPI JUMPDEST POP PUSH1 0xB ADD SLOAD SWAP1 PUSH1 0xA DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0x289C JUMPI SWAP1 PUSH2 0x27A9 SWAP2 PUSH2 0x265B JUMP JUMPDEST SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x2898 JUMPI SWAP1 PUSH1 0x44 DUP9 SWAP3 DUP4 DUP12 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x1EB92341 PUSH1 0xE3 SHL DUP6 MSTORE DUP10 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x288E JUMPI PUSH2 0x283D JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x3 SWAP3 SWAP2 PUSH32 0xBF769E221FD48094869EACDBF9DE22B6870F4F9FDF03FD35D6AB5CF72EDE70D SWAP7 SWAP8 SWAP9 SLOAD AND SWAP1 DUP8 PUSH32 0xD8CE22AFD7E21E21188AD06F8603F1D280D2C289BCA98A7E29CCB17934C5BEA4 DUP8 MLOAD SWAP7 DUP1 LOG4 PUSH1 0x2 DUP4 MSTORE DUP3 ADD MSTORE LOG2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SWAP11 SWAP7 SWAP3 SWAP11 GT PUSH2 0x287B JUMPI DUP7 MSTORE SWAP4 SWAP8 POP DUP1 PUSH32 0xBF769E221FD48094869EACDBF9DE22B6870F4F9FDF03FD35D6AB5CF72EDE70D PUSH2 0x27DE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 DUP11 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x28DC JUMPI JUMPDEST PUSH2 0x28C7 DUP2 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x28D8 JUMPI MLOAD SWAP1 PUSH1 0xB PUSH2 0x2786 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x28BD JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP5 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2919 JUMPI JUMPDEST PUSH2 0x2905 DUP2 DUP4 PUSH2 0x23DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2915 JUMPI MLOAD SWAP4 CODESIZE PUSH2 0x2739 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x28FB JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265736561726368206E6F7420726561647920666F72207075626C697368696E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x67 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x231F JUMPI DUP4 SWAP2 DUP5 SWAP2 DUP6 JUMPDEST DUP3 DUP2 LT PUSH2 0x29ED JUMPI POP POP SWAP1 PUSH2 0x29BD SWAP2 PUSH2 0x265B JUMP JUMPDEST SWAP2 DUP3 ISZERO PUSH2 0x29D9 JUMPI SWAP2 PUSH1 0x40 SWAP2 PUSH1 0xB SWAP4 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DIV SWAP3 KECCAK256 ADD SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH2 0x2A08 PUSH2 0x29FA DUP3 DUP5 PUSH2 0x24C9 JUMP JUMPDEST POP SWAP6 PUSH1 0x2 DUP1 SWAP8 ADD SLOAD SWAP1 PUSH2 0x265B JUMP JUMPDEST SWAP5 DUP6 PUSH1 0xFF PUSH1 0x6 PUSH2 0x2A18 DUP6 DUP8 PUSH2 0x24C9 JUMP JUMPDEST POP ADD SLOAD AND PUSH2 0x2A31 JUMPI JUMPDEST POP POP PUSH2 0x2A2C SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x2A2C SWAP3 SWAP7 POP PUSH2 0x2A44 PUSH2 0x2A58 SWAP3 SWAP7 PUSH2 0x2560 JUMP JUMPDEST SWAP6 PUSH2 0x2A4F DUP9 DUP7 PUSH2 0x24C9 JUMP JUMPDEST POP ADD SLOAD SWAP1 PUSH2 0x265B JUMP JUMPDEST SWAP5 SWAP1 CODESIZE PUSH2 0x2A21 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP4 ADD SWAP2 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A97 JUMPI POP POP POP PUSH2 0x2A95 SWAP3 POP SUB DUP4 PUSH2 0x23DA JUMP JUMPDEST JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2A7F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE PUSH11 0x2449D9E3AD41F37A67D25A DUP15 0x2C JUMPI PUSH7 0xCFBE84B9C7A565 0x5E 0x2A 0xFC 0x28 0xC4 DUP10 0x2D CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"279:13013:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;1500:62:2;;:::i;:::-;279:13013:24;;12134:54;279:13013;;;12198:50;279:13013;;;12258:28;279:13013;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;279:13013:24;;;;2627:22:2;;2623:91;;279:13013:24;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;3052:40:2;279:13013:24;3052:40:2;;279:13013:24;2623:91:2;279:13013:24;;-1:-1:-1;;;2672:31:2;;279:13013:24;;2672:31:2;;279:13013:24;;;2672:31:2;279:13013:24;;;-1:-1:-1;;279:13013:24;;;;1500:62:2;;:::i;:::-;279:13013:24;;;;;;;;;;;;;;;;2488:64;2510:14;279:13013;2496:28;;2488:64;:::i;:::-;279:13013;;11329:11;279:13013;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:64;2510:14;279:13013;2496:28;;2488:64;:::i;:::-;279:13013;;11013:10;279:13013;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;;;;;;;;;;;11013:10;279:13013;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2510:14;279:13013;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;1655:40;279:13013;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;:::i;:::-;-1:-1:-1;;;;;279:13013:24;;;;;1316:59;279:13013;;;;;;;;;;;1316:59;;;;;279:13013;1316:59;;;;:::i;:::-;279:13013;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;;;;;1259:51;279:13013;;;;;;;;1259:51;;;;;;;;:::i;:::-;279:13013;;;;;;;;;1259:51;;279:13013;;1259:51;;;;279:13013;;;;;1259:51;279:13013;1259:51;279:13013;1259:51;;279:13013;:::i;:::-;;;;1259:51;279:13013;1259:51;279:13013;1259:51;279:13013;1259:51;;279:13013;:::i;:::-;;;;:::i;:::-;;1259:51;;;;279:13013;1259:51;;279:13013;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:19;279:13013;;;-1:-1:-1;;;2343:42:24;;2374:10;279:13013;2343:42;;279:13013;;;;;;;;;;-1:-1:-1;;;;;279:13013:24;2343:42;;;;;;279:13013;2343:42;;;279:13013;2335:74;;;;:::i;:::-;2466:103:15;;:::i;:::-;279:13013:24;;4206:24;279:13013;;2343:19;279:13013;;;-1:-1:-1;;;4274:46:24;;2374:10;279:13013;4274:46;;279:13013;;;;;;;;;;-1:-1:-1;;;;;279:13013:24;4274:46;;;;;;;279:13013;4274:46;;;279:13013;;;;;;;4427:13;;-1:-1:-1;;;;;279:13013:24;;;;;4466:3;279:13013;;4442:22;;;;;4525:14;;;;:::i;:::-;279:13013;;;;;;;4493:47;;279:13013;4493:47;;279:13013;;4493:47;279:13013;4493:47;;;;;;;;;279:13013;4493:47;;;4466:3;279:13013;;;;4629:14;;;;:::i;:::-;279:13013;;;;;;;4604:40;;279:13013;4604:40;;279:13013;;4604:40;279:13013;4604:40;;;;;;;;;279:13013;4604:40;;;4466:3;-1:-1:-1;279:13013:24;2374:10;-1:-1:-1;;;;;279:13013:24;;;4666:29;279:13013;;4466:3;;;:::i;:::-;4427:13;;279:13013;;;;;;;;;;;;;;;;;;;;;;;;;4604:40;;;;;279:13013;4604:40;;;;;;:::i;:::-;279:13013;4604:40;;;;279:13013;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;4604:40;;;279:13013;;;;;;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;4604:40;;;;279:13013;;;;;;:::i;:::-;;;;;4604:40;;;279:13013;;;;;;;;;;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;;4604:40;;;279:13013;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4604:40;;;279:13013;;;;;;;;;;;;;;:::i;:::-;;4604:40;;;279:13013;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;4604:40;;;279:13013;;;;:::i;:::-;;;;;4604:40;;;279:13013;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4604:40;279:13013;;;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;4493:47;;;279:13013;4493:47;;279:13013;4493:47;;;;;;279:13013;4493:47;;;:::i;:::-;;;279:13013;;;;;;;:::i;:::-;4493:47;;;;;;-1:-1:-1;4493:47:24;;4442:22;-1:-1:-1;279:13013:24;;;4442:22;;;;;279:13013;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;279:13013:24;;;;4829:20;;;:::i;:::-;279:13013;4829:20;;;:::i;:::-;-1:-1:-1;279:13013:24;;;;-1:-1:-1;;;4888:234:24;;279:13013;;4888:234;;279:13013;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;279:13013:24;;;;;;;:::i;:::-;;;;-1:-1:-1;;279:13013:24;;;;;;;:::i;:::-;;;;-1:-1:-1;;279:13013:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4888:234;;;;;;;279:13013;4888:234;279:13013;4888:234;;;;;;;;;;279:13013;4888:234;;;279:13013;;5187:16;279:13013;5187:16;;;;:::i;:::-;;279:13013;;;;;;;:::i;:::-;;;;5247:485;279:13013;5247:485;;279:13013;;5247:485;;279:13013;2374:10;279:13013;5247:485;;279:13013;5247:485;279:13013;5247:485;;279:13013;;;5247:485;;279:13013;;5247:485;;279:13013;;5247:485;;279:13013;;;5247:485;;279:13013;;;5247:485;;279:13013;;5247:485;;;279:13013;;5247:485;;;279:13013;;;;5222:10;279:13013;;;;;;;;;;;5247:485;;279:13013;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5247:485;;279:13013;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;2343:19;279:13013;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:19;279:13013;;;;;;;;;;;;;5247:485;;279:13013;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;5247:485;;279:13013;;;;;;5247:485;;279:13013;;;;;;5247:485;;279:13013;;;;-1:-1:-1;;;;;279:13013:24;;;;-1:-1:-1;;;279:13013:24;;;;;;5222:10;279:13013;;;;5222:10;279:13013;;;;;;;;;;;5222:10;279:13013;;;;;;;;;;;;;;5247:485;;;;279:13013;5247:485;;279:13013;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5247:485;;279:13013;;;;;;5247:485;;279:13013;;;;;;;;;;;;;5247:485;279:13013;;;;;;;;;;;;5247:485;;;279:13013;5187:16;279:13013;;;5247:485;279:13013;;;;2374:10;279:13013;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;;;;;5850:60;279:13013;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2374:10;;5850:60;;;;279:13013;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;279:13013:24;;;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;279:13013:24;;;;;;;;;;;;;;;;;;;;;;;5222:10;279:13013;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;279:13013:24;;;;;;;2343:19;279:13013;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;;;;;;;;;;;;;;;;;;;2343:19;279:13013;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:19;279:13013;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;279:13013:24;;;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;4888:234;;;;279:13013;4888:234;;279:13013;4888:234;;;;;;279:13013;4888:234;;;:::i;:::-;;;279:13013;;;;;4888:234;;;;;;;-1:-1:-1;4888:234:24;;279:13013;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;4274:46;;;279:13013;4274:46;;279:13013;4274:46;;;;;;279:13013;4274:46;;;:::i;:::-;;;279:13013;;;;;;;:::i;:::-;4274:46;;;;;;-1:-1:-1;4274:46:24;;279:13013;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;2343:42;;279:13013;2343:42;;279:13013;2343:42;;;;;;279:13013;2343:42;;;:::i;:::-;;;279:13013;;;;;2335:74;279:13013;;:::i;:::-;2343:42;;;;;-1:-1:-1;2343:42:24;;279:13013;;;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;:::i;:::-;2343:19;279:13013;;;-1:-1:-1;;;2343:42:24;;2374:10;279:13013;2343:42;;279:13013;;;;;;;;;;-1:-1:-1;;;;;279:13013:24;2343:42;;;;;;279:13013;2343:42;;;279:13013;2335:74;;;;:::i;:::-;2488:64;2510:14;279:13013;;;2496:28;2488:64;:::i;:::-;2466:103:15;;:::i;:::-;279:13013:24;;;;6468:10;279:13013;;;;;6509:15;279:13013;6509:15;;;279:13013;;;;;;;;;6509:43;;:92;;;;;279:13013;;;;;;6657:19;;279:13013;-1:-1:-1;;;;;279:13013:24;2374:10;6657:33;279:13013;;;;;;6509:15;279:13013;;;;;2374:10;279:13013;;;;;;;;;;;;;;;6829:12;;:29;;;279:13013;;;;2343:19;279:13013;;;-1:-1:-1;;;6975:49:24;;2374:10;279:13013;6975:49;;279:13013;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;6975:49;;;;;;;279:13013;6975:49;;;279:13013;;7064:25;279:13013;-1:-1:-1;279:13013:24;;;;;;;;7165:11;279:13013;;;;;;;;;;;;;;;;7439:46;;2374:10;279:13013;7439:46;;279:13013;7439:46;;;;;;;279:13013;7439:46;;;279:13013;;;;;;;;:::i;:::-;;;;;2374:10;279:13013;7195:301;;279:13013;;;;7195:301;;279:13013;;7195:301;;279:13013;;7195:301;;279:13013;7398:15;279:13013;7195:301;;279:13013;;;7195:301;;;279:13013;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7195:301;;279:13013;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;7195:301;;279:13013;2343:19;279:13013;;;;7195:301;;279:13013;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7195:301;;279:13013;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7195:301;279:13013;;6468:10;279:13013;;;;;;;;;;;;;;;;;;;;;;;;;;;7195:301;;279:13013;;;;;;7195:301;;279:13013;;;;;;;;;;;;;;;;;;;;;6509:15;279:13013;;;;;2374:10;279:13013;;;;;;;;;;;;;;;2510:14;7561:24;;279:13013;7561:26;279:13013;;7561:26;:::i;:::-;279:13013;;6509:15;;;279:13013;;;;;;;;;;;;7636:43;7632:225;;279:13013;;;7928:11;279:13013;;7928:11;:::i;:::-;8006:21;8031:12;279:13013;8006:37;;;;8002:110;;279:13013;;;;;;;;2374:10;279:13013;8127:53;279:13013;;;8127:53;;279:13013;8301:23;279:13013;-1:-1:-1;8273:51:24;:82;;;;279:13013;8269:142;;;279:13013;;;;;8269:142;8388:11;279:13013;;8388:11;:::i;:::-;8269:142;;8273:82;7165:11;8328:22;;;;279:13013;8328:27;;8273:82;;;8002:110;279:13013;8059:42;;;;;;;;;8002:110;2374:10;8059:42;;;;;8002:110;;;8059:42;;;;;7632:225;2343:19;279:13013;;;6509:15;;;279:13013;;;;;;2343:19;279:13013;;;;7758:88;279:13013;;;7758:88;;7632:225;;;;279:13013;;;;-1:-1:-1;279:13013:24;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;;;7195:301;279:13013;;;;6468:10;279:13013;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;279:13013:24;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7439:46;;;;279:13013;7439:46;;279:13013;7439:46;;;;;;279:13013;7439:46;;;:::i;:::-;;;279:13013;;;;;;;:::i;:::-;7439:46;;;;;;;-1:-1:-1;7439:46:24;;279:13013;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;6975:49;;;279:13013;6975:49;;279:13013;6975:49;;;;;;279:13013;6975:49;;;:::i;:::-;;;279:13013;;;;;6975:49;;;;;;-1:-1:-1;6975:49:24;;279:13013;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;;;;;;;;;6829:29;279:13013;2510:14;279:13013;;6845:13;;6829:29;;279:13013;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;6509:92;2343:19;6556:45;;;6509:92;;;2343:42;;279:13013;2343:42;;279:13013;2343:42;;;;;;279:13013;2343:42;;;:::i;:::-;;;279:13013;;;;;2335:74;279:13013;;:::i;:::-;2343:42;;;;;-1:-1:-1;2343:42:24;;279:13013;;;;;;-1:-1:-1;;279:13013:24;;;;455:30;279:13013;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;1455:29;279:13013;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;12768:14;279:13013;-1:-1:-1;;279:13013:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;279:13013:24;-1:-1:-1;;;;;279:13013:24;;;;;13070:55;279:13013;;;13070:55;279:13013;;;;;;;;;;;;;;;;13240:43;279:13013;;;13240:43;279:13013;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;:::i;:::-;;;;;1381:63;279:13013;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;1500:62:2;;:::i;:::-;279:13013:24;;;-1:-1:-1;;;;;;279:13013:24;;;;-1:-1:-1;;;;;279:13013:24;3052:40:2;279:13013:24;;3052:40:2;279:13013:24;;;;;;;-1:-1:-1;;279:13013:24;;;;;;;;1207:46;279:13013;;;;;;;;;1207:46;279:13013;1207:46;279:13013;1207:46;279:13013;1207:46;;279:13013;:::i;:::-;;;;1207:46;279:13013;1207:46;;;;279:13013;:::i;:::-;;;;;;;1207:46;;279:13013;;1207:46;279:13013;;1207:46;;279:13013;;1207:46;;;279:13013;;;;;1207:46;279:13013;1207:46;;;;279:13013;:::i;:::-;1207:46;;;279:13013;1207:46;279:13013;1207:46;;;279:13013;;1207:46;279:13013;1207:46;;;;279:13013;1207:46;;279:13013;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;-1:-1:-1;;;;;279:13013:24;;:::i;:::-;;;;11634:22;279:13013;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;9987:11;279:13013;;1500:62:2;;:::i;:::-;2488:64:24;2510:14;279:13013;2496:28;;2488:64;:::i;:::-;9987:11;:::i;279:13013::-;;;;;;-1:-1:-1;;279:13013:24;;;;;;1490:30;279:13013;1490:30;;;;;279:13013;;1490:30;279:13013;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;1607:42;279:13013;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;1500:62:2;;:::i;:::-;279:13013:24;;;;;;;;;12559:21;;-1:-1:-1;;;;;279:13013:24;;12533:48;;;;279:13013;12533:48;;;;279:13013;12533:48;;;;;279:13013;;;;;;-1:-1:-1;;279:13013:24;;;;;;;11858:13;279:13013;;;;;;;;;;11858:13;279:13013;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;336:38;279:13013;;;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;1556:45;279:13013;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;279:13013:24;;-1:-1:-1;279:13013:24;;;-1:-1:-1;279:13013:24;:::o;:::-;;;;-1:-1:-1;;;;;279:13013:24;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;279:13013:24;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;279:13013:24;;;;-1:-1:-1;279:13013:24;;;-1:-1:-1;279:13013:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;279:13013:24;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;279:13013:24;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;279:13013:24;;;;:::o;:::-;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;279:13013:24;;;;;;-1:-1:-1;;279:13013:24;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;279:13013:24;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;279:13013:24;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;279:13013:24;;;-1:-1:-1;279:13013:24;;;;;-1:-1:-1;279:13013:24;:::o;1796:162:2:-;1710:6;279:13013:24;-1:-1:-1;;;;;279:13013:24;735:10:13;1855:23:2;1851:101;;1796:162::o;1851:101::-;279:13013:24;;-1:-1:-1;;;1901:40:2;;735:10:13;1901:40:2;;;279:13013:24;;;1901:40:2;279:13013:24;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;;-1:-1:-1;;279:13013:24;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;2575:307:15;1899:1;2702:7;279:13013:24;2702:18:15;2698:86;;1899:1;2702:7;279:13013:24;2575:307:15:o;2698:86::-;279:13013:24;;-1:-1:-1;;;2743:30:15;;;;;279:13013:24;;;;:::o;:::-;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8552:1178::-;;-1:-1:-1;279:13013:24;;;;;;8646:10;279:13013;;;;;;;8687:15;;;;279:13013;;;;;;;;;;;8706:26;8687:45;279:13013;;;;;;;8839:11;279:13013;;;;8880:19;;;;279:13013;;;;;;;;;;;;;;8839:188;;;;;279:13013;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;;8913:14;;279:13013;:::i;:::-;8706:26;279:13013;;;;;;;;;;;;8941:20;279:13013;:::i;:::-;;;;;;;;;;8975:21;;;279:13013;:::i;:::-;;;;;;;;;;;;;;;;8839:188;;;;;;;;;;;;;8552:1178;-1:-1:-1;279:13013:24;9072:19;;279:13013;;;9137:15;9114:20;;;279:13013;;;-1:-1:-1;;279:13013:24;8880:19;279:13013;;;8706:26;279:13013;;;;;-1:-1:-1;;;9283:58:24;;279:13013;;;9283:58;;;279:13013;;;;;;;9283:58;279:13013;;;;9283:58;;;;;;;;;;;8552:1178;9377:22;;;279:13013;;9402:2;279:13013;;;;;;9402:2;279:13013;;;;;;;9505:35;;;;:::i;:::-;9447:94;;;;;;279:13013;;;;;;;;;;;;;;;9447:94;;;;;279:13013;;;;;9447:94;;;;;;;;8552:1178;279:13013;;;8880:19;279:13013;;9635:88;279:13013;;;;;;;9557:63;279:13013;;9557:63;;;8706:26;279:13013;;;;;9635:88;8552:1178::o;9447:94::-;-1:-1:-1;;;;;279:13013:24;;;;;;;;;;9447:94;;-1:-1:-1;279:13013:24;9635:88;9447:94;;279:13013;-1:-1:-1;;;279:13013:24;;;;;;;;9447:94;279:13013;;;;;;;;;9447:94;279:13013;;;;-1:-1:-1;;;279:13013:24;;;;;;;;9283:58;;;;;;;;;;;;;;;;;:::i;:::-;;;279:13013;;;;;;9377:22;9283:58;;279:13013;;;;9283:58;;;;;;279:13013;;;;;;;;;8839:188;;;;;;;;;;;;;;;;;:::i;:::-;;;279:13013;;;;;8839:188;;;;279:13013;;;;8839:188;;;;;;279:13013;;;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;;-1:-1:-1;;;279:13013:24;;;;;;;;10120:635;-1:-1:-1;279:13013:24;;;;10221:11;279:13013;;;;;;;10259:19;;;10255:32;;10297:23;10330:27;;10373:13;;10388:18;;;;;;10715:32;;;;;;:::i;:::-;279:13013;;;;;;;;10660:37;279:13013;;;10477:21;279:13013;;;;;10660:37;279:13013;10120:635::o;279:13013::-;-1:-1:-1;;;279:13013:24;;;;;;;;10408:3;10427:32;10442:10;;;;:::i;:::-;:17;;;;;;279:13013;10427:32;;:::i;:::-;;;279:13013;10477:21;:10;;;;:::i;:::-;:21;;279:13013;;10473:167;;10408:3;;;;;;:::i;:::-;10373:13;;10473:167;10408:3;10518:17;;;;10553:32;10518:17;;;:::i;:::-;10568:10;;;;;:::i;:::-;:17;;279:13013;10553:32;;:::i;:::-;10473:167;;;;;279:13013;;;;;;;;;;;;;;;;;;-1:-1:-1;279:13013:24;;-1:-1:-1;279:13013:24;;-1:-1:-1;279:13013:24;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;-1:-1:-1;279:13013:24;;;;;;;;;"},"methodIdentifiers":{"allResearches(uint256)":"4dd8eb1c","datasetContract()":"b0c82266","fundReviewRewards()":"eb2093e0","getAllResearches()":"2f3f4b92","getPeerReviews(uint256)":"ea41608a","getResearch(uint256)":"e3e02ba7","getResearcherPublications(address)":"55018530","getTotalResearches()":"8fa37b46","hasReviewed(uint256,address)":"7c7198cc","manuallyPublishResearch(uint256)":"53d26380","minimumReputationToReview()":"0699b9d4","minimumReviewsToPublish()":"47d0fa76","nextResearchId()":"9423d321","nftContract()":"d56d229d","owner()":"8da5cb5b","peerReviews(uint256,uint256)":"cecd8306","publishResearch(string,string,string,string,string,string,uint256[],bool,uint256)":"c1ecfefa","renounceOwnership()":"715018a6","researcherPublications(address,uint256)":"d6f13d54","researches(uint256)":"5f7d0704","reviewReward()":"e07bc592","submitPeerReview(uint256,uint256,string,string)":"b8f02b30","transferOwnership(address)":"f2fde38b","updateContractAddresses(address,address,address,address)":"8a61809c","updatePlatformSettings(uint256,uint256,uint256)":"ff438552","userProfileContract()":"1c5f3099","withdraw()":"3ccfd60b","zkProofContract()":"7788bc6c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userProfileContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zkProofContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_datasetContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"researchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reviewer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rating\",\"type\":\"uint256\"}],\"name\":\"PeerReviewSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"researchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"}],\"name\":\"ResearchPublished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"researchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DeSciPlatform.ResearchStatus\",\"name\":\"oldStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum DeSciPlatform.ResearchStatus\",\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"ResearchStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"researchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"}],\"name\":\"ResearchSubmitted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allResearches\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"datasetContract\",\"outputs\":[{\"internalType\":\"contract Dataset\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundReviewRewards\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllResearches\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_researchId\",\"type\":\"uint256\"}],\"name\":\"getPeerReviews\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"researchId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"reviewer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"comments\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"reviewedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"internalType\":\"struct DeSciPlatform.PeerReview[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_researchId\",\"type\":\"uint256\"}],\"name\":\"getResearch\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"zkProofIds\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"metadataHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"publishedAt\",\"type\":\"uint256\"},{\"internalType\":\"enum DeSciPlatform.ResearchStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"peerReviewCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"averageRating\",\"type\":\"uint256\"}],\"internalType\":\"struct DeSciPlatform.Research\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_researcher\",\"type\":\"address\"}],\"name\":\"getResearcherPublications\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalResearches\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasReviewed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_researchId\",\"type\":\"uint256\"}],\"name\":\"manuallyPublishResearch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumReputationToReview\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumReviewsToPublish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextResearchId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"contract DeSciNFTSimple\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"peerReviews\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"researchId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"reviewer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"comments\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"reviewedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_datasetName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_datasetDescription\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_datasetHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_metadataHash\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"_zkProofIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"_isDatasetPublic\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_datasetAccessPrice\",\"type\":\"uint256\"}],\"name\":\"publishResearch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"researcherPublications\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"researches\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"publishedAt\",\"type\":\"uint256\"},{\"internalType\":\"enum DeSciPlatform.ResearchStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"peerReviewCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"averageRating\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reviewReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_researchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_comments\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"submitPeerReview\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userProfileContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zkProofContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_datasetContract\",\"type\":\"address\"}],\"name\":\"updateContractAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumReputationToReview\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumReviewsToPublish\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reviewReward\",\"type\":\"uint256\"}],\"name\":\"updatePlatformSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userProfileContract\",\"outputs\":[{\"internalType\":\"contract UserProfile\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zkProofContract\",\"outputs\":[{\"internalType\":\"contract ZKProof\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"fundReviewRewards()\":{\"details\":\"Fund the contract for review rewards\"},\"getAllResearches()\":{\"details\":\"Get all research IDs\",\"returns\":{\"_0\":\"Array of all research IDs\"}},\"getPeerReviews(uint256)\":{\"details\":\"Get peer reviews for research\",\"params\":{\"_researchId\":\"ID of the research\"},\"returns\":{\"_0\":\"Array of PeerReview structs\"}},\"getResearch(uint256)\":{\"details\":\"Get research details\",\"params\":{\"_researchId\":\"ID of the research\"},\"returns\":{\"_0\":\"Research struct\"}},\"getResearcherPublications(address)\":{\"details\":\"Get all research IDs by a researcher\",\"params\":{\"_researcher\":\"Address of the researcher\"},\"returns\":{\"_0\":\"Array of research IDs\"}},\"getTotalResearches()\":{\"details\":\"Get total number of researches\",\"returns\":{\"_0\":\"Total research count\"}},\"manuallyPublishResearch(uint256)\":{\"details\":\"Manually publish research (owner only)\",\"params\":{\"_researchId\":\"ID of the research to publish\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"publishResearch(string,string,string,string,string,string,uint256[],bool,uint256)\":{\"details\":\"Publish research with integrated dataset and ZK proofs\",\"params\":{\"_datasetAccessPrice\":\"Price to access the dataset\",\"_datasetDescription\":\"Description of the dataset\",\"_datasetHash\":\"Hash of the dataset\",\"_datasetName\":\"Name of the dataset\",\"_description\":\"Description of the research\",\"_isDatasetPublic\":\"Whether the dataset should be public\",\"_metadataHash\":\"IPFS hash for research metadata\",\"_title\":\"Title of the research\",\"_zkProofIds\":\"Array of ZK proof IDs that validate this research\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"submitPeerReview(uint256,uint256,string,string)\":{\"details\":\"Submit a peer review for research\",\"params\":{\"_comments\":\"Review comments\",\"_ipfsHash\":\"IPFS hash for detailed review\",\"_rating\":\"Rating from 1-10\",\"_researchId\":\"ID of the research to review\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateContractAddresses(address,address,address,address)\":{\"details\":\"Update contract addresses (owner only)\"},\"updatePlatformSettings(uint256,uint256,uint256)\":{\"details\":\"Update platform settings (owner only)\"},\"withdraw()\":{\"details\":\"Withdraw funds (owner only)\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DeSciPlatform.sol\":\"DeSciPlatform\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/Dataset.sol\":{\"keccak256\":\"0x0eecf562a057a0655722736c22273c095be23e55cfca0a456d1185156d121a53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4b166cba6b0e20f1604ded1ab25ba62a14d665c2c616a5537a9bc6c5bca91ed\",\"dweb:/ipfs/QmdjMvZFu5VBArWDxrPRVmotyFdHtWvE7PwBrUMoFUgB3v\"]},\"contracts/DeSciNFTSimple.sol\":{\"keccak256\":\"0x64a6edd90446c00fac80e1e0e1fea826adefafbdf4ad1b43019515d64296c5f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0152cd7905579731d9451f303f4cd141237651e17ea1619f9b354c2841c55384\",\"dweb:/ipfs/Qma58ZVKCipLdhc4ADYCq2FT5ckmUJXDHgz2VhSySfUBD1\"]},\"contracts/DeSciPlatform.sol\":{\"keccak256\":\"0x9a2189195ba8cf5657dd1dc4200d1b7901974ef744e3cd71f1f4a5e95f9228c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0f885f127c74634aead45ae04994719724e21103fc10ac9a7942d61b47d185b\",\"dweb:/ipfs/QmSBSXeEEyhAuAeLUSGhtKhysZMF4hq9NusbMhwbd2Bs51\"]},\"contracts/UserProfile.sol\":{\"keccak256\":\"0x66194ff77acf1750d4f1ba130c75788aee9f420148bcbe05b0d78d7695661bbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68c7f9d45ff03b3856104e6af3ebadf93b1cb00105bf83f47d944a5c004a6305\",\"dweb:/ipfs/QmSNEG3D7Jw6YK3frGgzM9uBzjWTwwjZsrpAXGsNCVJ56H\"]},\"contracts/ZKProof.sol\":{\"keccak256\":\"0xee0d197cf4686a0ddc8e7832100d24c6909d7ab7313c6a9b9d3a9c16fefe2ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b1ba1ea2d09cf0b9deb50c1c30599caaa629334438497bb7bdafdc95507e4c\",\"dweb:/ipfs/QmSc4nrChvQeJ11jjFsTBhqdaNhbD5mFGVJ2R5Sz4xaBND\"]}},\"version\":1}"}},"contracts/Greeter.sol":{"Greeter":{"abi":[{"inputs":[{"internalType":"string","name":"_greeting","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"greet","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_greeting","type":"string"}],"name":"setGreeting","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":506,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052346101f5576105ed80380380610019816101fa565b928339810190602080828403126101f55781516001600160401b03928382116101f5570192601f908082860112156101f55784518481116101cb57601f1995610067828501881686016101fa565b928284528583830101116101f557849060005b8381106101e15750506000918301015280519384116101cb57600054926001938481811c911680156101c1575b828210146101ab57838111610165575b50809285116001146101005750839450908392916000946100f5575b50501b916000199060031b1c1916176000555b6040516103cd90816102208239f35b0151925038806100d3565b9294849081166000805284600020946000905b8883831061014b5750505010610132575b505050811b016000556100e6565b015160001960f88460031b161c19169055388080610124565b858701518855909601959485019487935090810190610113565b60008052816000208480880160051c8201928489106101a2575b0160051c019085905b8281106101965750506100b7565b60008155018590610188565b9250819261017f565b634e487b7160e01b600052602260045260246000fd5b90607f16906100a7565b634e487b7160e01b600052604160045260246000fd5b81810183015185820184015286920161007a565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176101cb5760405256fe60806040818152600436101561001457600080fd5b600091823560e01c908163a41368621461014b575063cfae32171461003857600080fd5b346101475781600319360112610147578051825481846100578361035d565b8083529260019081811690811561012557506001146100c9575b5061008192509492940384610325565b815192839160208084528251928382860152825b8481106100b357505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610095565b8680528691507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b84831061010a5750610081935050810160200138610071565b819350908160209254838589010152019101909184926100f1565b90506020925061008194915060ff191682840152151560051b82010138610071565b5080fd5b8334610322576020806003193601126101475760043567ffffffffffffffff9182821161031e573660238301121561031e57816004013583811161030a57601f199261019e601f83018516840188610325565b8187523660248383010111610306578186926024859301838a01378701015284519283116102f2576101d0845461035d565b601f8111610291575b508091601f8411600114610215575050829382939261020a575b50508160011b916000199060031b1c191617815580f35b0151905083806101f3565b8480528316947f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563929185905b878210610279575050836001959610610260575b505050811b01815580f35b015160001960f88460031b161c19169055838080610255565b80600185968294968601518155019501930190610241565b8480527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f850160051c8101918386106102e8575b601f0160051c01905b8181106102dd57506101d9565b8581556001016102d0565b90915081906102c7565b634e487b7160e01b84526041600452602484fd5b8580fd5b634e487b7160e01b85526041600452602485fd5b8380fd5b80fd5b90601f8019910116810190811067ffffffffffffffff82111761034757604052565b634e487b7160e01b600052604160045260246000fd5b90600182811c9216801561038d575b602083101461037757565b634e487b7160e01b600052602260045260246000fd5b91607f169161036c56fea264697066735822122060de6be800de98cbc75cd359807c9c233f8534770b166d4150069ea4115a187f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x1F5 JUMPI PUSH2 0x5ED DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x1FA JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x20 DUP1 DUP3 DUP5 SUB SLT PUSH2 0x1F5 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0x1F5 JUMPI ADD SWAP3 PUSH1 0x1F SWAP1 DUP1 DUP3 DUP7 ADD SLT ISZERO PUSH2 0x1F5 JUMPI DUP5 MLOAD DUP5 DUP2 GT PUSH2 0x1CB JUMPI PUSH1 0x1F NOT SWAP6 PUSH2 0x67 DUP3 DUP6 ADD DUP9 AND DUP7 ADD PUSH2 0x1FA JUMP JUMPDEST SWAP3 DUP3 DUP5 MSTORE DUP6 DUP4 DUP4 ADD ADD GT PUSH2 0x1F5 JUMPI DUP5 SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1E1 JUMPI POP POP PUSH1 0x0 SWAP2 DUP4 ADD ADD MSTORE DUP1 MLOAD SWAP4 DUP5 GT PUSH2 0x1CB JUMPI PUSH1 0x0 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x1C1 JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH2 0x1AB JUMPI DUP4 DUP2 GT PUSH2 0x165 JUMPI JUMPDEST POP DUP1 SWAP3 DUP6 GT PUSH1 0x1 EQ PUSH2 0x100 JUMPI POP DUP4 SWAP5 POP SWAP1 DUP4 SWAP3 SWAP2 PUSH1 0x0 SWAP5 PUSH2 0xF5 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP1 DUP2 PUSH2 0x220 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH2 0xD3 JUMP JUMPDEST SWAP3 SWAP5 DUP5 SWAP1 DUP2 AND PUSH1 0x0 DUP1 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH2 0x14B JUMPI POP POP POP LT PUSH2 0x132 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 SSTORE PUSH2 0xE6 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x124 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP10 LT PUSH2 0x1A2 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x196 JUMPI POP POP PUSH2 0xB7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH2 0x188 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x17F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xA7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD DUP5 ADD MSTORE DUP7 SWAP3 ADD PUSH2 0x7A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x1CB JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xA4136862 EQ PUSH2 0x14B JUMPI POP PUSH4 0xCFAE3217 EQ PUSH2 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x147 JUMPI DUP1 MLOAD DUP3 SLOAD DUP2 DUP5 PUSH2 0x57 DUP4 PUSH2 0x35D JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x125 JUMPI POP PUSH1 0x1 EQ PUSH2 0xC9 JUMPI JUMPDEST POP PUSH2 0x81 SWAP3 POP SWAP5 SWAP3 SWAP5 SUB DUP5 PUSH2 0x325 JUMP JUMPDEST DUP2 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP1 DUP5 MSTORE DUP3 MLOAD SWAP3 DUP4 DUP3 DUP7 ADD MSTORE DUP3 JUMPDEST DUP5 DUP2 LT PUSH2 0xB3 JUMPI POP POP POP DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP9 DUP3 ADD DUP9 ADD MSTORE DUP8 SWAP6 POP DUP3 ADD PUSH2 0x95 JUMP JUMPDEST DUP7 DUP1 MSTORE DUP7 SWAP2 POP PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP5 DUP4 LT PUSH2 0x10A JUMPI POP PUSH2 0x81 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x71 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0xF1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x81 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x71 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x322 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x147 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0x31E JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x31E JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD DUP4 DUP2 GT PUSH2 0x30A JUMPI PUSH1 0x1F NOT SWAP3 PUSH2 0x19E PUSH1 0x1F DUP4 ADD DUP6 AND DUP5 ADD DUP9 PUSH2 0x325 JUMP JUMPDEST DUP2 DUP8 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x306 JUMPI DUP2 DUP7 SWAP3 PUSH1 0x24 DUP6 SWAP4 ADD DUP4 DUP11 ADD CALLDATACOPY DUP8 ADD ADD MSTORE DUP5 MLOAD SWAP3 DUP4 GT PUSH2 0x2F2 JUMPI PUSH2 0x1D0 DUP5 SLOAD PUSH2 0x35D JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x291 JUMPI JUMPDEST POP DUP1 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x215 JUMPI POP POP DUP3 SWAP4 DUP3 SWAP4 SWAP3 PUSH2 0x20A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x1F3 JUMP JUMPDEST DUP5 DUP1 MSTORE DUP4 AND SWAP5 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP3 SWAP2 DUP6 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x279 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x260 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x255 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x241 JUMP JUMPDEST DUP5 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP7 LT PUSH2 0x2E8 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2DD JUMPI POP PUSH2 0x1D9 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2D0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2C7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x347 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x38D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x377 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x36C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xDE PUSH12 0xE800DE98CBC75CD359807C9C 0x23 EXTCODEHASH DUP6 CALLVALUE PUSH24 0xB166D4150069EA4115A187F64736F6C6343000814003300 ","sourceMap":"58:316:25:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;58:316:25;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;58:316:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;;;;-1:-1:-1;58:316:25;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;;;;;;;-1:-1:-1;58:316:25;;;-1:-1:-1;58:316:25;;-1:-1:-1;58:316:25;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;;;-1:-1:-1;58:316:25;;;-1:-1:-1;58:316:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;;;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;-1:-1:-1;58:316:25;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;-1:-1:-1;58:316:25;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;;;;;-1:-1:-1;;58:316:25;;;-1:-1:-1;;;;;58:316:25;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"extract_byte_array_length":{"entryPoint":861,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":805,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040818152600436101561001457600080fd5b600091823560e01c908163a41368621461014b575063cfae32171461003857600080fd5b346101475781600319360112610147578051825481846100578361035d565b8083529260019081811690811561012557506001146100c9575b5061008192509492940384610325565b815192839160208084528251928382860152825b8481106100b357505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610095565b8680528691507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b84831061010a5750610081935050810160200138610071565b819350908160209254838589010152019101909184926100f1565b90506020925061008194915060ff191682840152151560051b82010138610071565b5080fd5b8334610322576020806003193601126101475760043567ffffffffffffffff9182821161031e573660238301121561031e57816004013583811161030a57601f199261019e601f83018516840188610325565b8187523660248383010111610306578186926024859301838a01378701015284519283116102f2576101d0845461035d565b601f8111610291575b508091601f8411600114610215575050829382939261020a575b50508160011b916000199060031b1c191617815580f35b0151905083806101f3565b8480528316947f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563929185905b878210610279575050836001959610610260575b505050811b01815580f35b015160001960f88460031b161c19169055838080610255565b80600185968294968601518155019501930190610241565b8480527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f850160051c8101918386106102e8575b601f0160051c01905b8181106102dd57506101d9565b8581556001016102d0565b90915081906102c7565b634e487b7160e01b84526041600452602484fd5b8580fd5b634e487b7160e01b85526041600452602485fd5b8380fd5b80fd5b90601f8019910116810190811067ffffffffffffffff82111761034757604052565b634e487b7160e01b600052604160045260246000fd5b90600182811c9216801561038d575b602083101461037757565b634e487b7160e01b600052602260045260246000fd5b91607f169161036c56fea264697066735822122060de6be800de98cbc75cd359807c9c233f8534770b166d4150069ea4115a187f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xA4136862 EQ PUSH2 0x14B JUMPI POP PUSH4 0xCFAE3217 EQ PUSH2 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x147 JUMPI DUP1 MLOAD DUP3 SLOAD DUP2 DUP5 PUSH2 0x57 DUP4 PUSH2 0x35D JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x125 JUMPI POP PUSH1 0x1 EQ PUSH2 0xC9 JUMPI JUMPDEST POP PUSH2 0x81 SWAP3 POP SWAP5 SWAP3 SWAP5 SUB DUP5 PUSH2 0x325 JUMP JUMPDEST DUP2 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP1 DUP5 MSTORE DUP3 MLOAD SWAP3 DUP4 DUP3 DUP7 ADD MSTORE DUP3 JUMPDEST DUP5 DUP2 LT PUSH2 0xB3 JUMPI POP POP POP DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP9 DUP3 ADD DUP9 ADD MSTORE DUP8 SWAP6 POP DUP3 ADD PUSH2 0x95 JUMP JUMPDEST DUP7 DUP1 MSTORE DUP7 SWAP2 POP PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP5 DUP4 LT PUSH2 0x10A JUMPI POP PUSH2 0x81 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x71 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0xF1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x81 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x71 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x322 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x147 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0x31E JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x31E JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD DUP4 DUP2 GT PUSH2 0x30A JUMPI PUSH1 0x1F NOT SWAP3 PUSH2 0x19E PUSH1 0x1F DUP4 ADD DUP6 AND DUP5 ADD DUP9 PUSH2 0x325 JUMP JUMPDEST DUP2 DUP8 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x306 JUMPI DUP2 DUP7 SWAP3 PUSH1 0x24 DUP6 SWAP4 ADD DUP4 DUP11 ADD CALLDATACOPY DUP8 ADD ADD MSTORE DUP5 MLOAD SWAP3 DUP4 GT PUSH2 0x2F2 JUMPI PUSH2 0x1D0 DUP5 SLOAD PUSH2 0x35D JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x291 JUMPI JUMPDEST POP DUP1 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x215 JUMPI POP POP DUP3 SWAP4 DUP3 SWAP4 SWAP3 PUSH2 0x20A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x1F3 JUMP JUMPDEST DUP5 DUP1 MSTORE DUP4 AND SWAP5 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP3 SWAP2 DUP6 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x279 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x260 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x255 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x241 JUMP JUMPDEST DUP5 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP7 LT PUSH2 0x2E8 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2DD JUMPI POP PUSH2 0x1D9 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2D0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2C7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x347 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x38D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x377 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x36C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xDE PUSH12 0xE800DE98CBC75CD359807C9C 0x23 EXTCODEHASH DUP6 CALLVALUE PUSH24 0xB166D4150069EA4115A187F64736F6C6343000814003300 ","sourceMap":"58:316:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;58:316:25;;;;;;;;-1:-1:-1;;58:316:25;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;;;;;;-1:-1:-1;58:316:25;;;;;;;-1:-1:-1;58:316:25;;-1:-1:-1;;58:316:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;58:316:25;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58:316:25;;;;;-1:-1:-1;;;58:316:25;;;;;;;;;;;;;-1:-1:-1;;;58:316:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;"},"methodIdentifiers":{"greet()":"cfae3217","setGreeting(string)":"a4136862"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"greet\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"setGreeting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Greeter.sol\":\"Greeter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Greeter.sol\":{\"keccak256\":\"0x58230a9c01ae5a43000c796a8cf56678913b00abfcc8607b29ff2e5dd853b378\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://457e77c495602150ca4f5b8de407c153a8419b51ce137c89c14f78d6aa78d0a0\",\"dweb:/ipfs/QmWPaRZMMJjRNm4qNEMfknVA99kxQsNjs92LHjT1L8ktyk\"]}},\"version\":1}"}},"contracts/UserProfile.sol":{"UserProfile":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"string","name":"email","type":"string"},{"indexed":false,"internalType":"string","name":"ipfsHash","type":"string"}],"name":"ProfileCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"string","name":"ipfsHash","type":"string"}],"name":"ProfileUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bool","name":"verified","type":"bool"}],"name":"ProfileVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"newReputation","type":"uint256"}],"name":"ReputationUpdated","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allUsers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_fullName","type":"string"},{"internalType":"uint256","name":"_age","type":"uint256"},{"internalType":"string","name":"_email","type":"string"},{"internalType":"string","name":"_ipfsHash","type":"string"}],"name":"createProfile","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"emailToAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getProfile","outputs":[{"components":[{"internalType":"string","name":"fullName","type":"string"},{"internalType":"uint256","name":"age","type":"uint256"},{"internalType":"string","name":"email","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint256","name":"reputation","type":"uint256"}],"internalType":"struct UserProfile.Profile","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalUsers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_email","type":"string"}],"name":"getUserByEmail","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserReputation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasProfile","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"isUserVerified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"profiles","outputs":[{"internalType":"string","name":"fullName","type":"string"},{"internalType":"uint256","name":"age","type":"uint256"},{"internalType":"string","name":"email","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint256","name":"reputation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_fullName","type":"string"},{"internalType":"uint256","name":"_age","type":"uint256"},{"internalType":"string","name":"_ipfsHash","type":"string"}],"name":"updateProfile","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_reputation","type":"uint256"}],"name":"updateReputation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"bool","name":"_verified","type":"bool"}],"name":"verifyProfile","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461007e5733156100685760008054336001600160a01b03198216811783556040519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001805561145b90816100848239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630d1b21fa146109ea5780630f53a4701461087457806318046ae1146101e457806356412d3a146107d0578063715018a6146107775780638da5cb5b1461074e5780639be572f614610730578063a2bdedf4146106ee578063a5fb1fb8146103b0578063a787c80b14610371578063ace417e014610344578063baccbfdb14610319578063bbe156271461024d578063ea78dcbf146101e4578063f2fde38b146101565763f5c91a08146100cc57600080fd5b34610151576040366003190112610151576100e5611116565b7ffc577563f1b9a0461e24abef1e1fcc0d33d3d881f20b5df6dda59de4aae2c8216020602435926101146112a1565b60018060a01b031692836000526004825261013660ff60406000205416611376565b836000526002825280600760406000200155604051908152a2005b600080fd5b346101515760203660031901126101515761016f611116565b6101776112a1565b6001600160a01b039081169081156101cb57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b346101515760203660031901126101515760043567ffffffffffffffff81116101515761021760209136906004016110bf565b8161022b604051928381519384920161112c565b600390820190815281900382019020546040516001600160a01b039091168152f35b34610151576020366003190112610151576001600160a01b0361026e611116565b1660005260026020526102dd6040600020610288816111fb565b9060018101549061029b600282016111fb565b906102a8600382016111fb565b926102fe60ff600484015416946102f060058501549360076006870154960154966040519a8b9a610100808d528c019061114f565b9160208b015289820360408b015261114f565b90878203606089015261114f565b931515608086015260a085015260c084015260e08301520390f35b3461015157602036600319011261015157602061033c610337611116565b6113f4565b604051908152f35b34610151576020366003190112610151576020610367610362611116565b6113bb565b6040519015158152f35b34610151576020366003190112610151576001600160a01b03610392611116565b166000526004602052602060ff604060002054166040519015158152f35b346101515760603660031901126101515767ffffffffffffffff600435818111610151576103e29036906004016110bf565b60243591604435818111610151576103fe9036906004016110bf565b90336000526020926004845261041b60ff60406000205416611376565b610423611353565b61042f815115156112cd565b841515806106e4575b61044190611319565b3360005260028452604060002091815181811161060f578061046385546111c1565b93601f94858111610695575b50879085831160011461063057600092610625575b50508160011b916000199060031b1c19161783555b600195868401556003830191845191821161060f576104b883546111c1565b8181116105c9575b508590821160011461053c57918161052a94927fdd635a4cd84864e37e4479dbfc2ec667acfa473c83c8422a8ac9d9d07599b01c9694600091610531575b50600019600383901b1c191690881b1790555b600642910155604051918291858352339583019061114f565b0390a28055005b9050840151896104fe565b908691601f1982169084600052876000209160005b898282106105b35750509183917fdd635a4cd84864e37e4479dbfc2ec667acfa473c83c8422a8ac9d9d07599b01c98969461052a9896941061059a575b5050811b019055610511565b86015160001960f88460031b161c19169055898061058e565b838a015185558b96909401939283019201610551565b83600052866000208280850160051c820192898610610606575b0160051c019088905b8281106105fa5750506104c0565b600081550188906105ec565b925081926105e3565b634e487b7160e01b600052604160045260246000fd5b015190508880610484565b60008781528981209350601f198516905b8a82821061067f575050908460019594939210610666575b505050811b018355610499565b015160001960f88460031b161c19169055888080610659565b6001859682939686015181550195019301610641565b90915085600052876000208580850160051c8201928a86106106db575b9085949392910160051c01905b8181106106cc575061046f565b600081558493506001016106bf565b925081926106b2565b5060968510610438565b346101515760203660031901126101515760043560055481101561015157610717602091611174565b905460405160039290921b1c6001600160a01b03168152f35b34610151576000366003190112610151576020600554604051908152f35b34610151576000366003190112610151576000546040516001600160a01b039091168152602090f35b34610151576000366003190112610151576107906112a1565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610151576040366003190112610151576107e9611116565b6024359081151590818303610151577f1a54de57409cde881501535c2cd15fafdcc1cfee166b0f7de867255b850c76d59161086b6020926108286112a1565b60018060a01b031694856000526004845261084a60ff60406000205416611376565b856000526002845260046040600020019060ff801983541691151516179055565b604051908152a2005b34610151576020806003193601126101515761012090610892611116565b6040519061089f82611080565b600060e0606093848152828682015284604082015284808201528260808201528260a08201528260c0820152015260018060a01b031680600052600483526108ee60ff60406000205416611376565b600052600282526040600020916040519261090884611080565b610911816111fb565b845260018101549082850191825261092b600282016111fb565b91604086019283526109cc610942600384016111fb565b86880190815260ff600485015416966080890197151588526109bb60058601549460a08b01958652600760068801549760c08d0198895201549760e08c019889526109a1604051809e819e8d83525191610100809e820152019061114f565b915160408d015251601f1993848d840301908d015261114f565b9151908983030160808a015261114f565b9451151560a08701525160c08601525160e085015251908301520390f35b346101515760803660031901126101515760043567ffffffffffffffff811161015157610a1b9036906004016110bf565b60443567ffffffffffffffff811161015157610a3b9036906004016110bf565b60643567ffffffffffffffff811161015157610a5b9036906004016110bf565b916040518251610a6f81836020870161112c565b60039082019081528190036020019020546001600160a01b031661103b57610a95611353565b33600052600460205260ff60406000205416610ffd57610ab7815115156112cd565b60243580151580610ff3575b610acc90611319565b825115610fb65760405191610ae083611080565b82526020820152816040820152826060820152600060808201524260a08201524260c0820152600060e0820152336000526002602052604060002090805180519067ffffffffffffffff821161060f578190610b3c85546111c1565b601f8111610f66575b50602090601f8311600114610efa57600092610eef575b50508160011b916000199060031b1c19161782555b60208101516001830155604081015180519067ffffffffffffffff821161060f578190610ba160028601546111c1565b601f8111610e9c575b50602090601f8311600114610e2a57600092610e1f575b50508160011b916000199060031b1c19161760028301555b606081015180519067ffffffffffffffff821161060f57610bfd60038501546111c1565b601f8111610dd8575b50602090601f8311600114610d635791806007949260e094600092610d58575b50508160011b916000199060031b1c19161760038501555b610c5d60808201511515600486019060ff801983541691151516179055565b60a0810151600585015560c0810151600685015501519101556040516020818351610c8b818385880161112c565b81016003815203019020336bffffffffffffffffffffffff60a01b8254161790553360005260046020526040600020600160ff198254161790556005546801000000000000000081101561060f577f6b4494367229a908b0585b361e2871a21f8eb4cd852c02f55c9e06989f4bb2aa91610d0e826001610d409401600555611174565b81546001600160a01b0360039290921b91821b19163390911b17905560408051818152928392610d4f9284019061114f565b8281036020840152339561114f565b0390a260018055005b015190508880610c26565b906003850160005260206000209160005b601f1985168110610dc05750926007949260019260e09583601f19811610610da7575b505050811b016003850155610c3e565b015160001960f88460031b161c19169055888080610d97565b91926020600181928685015181550194019201610d74565b600385016000526020600020601f840160051c810160208510610e18575b601f830160051c82018110610e0c575050610c06565b60008155600101610df6565b5080610df6565b015190508680610bc1565b9250600285016000526020600020906000935b601f1984168510610e81576001945083601f19811610610e68575b505050811b016002830155610bd9565b015160001960f88460031b161c19169055868080610e58565b81810151835560209485019460019093019290910190610e3d565b909150600285016000526020600020601f840160051c810160208510610ee8575b90849392915b601f830160051c82018110610ed9575050610baa565b60008155859450600101610ec3565b5080610ebd565b015190508680610b5c565b9250846000526020600020906000935b601f1984168510610f4b576001945083601f19811610610f32575b505050811b018255610b71565b015160001960f88460031b161c19169055868080610f25565b81810151835560209485019460019093019290910190610f0a565b909150846000526020600020601f840160051c810160208510610faf575b90849392915b601f830160051c82018110610fa0575050610b45565b60008155859450600101610f8a565b5080610f84565b60405162461bcd60e51b8152602060048201526015602482015274456d61696c2063616e6e6f7420626520656d70747960581b6044820152606490fd5b5060968110610ac3565b60405162461bcd60e51b815260206004820152601660248201527550726f66696c6520616c72656164792065786973747360501b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f456d61696c20616c7265616479207265676973746572656400000000000000006044820152606490fd5b610100810190811067ffffffffffffffff82111761060f57604052565b90601f8019910116810190811067ffffffffffffffff82111761060f57604052565b81601f820112156101515780359067ffffffffffffffff821161060f57604051926110f4601f8401601f19166020018561109d565b8284526020838301011161015157816000926020809301838601378301015290565b600435906001600160a01b038216820361015157565b60005b83811061113f5750506000910152565b818101518382015260200161112f565b906020916111688151809281855285808601910161112c565b601f01601f1916010190565b6005548110156111ab5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c921680156111f1575b60208310146111db57565b634e487b7160e01b600052602260045260246000fd5b91607f16916111d0565b906040519182600082549261120f846111c1565b90818452600194858116908160001461127e575060011461123b575b50506112399250038361109d565b565b9093915060005260209081600020936000915b8183106112665750506112399350820101388061122b565b8554888401850152948501948794509183019161124e565b91505061123994506020925060ff191682840152151560051b820101388061122b565b6000546001600160a01b031633036112b557565b60405163118cdaa760e01b8152336004820152602490fd5b156112d457565b60405162461bcd60e51b815260206004820152601960248201527f46756c6c206e616d652063616e6e6f7420626520656d707479000000000000006044820152606490fd5b1561132057565b60405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642061676560a81b6044820152606490fd5b600260015414611364576002600155565b604051633ee5aeb560e01b8152600490fd5b1561137d57565b60405162461bcd60e51b8152602060048201526016602482015275141c9bd99a5b1948191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b6001600160a01b031660009081526004602052604090205460ff16156113ef57600260205260ff6004604060002001541690565b600090565b6001600160a01b031660009081526004602052604090205460ff16156113ef5760026020526007604060002001549056fea2646970667358221220b0413c0bb8a6b2e93cd0dc2720a93edc34bc7d985240c566f1f4e7d5bb6adb5b64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x7E JUMPI CALLER ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH2 0x145B SWAP1 DUP2 PUSH2 0x84 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD1B21FA EQ PUSH2 0x9EA JUMPI DUP1 PUSH4 0xF53A470 EQ PUSH2 0x874 JUMPI DUP1 PUSH4 0x18046AE1 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x56412D3A EQ PUSH2 0x7D0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x777 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x74E JUMPI DUP1 PUSH4 0x9BE572F6 EQ PUSH2 0x730 JUMPI DUP1 PUSH4 0xA2BDEDF4 EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xA5FB1FB8 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xA787C80B EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xACE417E0 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xBACCBFDB EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xBBE15627 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xEA78DCBF EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x156 JUMPI PUSH4 0xF5C91A08 EQ PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH2 0xE5 PUSH2 0x1116 JUMP JUMPDEST PUSH32 0xFC577563F1B9A0461E24ABEF1E1FCC0D33D3D881F20B5DF6DDA59DE4AAE2C821 PUSH1 0x20 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x114 PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH2 0x136 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1376 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE DUP1 PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH2 0x16F PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x151 JUMPI PUSH2 0x217 PUSH1 0x20 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10BF JUMP JUMPDEST DUP2 PUSH2 0x22B PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x112C JUMP JUMPDEST PUSH1 0x3 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP3 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x26E PUSH2 0x1116 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x2DD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x288 DUP2 PUSH2 0x11FB JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH2 0x29B PUSH1 0x2 DUP3 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP1 PUSH2 0x2A8 PUSH1 0x3 DUP3 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP3 PUSH2 0x2FE PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND SWAP5 PUSH2 0x2F0 PUSH1 0x5 DUP6 ADD SLOAD SWAP4 PUSH1 0x7 PUSH1 0x6 DUP8 ADD SLOAD SWAP7 ADD SLOAD SWAP7 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x100 DUP1 DUP14 MSTORE DUP13 ADD SWAP1 PUSH2 0x114F JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP12 ADD MSTORE DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x114F JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x114F JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH2 0x33C PUSH2 0x337 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x13F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH2 0x367 PUSH2 0x362 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x13BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x392 PUSH2 0x1116 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x151 JUMPI PUSH2 0x3E2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x151 JUMPI PUSH2 0x3FE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10BF JUMP JUMPDEST SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x4 DUP5 MSTORE PUSH2 0x41B PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1376 JUMP JUMPDEST PUSH2 0x423 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x42F DUP2 MLOAD ISZERO ISZERO PUSH2 0x12CD JUMP JUMPDEST DUP5 ISZERO ISZERO DUP1 PUSH2 0x6E4 JUMPI JUMPDEST PUSH2 0x441 SWAP1 PUSH2 0x1319 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP2 MLOAD DUP2 DUP2 GT PUSH2 0x60F JUMPI DUP1 PUSH2 0x463 DUP6 SLOAD PUSH2 0x11C1 JUMP JUMPDEST SWAP4 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH2 0x695 JUMPI JUMPDEST POP DUP8 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH2 0x630 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x625 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP4 SSTORE JUMPDEST PUSH1 0x1 SWAP6 DUP7 DUP5 ADD SSTORE PUSH1 0x3 DUP4 ADD SWAP2 DUP5 MLOAD SWAP2 DUP3 GT PUSH2 0x60F JUMPI PUSH2 0x4B8 DUP4 SLOAD PUSH2 0x11C1 JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0x5C9 JUMPI JUMPDEST POP DUP6 SWAP1 DUP3 GT PUSH1 0x1 EQ PUSH2 0x53C JUMPI SWAP2 DUP2 PUSH2 0x52A SWAP5 SWAP3 PUSH32 0xDD635A4CD84864E37E4479DBFC2EC667ACFA473C83C8422A8AC9D9D07599B01C SWAP7 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0x531 JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP9 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x6 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP6 DUP4 MSTORE CALLER SWAP6 DUP4 ADD SWAP1 PUSH2 0x114F JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 SSTORE STOP JUMPDEST SWAP1 POP DUP5 ADD MLOAD DUP10 PUSH2 0x4FE JUMP JUMPDEST SWAP1 DUP7 SWAP2 PUSH1 0x1F NOT DUP3 AND SWAP1 DUP5 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP10 DUP3 DUP3 LT PUSH2 0x5B3 JUMPI POP POP SWAP2 DUP4 SWAP2 PUSH32 0xDD635A4CD84864E37E4479DBFC2EC667ACFA473C83C8422A8AC9D9D07599B01C SWAP9 SWAP7 SWAP5 PUSH2 0x52A SWAP9 SWAP7 SWAP5 LT PUSH2 0x59A JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x511 JUMP JUMPDEST DUP7 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 PUSH2 0x58E JUMP JUMPDEST DUP4 DUP11 ADD MLOAD DUP6 SSTORE DUP12 SWAP7 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x551 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP3 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP7 LT PUSH2 0x606 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP9 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x5FA JUMPI POP POP PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP9 SWAP1 PUSH2 0x5EC JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x5E3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x484 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE DUP10 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP11 DUP3 DUP3 LT PUSH2 0x67F JUMPI POP POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x666 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH2 0x499 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x641 JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP7 LT PUSH2 0x6DB JUMPI JUMPDEST SWAP1 DUP6 SWAP5 SWAP4 SWAP3 SWAP2 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x6CC JUMPI POP PUSH2 0x46F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x6B2 JUMP JUMPDEST POP PUSH1 0x96 DUP6 LT PUSH2 0x438 JUMP JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x151 JUMPI PUSH2 0x717 PUSH1 0x20 SWAP2 PUSH2 0x1174 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH2 0x790 PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH2 0x7E9 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x151 JUMPI PUSH32 0x1A54DE57409CDE881501535C2CD15FAFDCC1CFEE166B0F7DE867255B850C76D5 SWAP2 PUSH2 0x86B PUSH1 0x20 SWAP3 PUSH2 0x828 PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH2 0x84A PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1376 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH2 0x120 SWAP1 PUSH2 0x892 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x89F DUP3 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 PUSH1 0x60 SWAP4 DUP5 DUP2 MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP5 PUSH1 0x40 DUP3 ADD MSTORE DUP5 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH2 0x8EE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x908 DUP5 PUSH2 0x1080 JUMP JUMPDEST PUSH2 0x911 DUP2 PUSH2 0x11FB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP1 DUP3 DUP6 ADD SWAP2 DUP3 MSTORE PUSH2 0x92B PUSH1 0x2 DUP3 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP7 ADD SWAP3 DUP4 MSTORE PUSH2 0x9CC PUSH2 0x942 PUSH1 0x3 DUP5 ADD PUSH2 0x11FB JUMP JUMPDEST DUP7 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF PUSH1 0x4 DUP6 ADD SLOAD AND SWAP7 PUSH1 0x80 DUP10 ADD SWAP8 ISZERO ISZERO DUP9 MSTORE PUSH2 0x9BB PUSH1 0x5 DUP7 ADD SLOAD SWAP5 PUSH1 0xA0 DUP12 ADD SWAP6 DUP7 MSTORE PUSH1 0x7 PUSH1 0x6 DUP9 ADD SLOAD SWAP8 PUSH1 0xC0 DUP14 ADD SWAP9 DUP10 MSTORE ADD SLOAD SWAP8 PUSH1 0xE0 DUP13 ADD SWAP9 DUP10 MSTORE PUSH2 0x9A1 PUSH1 0x40 MLOAD DUP1 SWAP15 DUP2 SWAP15 DUP14 DUP4 MSTORE MLOAD SWAP2 PUSH2 0x100 DUP1 SWAP15 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x114F JUMP JUMPDEST SWAP2 MLOAD PUSH1 0x40 DUP14 ADD MSTORE MLOAD PUSH1 0x1F NOT SWAP4 DUP5 DUP14 DUP5 SUB ADD SWAP1 DUP14 ADD MSTORE PUSH2 0x114F JUMP JUMPDEST SWAP2 MLOAD SWAP1 DUP10 DUP4 SUB ADD PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x114F JUMP JUMPDEST SWAP5 MLOAD ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE MLOAD PUSH1 0xC0 DUP7 ADD MSTORE MLOAD PUSH1 0xE0 DUP6 ADD MSTORE MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x151 JUMPI PUSH2 0xA1B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x151 JUMPI PUSH2 0xA3B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x151 JUMPI PUSH2 0xA5B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10BF JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD DUP3 MLOAD PUSH2 0xA6F DUP2 DUP4 PUSH1 0x20 DUP8 ADD PUSH2 0x112C JUMP JUMPDEST PUSH1 0x3 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x103B JUMPI PUSH2 0xA95 PUSH2 0x1353 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xFFD JUMPI PUSH2 0xAB7 DUP2 MLOAD ISZERO ISZERO PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0xFF3 JUMPI JUMPDEST PUSH2 0xACC SWAP1 PUSH2 0x1319 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xAE0 DUP4 PUSH2 0x1080 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x60F JUMPI DUP2 SWAP1 PUSH2 0xB3C DUP6 SLOAD PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xF66 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xEFA JUMPI PUSH1 0x0 SWAP3 PUSH2 0xEEF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x60F JUMPI DUP2 SWAP1 PUSH2 0xBA1 PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE9C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE2A JUMPI PUSH1 0x0 SWAP3 PUSH2 0xE1F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x60F JUMPI PUSH2 0xBFD PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xDD8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD63 JUMPI SWAP2 DUP1 PUSH1 0x7 SWAP5 SWAP3 PUSH1 0xE0 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xD58 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST PUSH2 0xC5D PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x4 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 MLOAD PUSH2 0xC8B DUP2 DUP4 DUP6 DUP9 ADD PUSH2 0x112C JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x60F JUMPI PUSH32 0x6B4494367229A908B0585B361E2871A21F8EB4CD852C02F55C9E06989F4BB2AA SWAP2 PUSH2 0xD0E DUP3 PUSH1 0x1 PUSH2 0xD40 SWAP5 ADD PUSH1 0x5 SSTORE PUSH2 0x1174 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH2 0xD4F SWAP3 DUP5 ADD SWAP1 PUSH2 0x114F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP6 PUSH2 0x114F JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xC26 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xDC0 JUMPI POP SWAP3 PUSH1 0x7 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xE0 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xDA7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0xC3E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xD97 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xE18 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xE0C JUMPI POP POP PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xDF6 JUMP JUMPDEST POP DUP1 PUSH2 0xDF6 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xBC1 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xE81 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xE68 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0xBD9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xE58 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xE3D JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xEE8 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xED9 JUMPI POP POP PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xEC3 JUMP JUMPDEST POP DUP1 PUSH2 0xEBD JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xB5C JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xF4B JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xF32 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0xB71 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xF25 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xF0A JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xFAF JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xFA0 JUMPI POP POP PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xF8A JUMP JUMPDEST POP DUP1 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x456D61696C2063616E6E6F7420626520656D707479 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x96 DUP2 LT PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x50726F66696C6520616C726561647920657869737473 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456D61696C20616C726561647920726567697374657265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x60F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x60F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x151 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x10F4 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x109D JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x151 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x151 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x113F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x112F JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1168 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x112C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x11AB JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x11F1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x11DB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x11D0 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x120F DUP5 PUSH2 0x11C1 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x127E JUMPI POP PUSH1 0x1 EQ PUSH2 0x123B JUMPI JUMPDEST POP POP PUSH2 0x1239 SWAP3 POP SUB DUP4 PUSH2 0x109D JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1266 JUMPI POP POP PUSH2 0x1239 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x122B JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x124E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1239 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x122B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x12B5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12D4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756C6C206E616D652063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1320 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x496E76616C696420616765 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1364 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x137D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141C9BD99A5B1948191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13EF JUMPI PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13EF JUMPI PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 COINBASE EXTCODECOPY SIGNEXTEND 0xB8 0xA6 0xB2 0xE9 EXTCODECOPY 0xD0 0xDC 0x27 KECCAK256 0xA9 RETURNDATACOPY 0xDC CALLVALUE 0xBC PUSH30 0x985240C566F1F4E7D5BB6ADB5B64736F6C63430008140033000000000000 ","sourceMap":"172:5162:26:-:0;;;;;;;1223:10;1273:26:2;1269:95;;1297:1;172:5162:26;;1223:10;-1:-1:-1;;;;;;172:5162:26;;;;;;;;;1223:10;;-1:-1:-1;;;;;172:5162:26;;3052:40:2;;1297:1;3052:40;172:5162:26;1857:1:15;;172:5162:26;;;;;;;1269:95:2;-1:-1:-1;;;1322:31:2;;1297:1;1322:31;;;172:5162:26;;;1322:31:2;172:5162:26;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4374,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":4287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4431,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":4603,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4396,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4545,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4253,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_19403":{"entryPoint":4224,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":4769,"id":464,"parameterSlots":0,"returnSlots":0},"fun_getUserReputation":{"entryPoint":5108,"id":9823,"parameterSlots":1,"returnSlots":1},"fun_isUserVerified":{"entryPoint":5051,"id":9802,"parameterSlots":1,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":4947,"id":2152,"parameterSlots":0,"returnSlots":0},"require_helper_stringliteral":{"entryPoint":4813,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e6db":{"entryPoint":4982,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f1c5":{"entryPoint":4889,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":4468,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD1B21FA EQ PUSH2 0x9EA JUMPI DUP1 PUSH4 0xF53A470 EQ PUSH2 0x874 JUMPI DUP1 PUSH4 0x18046AE1 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x56412D3A EQ PUSH2 0x7D0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x777 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x74E JUMPI DUP1 PUSH4 0x9BE572F6 EQ PUSH2 0x730 JUMPI DUP1 PUSH4 0xA2BDEDF4 EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xA5FB1FB8 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xA787C80B EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xACE417E0 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xBACCBFDB EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xBBE15627 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xEA78DCBF EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x156 JUMPI PUSH4 0xF5C91A08 EQ PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH2 0xE5 PUSH2 0x1116 JUMP JUMPDEST PUSH32 0xFC577563F1B9A0461E24ABEF1E1FCC0D33D3D881F20B5DF6DDA59DE4AAE2C821 PUSH1 0x20 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x114 PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH2 0x136 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1376 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE DUP1 PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH2 0x16F PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x151 JUMPI PUSH2 0x217 PUSH1 0x20 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10BF JUMP JUMPDEST DUP2 PUSH2 0x22B PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x112C JUMP JUMPDEST PUSH1 0x3 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP3 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x26E PUSH2 0x1116 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x2DD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x288 DUP2 PUSH2 0x11FB JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH2 0x29B PUSH1 0x2 DUP3 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP1 PUSH2 0x2A8 PUSH1 0x3 DUP3 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP3 PUSH2 0x2FE PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND SWAP5 PUSH2 0x2F0 PUSH1 0x5 DUP6 ADD SLOAD SWAP4 PUSH1 0x7 PUSH1 0x6 DUP8 ADD SLOAD SWAP7 ADD SLOAD SWAP7 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x100 DUP1 DUP14 MSTORE DUP13 ADD SWAP1 PUSH2 0x114F JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP12 ADD MSTORE DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x114F JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x114F JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH2 0x33C PUSH2 0x337 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x13F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH2 0x367 PUSH2 0x362 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x13BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x392 PUSH2 0x1116 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x151 JUMPI PUSH2 0x3E2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x151 JUMPI PUSH2 0x3FE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10BF JUMP JUMPDEST SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x4 DUP5 MSTORE PUSH2 0x41B PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1376 JUMP JUMPDEST PUSH2 0x423 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x42F DUP2 MLOAD ISZERO ISZERO PUSH2 0x12CD JUMP JUMPDEST DUP5 ISZERO ISZERO DUP1 PUSH2 0x6E4 JUMPI JUMPDEST PUSH2 0x441 SWAP1 PUSH2 0x1319 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP2 MLOAD DUP2 DUP2 GT PUSH2 0x60F JUMPI DUP1 PUSH2 0x463 DUP6 SLOAD PUSH2 0x11C1 JUMP JUMPDEST SWAP4 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH2 0x695 JUMPI JUMPDEST POP DUP8 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH2 0x630 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x625 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP4 SSTORE JUMPDEST PUSH1 0x1 SWAP6 DUP7 DUP5 ADD SSTORE PUSH1 0x3 DUP4 ADD SWAP2 DUP5 MLOAD SWAP2 DUP3 GT PUSH2 0x60F JUMPI PUSH2 0x4B8 DUP4 SLOAD PUSH2 0x11C1 JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0x5C9 JUMPI JUMPDEST POP DUP6 SWAP1 DUP3 GT PUSH1 0x1 EQ PUSH2 0x53C JUMPI SWAP2 DUP2 PUSH2 0x52A SWAP5 SWAP3 PUSH32 0xDD635A4CD84864E37E4479DBFC2EC667ACFA473C83C8422A8AC9D9D07599B01C SWAP7 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0x531 JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP9 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x6 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP6 DUP4 MSTORE CALLER SWAP6 DUP4 ADD SWAP1 PUSH2 0x114F JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 SSTORE STOP JUMPDEST SWAP1 POP DUP5 ADD MLOAD DUP10 PUSH2 0x4FE JUMP JUMPDEST SWAP1 DUP7 SWAP2 PUSH1 0x1F NOT DUP3 AND SWAP1 DUP5 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP10 DUP3 DUP3 LT PUSH2 0x5B3 JUMPI POP POP SWAP2 DUP4 SWAP2 PUSH32 0xDD635A4CD84864E37E4479DBFC2EC667ACFA473C83C8422A8AC9D9D07599B01C SWAP9 SWAP7 SWAP5 PUSH2 0x52A SWAP9 SWAP7 SWAP5 LT PUSH2 0x59A JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x511 JUMP JUMPDEST DUP7 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 PUSH2 0x58E JUMP JUMPDEST DUP4 DUP11 ADD MLOAD DUP6 SSTORE DUP12 SWAP7 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x551 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP3 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP7 LT PUSH2 0x606 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP9 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x5FA JUMPI POP POP PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP9 SWAP1 PUSH2 0x5EC JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x5E3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x484 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE DUP10 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP11 DUP3 DUP3 LT PUSH2 0x67F JUMPI POP POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x666 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH2 0x499 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x641 JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP7 LT PUSH2 0x6DB JUMPI JUMPDEST SWAP1 DUP6 SWAP5 SWAP4 SWAP3 SWAP2 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x6CC JUMPI POP PUSH2 0x46F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x6B2 JUMP JUMPDEST POP PUSH1 0x96 DUP6 LT PUSH2 0x438 JUMP JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x151 JUMPI PUSH2 0x717 PUSH1 0x20 SWAP2 PUSH2 0x1174 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH2 0x790 PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH2 0x7E9 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x151 JUMPI PUSH32 0x1A54DE57409CDE881501535C2CD15FAFDCC1CFEE166B0F7DE867255B850C76D5 SWAP2 PUSH2 0x86B PUSH1 0x20 SWAP3 PUSH2 0x828 PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH2 0x84A PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1376 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH2 0x120 SWAP1 PUSH2 0x892 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x89F DUP3 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 PUSH1 0x60 SWAP4 DUP5 DUP2 MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP5 PUSH1 0x40 DUP3 ADD MSTORE DUP5 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH2 0x8EE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x908 DUP5 PUSH2 0x1080 JUMP JUMPDEST PUSH2 0x911 DUP2 PUSH2 0x11FB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP1 DUP3 DUP6 ADD SWAP2 DUP3 MSTORE PUSH2 0x92B PUSH1 0x2 DUP3 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP7 ADD SWAP3 DUP4 MSTORE PUSH2 0x9CC PUSH2 0x942 PUSH1 0x3 DUP5 ADD PUSH2 0x11FB JUMP JUMPDEST DUP7 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF PUSH1 0x4 DUP6 ADD SLOAD AND SWAP7 PUSH1 0x80 DUP10 ADD SWAP8 ISZERO ISZERO DUP9 MSTORE PUSH2 0x9BB PUSH1 0x5 DUP7 ADD SLOAD SWAP5 PUSH1 0xA0 DUP12 ADD SWAP6 DUP7 MSTORE PUSH1 0x7 PUSH1 0x6 DUP9 ADD SLOAD SWAP8 PUSH1 0xC0 DUP14 ADD SWAP9 DUP10 MSTORE ADD SLOAD SWAP8 PUSH1 0xE0 DUP13 ADD SWAP9 DUP10 MSTORE PUSH2 0x9A1 PUSH1 0x40 MLOAD DUP1 SWAP15 DUP2 SWAP15 DUP14 DUP4 MSTORE MLOAD SWAP2 PUSH2 0x100 DUP1 SWAP15 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x114F JUMP JUMPDEST SWAP2 MLOAD PUSH1 0x40 DUP14 ADD MSTORE MLOAD PUSH1 0x1F NOT SWAP4 DUP5 DUP14 DUP5 SUB ADD SWAP1 DUP14 ADD MSTORE PUSH2 0x114F JUMP JUMPDEST SWAP2 MLOAD SWAP1 DUP10 DUP4 SUB ADD PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x114F JUMP JUMPDEST SWAP5 MLOAD ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE MLOAD PUSH1 0xC0 DUP7 ADD MSTORE MLOAD PUSH1 0xE0 DUP6 ADD MSTORE MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x151 JUMPI PUSH2 0xA1B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x151 JUMPI PUSH2 0xA3B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x151 JUMPI PUSH2 0xA5B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10BF JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD DUP3 MLOAD PUSH2 0xA6F DUP2 DUP4 PUSH1 0x20 DUP8 ADD PUSH2 0x112C JUMP JUMPDEST PUSH1 0x3 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x103B JUMPI PUSH2 0xA95 PUSH2 0x1353 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xFFD JUMPI PUSH2 0xAB7 DUP2 MLOAD ISZERO ISZERO PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0xFF3 JUMPI JUMPDEST PUSH2 0xACC SWAP1 PUSH2 0x1319 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xAE0 DUP4 PUSH2 0x1080 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x60F JUMPI DUP2 SWAP1 PUSH2 0xB3C DUP6 SLOAD PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xF66 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xEFA JUMPI PUSH1 0x0 SWAP3 PUSH2 0xEEF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x60F JUMPI DUP2 SWAP1 PUSH2 0xBA1 PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE9C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE2A JUMPI PUSH1 0x0 SWAP3 PUSH2 0xE1F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x60F JUMPI PUSH2 0xBFD PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xDD8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD63 JUMPI SWAP2 DUP1 PUSH1 0x7 SWAP5 SWAP3 PUSH1 0xE0 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xD58 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST PUSH2 0xC5D PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x4 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 MLOAD PUSH2 0xC8B DUP2 DUP4 DUP6 DUP9 ADD PUSH2 0x112C JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x60F JUMPI PUSH32 0x6B4494367229A908B0585B361E2871A21F8EB4CD852C02F55C9E06989F4BB2AA SWAP2 PUSH2 0xD0E DUP3 PUSH1 0x1 PUSH2 0xD40 SWAP5 ADD PUSH1 0x5 SSTORE PUSH2 0x1174 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH2 0xD4F SWAP3 DUP5 ADD SWAP1 PUSH2 0x114F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP6 PUSH2 0x114F JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xC26 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xDC0 JUMPI POP SWAP3 PUSH1 0x7 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xE0 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xDA7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0xC3E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xD97 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xE18 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xE0C JUMPI POP POP PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xDF6 JUMP JUMPDEST POP DUP1 PUSH2 0xDF6 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xBC1 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xE81 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xE68 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0xBD9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xE58 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xE3D JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xEE8 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xED9 JUMPI POP POP PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xEC3 JUMP JUMPDEST POP DUP1 PUSH2 0xEBD JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xB5C JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xF4B JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xF32 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0xB71 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xF25 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xF0A JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xFAF JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xFA0 JUMPI POP POP PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xF8A JUMP JUMPDEST POP DUP1 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x456D61696C2063616E6E6F7420626520656D707479 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x96 DUP2 LT PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x50726F66696C6520616C726561647920657869737473 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456D61696C20616C726561647920726567697374657265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x60F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x60F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x151 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x10F4 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x109D JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x151 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x151 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x113F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x112F JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1168 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x112C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x11AB JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x11F1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x11DB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x11D0 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x120F DUP5 PUSH2 0x11C1 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x127E JUMPI POP PUSH1 0x1 EQ PUSH2 0x123B JUMPI JUMPDEST POP POP PUSH2 0x1239 SWAP3 POP SUB DUP4 PUSH2 0x109D JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1266 JUMPI POP POP PUSH2 0x1239 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x122B JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x124E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1239 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x122B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x12B5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12D4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756C6C206E616D652063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1320 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x496E76616C696420616765 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1364 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x137D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141C9BD99A5B1948191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13EF JUMPI PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13EF JUMPI PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 COINBASE EXTCODECOPY SIGNEXTEND 0xB8 0xA6 0xB2 0xE9 EXTCODECOPY 0xD0 0xDC 0x27 KECCAK256 0xA9 RETURNDATACOPY 0xDC CALLVALUE 0xBC PUSH30 0x985240C566F1F4E7D5BB6ADB5B64736F6C63430008140033000000000000 ","sourceMap":"172:5162:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;;;:::i;:::-;4252:37;172:5162;;;1500:62:2;;;:::i;:::-;172:5162:26;;;;;;;;;;;;;4135:52;172:5162;;;;;;4135:52;:::i;:::-;172:5162;;;4197:8;172:5162;;;4197:26;172:5162;;;4197:26;172:5162;;;;;;4252:37;172:5162;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;172:5162:26;;;;2627:22:2;;2623:91;;172:5162:26;;;;;;;;;;;;3052:40:2;172:5162:26;3052:40:2;;172:5162:26;2623:91:2;172:5162:26;;-1:-1:-1;;;2672:31:2;;172:5162:26;;2672:31:2;;172:5162:26;;;2672:31:2;172:5162:26;;;;;;-1:-1:-1;;172:5162:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:5162:26;;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;-1:-1:-1;;;;;172:5162:26;;:::i;:::-;;;;455:43;172:5162;;;;;;455:43;;;:::i;:::-;;172:5162;455:43;;172:5162;455:43;;;;;;:::i;:::-;;;172:5162;455:43;;;:::i;:::-;;172:5162;;;455:43;;172:5162;;455:43;172:5162;455:43;;;172:5162;455:43;;;;;172:5162;455:43;;172:5162;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;-1:-1:-1;;;;;172:5162:26;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;987:10;;172:5162;;;;;;;968:57;172:5162;;;;;;968:57;:::i;:::-;2466:103:15;;:::i;:::-;2772:65:26;172:5162;;2780:27;;2772:65;:::i;:::-;2855:8;;;:22;;;172:5162;2847:46;;;:::i;:::-;987:10;172:5162;;2930:8;172:5162;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2998:11;;;;172:5162;;3026:16;;172:5162;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3115:37;172:5162;;;;;;;-1:-1:-1;;;172:5162:26;;;;;;;;;;;;;;3064:17;3084:15;3064:17;;172:5162;;;;;;;;;987:10;172:5162;;;;;:::i;:::-;3115:37;;;172:5162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3115:37;172:5162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:5162:26;;;;;;;;;;;;;-1:-1:-1;;;172:5162:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:5162:26;;;;;;;;;;;2855:22;-1:-1:-1;2874:3:26;2867:10;;2855:22;;172:5162;;;;;;-1:-1:-1;;172:5162:26;;;;;;611:25;172:5162;611:25;;;;;;172:5162;611:25;;:::i;:::-;172:5162;;;;;;;;;;-1:-1:-1;;;;;172:5162:26;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;;4472:8;172:5162;;;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;;;;;-1:-1:-1;;;;;172:5162:26;;;;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;1500:62:2;;:::i;:::-;172:5162:26;;;-1:-1:-1;;;;;;172:5162:26;;;;-1:-1:-1;;;;;172:5162:26;3052:40:2;172:5162:26;;3052:40:2;172:5162:26;;;;;;;-1:-1:-1;;172:5162:26;;;;;;:::i;:::-;;;;;;;;;;;;;3823:33;1500:62:2;3770:38:26;172:5162;1500:62:2;;;:::i;:::-;172:5162:26;;;;;;;;;;;;;3708:52;172:5162;;;;;;3708:52;:::i;:::-;172:5162;;;3770:8;172:5162;;;;;;3770:26;172:5162;;;;;;;;;;;;;;;3770:38;172:5162;;;;;3823:33;172:5162;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3371:52;172:5162;;;;;;3371:52;:::i;:::-;172:5162;;3440:8;172:5162;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;3440:8;172:5162;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:5162:26;;;2466:103:15;;:::i;:::-;1713:10:26;172:5162;;;;;;;;;;;;;1761:65;172:5162;;1769:27;;1761:65;:::i;:::-;172:5162;;1844:8;;;:22;;;172:5162;1836:46;;;:::i;:::-;172:5162;;1900:24;172:5162;;;;;;;;:::i;:::-;;;;1984:273;;172:5162;1984:273;172:5162;1984:273;;172:5162;1984:273;172:5162;1984:273;;172:5162;;;1984:273;;172:5162;2164:15;172:5162;1984:273;;172:5162;2164:15;1984:273;;;172:5162;;;1984:273;;172:5162;1713:10;172:5162;;1961:8;172:5162;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:273;;172:5162;;;;;;1984:273;;172:5162;;;;;;;;;;;;1961:8;172:5162;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1961:8;172:5162;;;;;1984:273;;172:5162;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:273;;172:5162;;;;;;;;;;;;;;;;;;;;;;;1984:273;;172:5162;;;;;1984:273;;;172:5162;;;;;1984:273;172:5162;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1713:10;172:5162;;;;;;;;;1713:10;172:5162;;;;;;;;;;;;;;;;;;;;;;;;;2393:45;172:5162;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;172:5162:26;;;;;;;;;;1713:10;172:5162;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1713:10;172:5162;;:::i;:::-;2393:45;;;172:5162;;;;;;;;-1:-1:-1;172:5162:26;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:5162:26;;;;;;;-1:-1:-1;172:5162:26;;;;;;;1961:8;172:5162;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;;;;;;;;;;;;;;;;;;;;;1961:8;172:5162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1961:8;172:5162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:5162:26;;;;;-1:-1:-1;172:5162:26;;;;;;;-1:-1:-1;172:5162:26;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:5162:26;;;;;-1:-1:-1;172:5162:26;;;;;;-1:-1:-1;;;172:5162:26;;;;;;;;;;;;-1:-1:-1;;;172:5162:26;;;;;;;1844:22;-1:-1:-1;1863:3:26;1856:10;;1844:22;;172:5162;;;-1:-1:-1;;;172:5162:26;;;;;;;;;;;;-1:-1:-1;;;172:5162:26;;;;;;;;;;-1:-1:-1;;;172:5162:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5162:26;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;172:5162:26;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;172:5162:26;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;172:5162:26;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;172:5162:26;;;;:::o;:::-;;;;;;;;;-1:-1:-1;172:5162:26;;;;-1:-1:-1;172:5162:26;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:5162:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;172:5162:26;;;;-1:-1:-1;172:5162:26;;-1:-1:-1;172:5162:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:5162:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:162:2;1710:6;172:5162:26;-1:-1:-1;;;;;172:5162:26;735:10:13;1855:23:2;1851:101;;1796:162::o;1851:101::-;172:5162:26;;-1:-1:-1;;;1901:40:2;;735:10:13;1901:40:2;;;172:5162:26;;;1901:40:2;172:5162:26;;;;:::o;:::-;;;-1:-1:-1;;;172:5162:26;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;172:5162:26;;;;;;;;;;;;-1:-1:-1;;;172:5162:26;;;;;;;2575:307:15;1899:1;2702:7;172:5162:26;2702:18:15;2698:86;;1899:1;2702:7;172:5162:26;2575:307:15:o;2698:86::-;172:5162:26;;-1:-1:-1;;;2743:30:15;;;;;172:5162:26;;;;:::o;:::-;;;-1:-1:-1;;;172:5162:26;;;;;;;;;;;;-1:-1:-1;;;172:5162:26;;;;;;;4876:164;-1:-1:-1;;;;;172:5162:26;-1:-1:-1;172:5162:26;;;4959:10;172:5162;;;;;;;;4958:18;4954:36;;5007:8;172:5162;;;4959:10;172:5162;-1:-1:-1;172:5162:26;5007:26;172:5162;;4876:164;:::o;4954:36::-;-1:-1:-1;4978:12:26;:::o;5166:166::-;-1:-1:-1;;;;;172:5162:26;-1:-1:-1;172:5162:26;;;5255:10;172:5162;;;;;;;;5254:18;5250:32;;5299:8;172:5162;;5299:26;172:5162;-1:-1:-1;172:5162:26;5299:26;172:5162;5166:166;:::o"},"methodIdentifiers":{"allUsers(uint256)":"a2bdedf4","createProfile(string,uint256,string,string)":"0d1b21fa","emailToAddress(string)":"ea78dcbf","getProfile(address)":"0f53a470","getTotalUsers()":"9be572f6","getUserByEmail(string)":"18046ae1","getUserReputation(address)":"baccbfdb","hasProfile(address)":"a787c80b","isUserVerified(address)":"ace417e0","owner()":"8da5cb5b","profiles(address)":"bbe15627","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","updateProfile(string,uint256,string)":"a5fb1fb8","updateReputation(address,uint256)":"f5c91a08","verifyProfile(address,bool)":"56412d3a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"ProfileCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"ProfileUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"name\":\"ProfileVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReputation\",\"type\":\"uint256\"}],\"name\":\"ReputationUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allUsers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fullName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_age\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"createProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"emailToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"fullName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputation\",\"type\":\"uint256\"}],\"internalType\":\"struct UserProfile.Profile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"}],\"name\":\"getUserByEmail\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserReputation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasProfile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isUserVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"profiles\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"fullName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fullName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_age\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"updateProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_reputation\",\"type\":\"uint256\"}],\"name\":\"updateReputation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_verified\",\"type\":\"bool\"}],\"name\":\"verifyProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"createProfile(string,uint256,string,string)\":{\"details\":\"Create a new user profile\",\"params\":{\"_age\":\"Age of the user\",\"_email\":\"Email address (must be unique)\",\"_fullName\":\"Full name of the user\",\"_ipfsHash\":\"IPFS hash for additional profile data\"}},\"getProfile(address)\":{\"details\":\"Get profile information\",\"params\":{\"_user\":\"Address of the user\"},\"returns\":{\"_0\":\"Profile struct\"}},\"getTotalUsers()\":{\"details\":\"Get total number of users\",\"returns\":{\"_0\":\"Number of registered users\"}},\"getUserByEmail(string)\":{\"details\":\"Get user address by email\",\"params\":{\"_email\":\"Email address\"},\"returns\":{\"_0\":\"User address\"}},\"getUserReputation(address)\":{\"details\":\"Get user reputation\",\"params\":{\"_user\":\"Address of the user\"},\"returns\":{\"_0\":\"Reputation score\"}},\"isUserVerified(address)\":{\"details\":\"Check if user is verified\",\"params\":{\"_user\":\"Address of the user\"},\"returns\":{\"_0\":\"Verification status\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateProfile(string,uint256,string)\":{\"details\":\"Update existing profile\",\"params\":{\"_age\":\"New age\",\"_fullName\":\"New full name\",\"_ipfsHash\":\"New IPFS hash\"}},\"updateReputation(address,uint256)\":{\"details\":\"Update user reputation (only owner or authorized contracts)\",\"params\":{\"_reputation\":\"New reputation score\",\"_user\":\"Address of the user\"}},\"verifyProfile(address,bool)\":{\"details\":\"Verify a user profile (only owner)\",\"params\":{\"_user\":\"Address of the user to verify\",\"_verified\":\"Verification status\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UserProfile.sol\":\"UserProfile\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/UserProfile.sol\":{\"keccak256\":\"0x66194ff77acf1750d4f1ba130c75788aee9f420148bcbe05b0d78d7695661bbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68c7f9d45ff03b3856104e6af3ebadf93b1cb00105bf83f47d944a5c004a6305\",\"dweb:/ipfs/QmSNEG3D7Jw6YK3frGgzM9uBzjWTwwjZsrpAXGsNCVJ56H\"]}},\"version\":1}"}},"contracts/ZKProof.sol":{"ZKProof":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proofId","type":"uint256"},{"indexed":true,"internalType":"address","name":"submitter","type":"address"},{"indexed":false,"internalType":"string","name":"proofType","type":"string"},{"indexed":false,"internalType":"string","name":"metadataHash","type":"string"}],"name":"ProofSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"proofType","type":"string"},{"indexed":false,"internalType":"address","name":"verifierContract","type":"address"}],"name":"ProofTypeAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"proofType","type":"string"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"ProofTypeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proofId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isValid","type":"bool"},{"indexed":true,"internalType":"address","name":"verifier","type":"address"}],"name":"ProofVerified","type":"event"},{"inputs":[{"internalType":"string","name":"_proofType","type":"string"},{"internalType":"address","name":"_verifierContract","type":"address"},{"internalType":"uint256","name":"_minReputation","type":"uint256"}],"name":"addProofType","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proofId","type":"uint256"}],"name":"getProof","outputs":[{"components":[{"internalType":"address","name":"submitter","type":"address"},{"internalType":"string","name":"proofType","type":"string"},{"internalType":"uint256[8]","name":"proof","type":"uint256[8]"},{"internalType":"uint256[2]","name":"publicInputs","type":"uint256[2]"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"uint256","name":"submittedAt","type":"uint256"},{"internalType":"uint256","name":"verifiedAt","type":"uint256"},{"internalType":"string","name":"metadataHash","type":"string"}],"internalType":"struct ZKProof.Proof","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_proofType","type":"string"}],"name":"getProofType","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"address","name":"verifierContract","type":"address"},{"internalType":"uint256","name":"minReputation","type":"uint256"}],"internalType":"struct ZKProof.ProofType","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSupportedProofTypes","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalProofs","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserProofs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proofId","type":"uint256"}],"name":"isProofVerified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextProofId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"proofTypes","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"address","name":"verifierContract","type":"address"},{"internalType":"uint256","name":"minReputation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proofs","outputs":[{"internalType":"address","name":"submitter","type":"address"},{"internalType":"string","name":"proofType","type":"string"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"uint256","name":"submittedAt","type":"uint256"},{"internalType":"uint256","name":"verifiedAt","type":"uint256"},{"internalType":"string","name":"metadataHash","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_proofType","type":"string"},{"internalType":"uint256[8]","name":"_proof","type":"uint256[8]"},{"internalType":"uint256[2]","name":"_publicInputs","type":"uint256[2]"},{"internalType":"string","name":"_metadataHash","type":"string"}],"name":"submitProof","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"supportedProofTypes","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_proofType","type":"string"},{"internalType":"bool","name":"_isActive","type":"bool"}],"name":"updateProofType","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userProofs","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proofId","type":"uint256"},{"internalType":"bool","name":"_isValid","type":"bool"}],"name":"verifyProof","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":1732,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_7664":{"entryPoint":1786,"id":null,"parameterSlots":0,"returnSlots":1},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":1895,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1858,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup_8621":{"entryPoint":1818,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060409080825234620006bf573315620006a9575060008054336001600160a01b0319821681178355919291906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08480a36001808055806005556200006d620006fa565b60158152602090818101907f6964656e746974795f766572696669636174696f6e00000000000000000000008252845193620000aa85846200071a565b60356003958660158201528260ff928392200154166200067657620000ce620006c4565b9583875285870191838352888801918a83526060988981018c81528b518a81808c8c518092620000fe9262000742565b810186815203019020915162000115908362000767565b945186820180549551610100600160a81b0360089190911b811692151586166001600160a81b031997881617929092179055945160029091015560068054680100000000000000009891979190898110156200066257878101808a558110156200064e5791620001b98d8f93620001a18f9e9c9a98968590601f9f9d9b99978f908e8152200162000767565b81519e8f948386525194858094820152019062000742565b8d898d01528b8b7fc5136ee9cbcdfae0f750e383ed3d0d7a24bbcd260f0b5ff469aa6b4a84d274329d8e938d199d8e9101168101030190a1620001fb620006fa565b601581528c838760358c8501937f72657365617263685f61757468656e74696369747900000000000000000000008552516200023881866200071a565b86601582015220015416620005fd578b8f8f89600292620002988f6200025d620006c4565b96898852818801948552858801938452870194603286525190818a516200028681838d62000742565b81018c81520301902095518662000767565b8b850191511515908a8a8d8554935160081b16931691161717905551910155875489811015620005e857878101808a55811015620005d3578f928f928f948f93918f92918f620002f38f601f95889185528385200162000767565b62000311885198899781895251948580928a01528989019062000742565b85015201168101030190a18c8c8984886200032b620006fa565b9486600e808852858801966d646174615f696e7465677269747960901b88525192955b818710620006305750820152602e90200154169050620005fd578b8f8f89600292620003a78f6200037e620006c4565b96898852818801948552858801938452870194601986525190818a516200028681838d62000742565b8b850191511515908a8a8d8554935160081b16931691161717905551910155875489811015620005e857878101808a55811015620005d357938f978f9c9b999795988f8f8f908f976a706565725f72657669657760a81b9f9d988f879d9b998f601f926200041f868d9f8c9485528385200162000767565b6200043d885198899781895251948580928a01528989019062000742565b85015201168101030190a18a62000453620006fa565b600b81528181019d8e529e51918f5b600b8210620005ba575050508084600b602b9301522001541662000587578b938f8f9394600295620004da8f8d8f8c98620004c893620004a1620006c4565b9d8e8281528581019c8d528d81019a8b52019b60648d525194859384925192839162000742565b82019081520301902098518962000767565b88880194511515938554935160081b16931691161717905551910155815492831015620005735782018082558210156200055f57916200052c868b93601f9695620005469b9c9d528385200162000767565b89519788968b8852518094818d8a01528989019062000742565b85015201168101030190a1516115be9081620008b68239f35b634e487b7160e01b8a52603260045260248afd5b634e487b7160e01b8b52604160045260248bfd5b8d5162461bcd60e51b8152600481018990526019602482015260008051602062001e748339815191526044820152606490fd5b8101820151838201528694508993508c91018f62000462565b50634e487b7160e01b8f52603260045260248ffd5b50634e487b7160e01b8f52604160045260248ffd5b8d5162461bcd60e51b8152600481018b90526019602482015260008051602062001e748339815191526044820152606490fd5b93509350509281818701015181850152019189908688938f6200034e565b634e487b7160e01b8e52603260045260248efd5b634e487b7160e01b8e52604160045260248efd5b865162461bcd60e51b8152600481018690526019602482015260008051602062001e748339815191526044820152606490fd5b631e4fbdf760e01b815260006004820152602490fd5b600080fd5b60405190608082016001600160401b03811183821017620006e457604052565b634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b03811183821017620006e457604052565b60005b601581106200073157505060156000910152565b81810151838201526020016200071d565b60005b838110620007565750506000910152565b818101518382015260200162000745565b81519091906001600160401b038111620006e457825460019283821691841c8215620008ac575b602092838210146200089657601f811162000848575b5081601f8411600114620007e15750928293918392600094620007d5575b50501b916000199060031b1c1916179055565b015192503880620007c2565b919083601f1981168760005284600020946000905b888383106200082d575050501062000813575b505050811b019055565b015160001960f88460031b161c1916905538808062000809565b858701518855909601959485019487935090810190620007f6565b8560005282600020601f850160051c8101918486106200088b575b601f0160051c019085905b8281106200087e575050620007a4565b600081550185906200086e565b909150819062000863565b634e487b7160e01b600052602260045260246000fd5b607f166200078e56fe608080604052600436101561001357600080fd5b60003560e01c90816308ac8d22146111475750806311149ada14610f285780631acbce1414610bf75780632eb4a65e146109e0578063373b58e61461098857806341c7ce2e1461092757806346bdfb801461087357806356ef9cb5146106db57806366b92f9e14610635578063715018a6146105dc57806374235369146104d25780638129cd071461039b5780638da5cb5b146103725780639b1bc0c9146103315780639ddaf5aa14610294578063bf6618f9146101a0578063e96f88ea146101785763f2fde38b146100e557600080fd5b34610173576020366003190112610173576100fe611278565b6101066113e2565b6001600160a01b0390811690811561015a57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b34610173576020366003190112610173576020610196600435611561565b6040519015158152f35b3461017357602080600319360112610173576004359067ffffffffffffffff82116101735761020c816101d96080943690600401611221565b600060606040516101e9816111c7565b818152828582015282604082015201528160405193828580945193849201611162565b8101600381520301902060405191610223836111c7565b61022c8261132d565b835260018201548184019260ff82161515845261027a6002604087019260018060a01b03809560081c16845201549360608701948552604051978897828952519188015260a0870190611185565b935115156040860152511660608401525160808301520390f35b3461017357602036600319011261017357600435600090815260026020526040902080546001600160a01b031661032d6102d06001840161132d565b9260ff600c8201541690600d810154906102f1600f600e830154920161132d565b9161030e604051978897885260c0602089015260c0880190611185565b93151560408701526060860152608085015283820360a0850152611185565b0390f35b3461017357600036600319011261017357600554600019810190811161035c57602090604051908152f35b634e487b7160e01b600052601160045260246000fd5b34610173576000366003190112610173576000546040516001600160a01b039091168152602090f35b346101735760403660031901126101735760043567ffffffffffffffff8111610173576103cc903690600401611221565b6103d46113d3565b906103dd6113e2565b60405190610409815192602081818501956103f9818389611162565b81016003815203019020546112f3565b1561048d578261046c7fd91fb3ad497a5eac04e08baacaa347b1eef608d1b43bcd4f35a7ed25ea5e8c25946001610450602061048097604051809381928a51928391611162565b81016003815203019020019060ff801983541691151516179055565b604051928392604084526040840190611185565b90151560208301520390a1005b60405162461bcd60e51b815260206004820152601960248201527f50726f6f66207479706520646f6573206e6f74206578697374000000000000006044820152606490fd5b346101735760003660031901126101735760065467ffffffffffffffff81116105c6576040519060209061050b828260051b01846111ff565b808352818301908160066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f6000915b8383106105a45750505050604051918083019381845251809452604083019360408160051b85010192916000955b8287106105785785850386f35b909192938280610594600193603f198a82030186528851611185565b960192019601959291909261056b565b60018681926105b5859a999a61132d565b81520192019201919095949561053d565b634e487b7160e01b600052604160045260246000fd5b34610173576000366003190112610173576105f56113e2565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101735760203660031901126101735760043567ffffffffffffffff811161017357610681602061066e6106b3933690600401611221565b8160405193828580945193849201611162565b810160038152030190206106948161132d565b9060026001820154910154604051938493608085526080850190611185565b60ff83161515602085015260089290921c6001600160a01b0316604084015260608301520390f35b34610173576040366003190112610173576004356106f76113d3565b9080600052602060028152610712600160406000200161132d565b600054336001600160a01b0391821614918390831561083c575b505050156107e757610741600554831061151e565b816000526002815260ff600c60406000200154166107aa577f70c9579a34961b8e4495afea0520b52edc90522592e0784a023d52983abe2b169082600052600281526040600020600c8101600160ff19825416179055600e4291015560405193151584523393a3005b6064906040519062461bcd60e51b825260048201526016602482015275141c9bdbd988185b1c9958591e481d995c9a599a595960521b6044820152fd5b6084906040519062461bcd60e51b82526004820152602860248201527f4e6f7420617574686f72697a656420746f2076657269667920746869732070726044820152676f6f66207479706560c01b6064820152fd5b600192935090610859918160405193828580945193849201611162565b81016003815203019020015460081c16331484828161072c565b3461017357602080600319360112610173576001600160a01b03610895611278565b1660005260048152604060002060405190818382549182815201908192600052846000209060005b868282106109135786866108d3828803836111ff565b604051928392818401908285525180915260408401929160005b8281106108fc57505050500390f35b8351855286955093810193928101926001016108ed565b8354855290930192600192830192016108bd565b34610173576020366003190112610173576004356006548110156101735761094e9061128e565b6109725761095e61032d9161132d565b604051918291602083526020830190611185565b634e487b7160e01b600052600060045260246000fd5b34610173576040366003190112610173576109a1611278565b6001600160a01b0316600090815260046020526040902080546024359190821015610173576020916109d2916112db565b90546040519160031b1c8152f35b346101735760603660031901126101735760043567ffffffffffffffff811161017357610a11903690600401611221565b6024356001600160a01b038116919082900361017357610a2f6113e2565b805115610bb25760405190805160ff6001602094858181870195610a54818389611162565b81016003815203019020015416610b6d57600260405191610a74836111c7565b8383528483016001815260408401878152610ab9610aa78860608801956044358752604051809381928c51928391611162565b8101600381520301902095518661140e565b610ad66001860192511515839060ff801983541691151516179055565b518154610100600160a81b03191660089190911b610100600160a81b031617905551910155600654600160401b8110156105c657806001610b1a920160065561128e565b929092610972577fc5136ee9cbcdfae0f750e383ed3d0d7a24bbcd260f0b5ff469aa6b4a84d2743293610b5083610b649561140e565b604051938493604085526040850190611185565b918301520390a1005b60405162461bcd60e51b815260048101849052601960248201527f50726f6f66207479706520616c726561647920657869737473000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f50726f6f6620747970652063616e6e6f7420626520656d7074790000000000006044820152606490fd5b34610173576101803660031901126101735767ffffffffffffffff60043581811161017357610c2a903690600401611221565b90366043121561017357604051610c40816111aa565b6101249181368411610173576024905b848210610f185750503661014312156101735760405192610c70846111e3565b836101649136831161017357905b828210610f085750503590811161017357610c9d903690600401611221565b9060405160ff6001865192602081818a0195610cba818389611162565b8101600381520301902001541615610ec357600260015414610eb157610cf160039160026001556040519182918851938491611162565b015260055492600019841461035c576001840160055560405190610d14826111aa565b33825260208201928684526040830190815260608301918252600060808401524260a0840152600060c08401528460e0840152856000526002602052610d8360406000209460018060a01b038551166bffffffffffffffffffffffff60a01b875416178655516001860161140e565b5160005b60088110610e9a5750505160005b60028110610e8357505090600f60e083610dc76080610de49601511515600c86019060ff801983541691151516179055565b60a0810151600d85015560c0810151600e8501550151910161140e565b336000526004602052604060002092835493600160401b8510156105c657610e668492610e3a877fc0b04028e7b044e610e837c16aa829c3ac6eda886999b98be29a1449db09701494600160209a0181556112db565b81549060031b9086821b91600019901b1916179055610e74604051928392604084526040840190611185565b828103898401523396611185565b0390a360018055604051908152f35b60019060208351930192600a828701015501610d95565b600190602083519301926002828801015501610d87565b604051633ee5aeb560e01b8152600490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c6964206f7220696e6163746976652070726f6f66207479706500006044820152606490fd5b8135815260209182019101610c7e565b8135815260209182019101610c50565b346101735760208060031936011261017357600435606060e0604051610f4d816111aa565b600081528285820152604051610f62816111aa565b6101003682376040820152604051610f79816111e3565b60403682378382015260006080820152600060a0820152600060c08201520152610fa6600554821061151e565b600052600280825260406000209160405190610fc1826111aa565b83546001600160a01b03908116835293600190610fdf81830161132d565b908385019182526040519384878301906000905b6008821061113457505050611007856111aa565b60408681019586525193600a83016000865b8a82106111215750505061102c856111e3565b6060870194855260ff600c8401541697608088019815158952600d8401549260a0890193845261106a600f600e8701549660c08c019788520161132d565b9560e08a019687526040519b8c9a838c525116828b0152519661109b610200988960408d01526102208c0190611185565b9851600060608c015b6008821061110b57505050516101608a01906000915b8483106110f55750505050505061032d95965115156101a0880152516101c0870152516101e08601525190601f198584030190850152611185565b815181528d9b50918501919083019083016110ba565b825181528e9c50918401919086019084016110a4565b8254815291830191908301908401611019565b8254815291860191908601908301610ff3565b34610173576000366003190112610173576020906005548152f35b60005b8381106111755750506000910152565b8181015183820152602001611165565b9060209161119e81518092818552858086019101611162565b601f01601f1916010190565b610100810190811067ffffffffffffffff8211176105c657604052565b6080810190811067ffffffffffffffff8211176105c657604052565b6040810190811067ffffffffffffffff8211176105c657604052565b90601f8019910116810190811067ffffffffffffffff8211176105c657604052565b81601f820112156101735780359067ffffffffffffffff82116105c65760405192611256601f8401601f1916602001856111ff565b8284526020838301011161017357816000926020809301838601378301015290565b600435906001600160a01b038216820361017357565b6006548110156112c55760066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156112c55760005260206000200190600090565b90600182811c92168015611323575b602083101461130d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611302565b9060405191826000825492611341846112f3565b9081845260019485811690816000146113b0575060011461136d575b505061136b925003836111ff565b565b9093915060005260209081600020936000915b81831061139857505061136b9350820101388061135d565b85548884018501529485019487945091830191611380565b91505061136b94506020925060ff191682840152151560051b820101388061135d565b60243590811515820361017357565b6000546001600160a01b031633036113f657565b60405163118cdaa760e01b8152336004820152602490fd5b919091825167ffffffffffffffff81116105c65761142c82546112f3565b601f81116114d6575b50602080601f8311600114611472575081929394600092611467575b50508160011b916000199060031b1c1916179055565b015190503880611451565b90601f198316958460005282600020926000905b8882106114be575050836001959697106114a5575b505050811b019055565b015160001960f88460031b161c1916905538808061149b565b80600185968294968601518155019501930190611486565b600083815260208120601f840160051c81019260208510611514575b601f0160051c01915b828110611509575050611435565b8181556001016114fb565b90925082906114f2565b1561152557565b60405162461bcd60e51b8152602060048201526014602482015273141c9bdbd988191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b60055481101561158257600052600260205260ff600c604060002001541690565b5060009056fea2646970667358221220497bac1ec2de1ff953882c47a4682a1a8c3685b622ab222ec4e94972bb2860d364736f6c6343000814003350726f6f66207479706520616c72656164792065786973747300000000000000","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH3 0x6BF JUMPI CALLER ISZERO PUSH3 0x6A9 JUMPI POP PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP5 DUP1 LOG3 PUSH1 0x1 DUP1 DUP1 SSTORE DUP1 PUSH1 0x5 SSTORE PUSH3 0x6D PUSH3 0x6FA JUMP JUMPDEST PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 DUP2 ADD SWAP1 PUSH32 0x6964656E746974795F766572696669636174696F6E0000000000000000000000 DUP3 MSTORE DUP5 MLOAD SWAP4 PUSH3 0xAA DUP6 DUP5 PUSH3 0x71A JUMP JUMPDEST PUSH1 0x35 PUSH1 0x3 SWAP6 DUP7 PUSH1 0x15 DUP3 ADD MSTORE DUP3 PUSH1 0xFF SWAP3 DUP4 SWAP3 KECCAK256 ADD SLOAD AND PUSH3 0x676 JUMPI PUSH3 0xCE PUSH3 0x6C4 JUMP JUMPDEST SWAP6 DUP4 DUP8 MSTORE DUP6 DUP8 ADD SWAP2 DUP4 DUP4 MSTORE DUP9 DUP9 ADD SWAP2 DUP11 DUP4 MSTORE PUSH1 0x60 SWAP9 DUP10 DUP2 ADD DUP13 DUP2 MSTORE DUP12 MLOAD DUP11 DUP2 DUP1 DUP13 DUP13 MLOAD DUP1 SWAP3 PUSH3 0xFE SWAP3 PUSH3 0x742 JUMP JUMPDEST DUP2 ADD DUP7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 MLOAD PUSH3 0x115 SWAP1 DUP4 PUSH3 0x767 JUMP JUMPDEST SWAP5 MLOAD DUP7 DUP3 ADD DUP1 SLOAD SWAP6 MLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL DUP2 AND SWAP3 ISZERO ISZERO DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP8 DUP9 AND OR SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE SWAP5 MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH1 0x6 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP9 SWAP2 SWAP8 SWAP2 SWAP1 DUP10 DUP2 LT ISZERO PUSH3 0x662 JUMPI DUP8 DUP2 ADD DUP1 DUP11 SSTORE DUP2 LT ISZERO PUSH3 0x64E JUMPI SWAP2 PUSH3 0x1B9 DUP14 DUP16 SWAP4 PUSH3 0x1A1 DUP16 SWAP15 SWAP13 SWAP11 SWAP9 SWAP7 DUP6 SWAP1 PUSH1 0x1F SWAP16 SWAP14 SWAP12 SWAP10 SWAP8 DUP16 SWAP1 DUP15 DUP2 MSTORE KECCAK256 ADD PUSH3 0x767 JUMP JUMPDEST DUP2 MLOAD SWAP15 DUP16 SWAP5 DUP4 DUP7 MSTORE MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP3 ADD MSTORE ADD SWAP1 PUSH3 0x742 JUMP JUMPDEST DUP14 DUP10 DUP14 ADD MSTORE DUP12 DUP12 PUSH32 0xC5136EE9CBCDFAE0F750E383ED3D0D7A24BBCD260F0B5FF469AA6B4A84D27432 SWAP14 DUP15 SWAP4 DUP14 NOT SWAP14 DUP15 SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 LOG1 PUSH3 0x1FB PUSH3 0x6FA JUMP JUMPDEST PUSH1 0x15 DUP2 MSTORE DUP13 DUP4 DUP8 PUSH1 0x35 DUP13 DUP6 ADD SWAP4 PUSH32 0x72657365617263685F61757468656E7469636974790000000000000000000000 DUP6 MSTORE MLOAD PUSH3 0x238 DUP2 DUP7 PUSH3 0x71A JUMP JUMPDEST DUP7 PUSH1 0x15 DUP3 ADD MSTORE KECCAK256 ADD SLOAD AND PUSH3 0x5FD JUMPI DUP12 DUP16 DUP16 DUP10 PUSH1 0x2 SWAP3 PUSH3 0x298 DUP16 PUSH3 0x25D PUSH3 0x6C4 JUMP JUMPDEST SWAP7 DUP10 DUP9 MSTORE DUP2 DUP9 ADD SWAP5 DUP6 MSTORE DUP6 DUP9 ADD SWAP4 DUP5 MSTORE DUP8 ADD SWAP5 PUSH1 0x32 DUP7 MSTORE MLOAD SWAP1 DUP2 DUP11 MLOAD PUSH3 0x286 DUP2 DUP4 DUP14 PUSH3 0x742 JUMP JUMPDEST DUP2 ADD DUP13 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP6 MLOAD DUP7 PUSH3 0x767 JUMP JUMPDEST DUP12 DUP6 ADD SWAP2 MLOAD ISZERO ISZERO SWAP1 DUP11 DUP11 DUP14 DUP6 SLOAD SWAP4 MLOAD PUSH1 0x8 SHL AND SWAP4 AND SWAP2 AND OR OR SWAP1 SSTORE MLOAD SWAP2 ADD SSTORE DUP8 SLOAD DUP10 DUP2 LT ISZERO PUSH3 0x5E8 JUMPI DUP8 DUP2 ADD DUP1 DUP11 SSTORE DUP2 LT ISZERO PUSH3 0x5D3 JUMPI DUP16 SWAP3 DUP16 SWAP3 DUP16 SWAP5 DUP16 SWAP4 SWAP2 DUP16 SWAP3 SWAP2 DUP16 PUSH3 0x2F3 DUP16 PUSH1 0x1F SWAP6 DUP9 SWAP2 DUP6 MSTORE DUP4 DUP6 KECCAK256 ADD PUSH3 0x767 JUMP JUMPDEST PUSH3 0x311 DUP9 MLOAD SWAP9 DUP10 SWAP8 DUP2 DUP10 MSTORE MLOAD SWAP5 DUP6 DUP1 SWAP3 DUP11 ADD MSTORE DUP10 DUP10 ADD SWAP1 PUSH3 0x742 JUMP JUMPDEST DUP6 ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 LOG1 DUP13 DUP13 DUP10 DUP5 DUP9 PUSH3 0x32B PUSH3 0x6FA JUMP JUMPDEST SWAP5 DUP7 PUSH1 0xE DUP1 DUP9 MSTORE DUP6 DUP9 ADD SWAP7 PUSH14 0x646174615F696E74656772697479 PUSH1 0x90 SHL DUP9 MSTORE MLOAD SWAP3 SWAP6 JUMPDEST DUP2 DUP8 LT PUSH3 0x630 JUMPI POP DUP3 ADD MSTORE PUSH1 0x2E SWAP1 KECCAK256 ADD SLOAD AND SWAP1 POP PUSH3 0x5FD JUMPI DUP12 DUP16 DUP16 DUP10 PUSH1 0x2 SWAP3 PUSH3 0x3A7 DUP16 PUSH3 0x37E PUSH3 0x6C4 JUMP JUMPDEST SWAP7 DUP10 DUP9 MSTORE DUP2 DUP9 ADD SWAP5 DUP6 MSTORE DUP6 DUP9 ADD SWAP4 DUP5 MSTORE DUP8 ADD SWAP5 PUSH1 0x19 DUP7 MSTORE MLOAD SWAP1 DUP2 DUP11 MLOAD PUSH3 0x286 DUP2 DUP4 DUP14 PUSH3 0x742 JUMP JUMPDEST DUP12 DUP6 ADD SWAP2 MLOAD ISZERO ISZERO SWAP1 DUP11 DUP11 DUP14 DUP6 SLOAD SWAP4 MLOAD PUSH1 0x8 SHL AND SWAP4 AND SWAP2 AND OR OR SWAP1 SSTORE MLOAD SWAP2 ADD SSTORE DUP8 SLOAD DUP10 DUP2 LT ISZERO PUSH3 0x5E8 JUMPI DUP8 DUP2 ADD DUP1 DUP11 SSTORE DUP2 LT ISZERO PUSH3 0x5D3 JUMPI SWAP4 DUP16 SWAP8 DUP16 SWAP13 SWAP12 SWAP10 SWAP8 SWAP6 SWAP9 DUP16 DUP16 DUP16 SWAP1 DUP16 SWAP8 PUSH11 0x706565725F726576696577 PUSH1 0xA8 SHL SWAP16 SWAP14 SWAP9 DUP16 DUP8 SWAP14 SWAP12 SWAP10 DUP16 PUSH1 0x1F SWAP3 PUSH3 0x41F DUP7 DUP14 SWAP16 DUP13 SWAP5 DUP6 MSTORE DUP4 DUP6 KECCAK256 ADD PUSH3 0x767 JUMP JUMPDEST PUSH3 0x43D DUP9 MLOAD SWAP9 DUP10 SWAP8 DUP2 DUP10 MSTORE MLOAD SWAP5 DUP6 DUP1 SWAP3 DUP11 ADD MSTORE DUP10 DUP10 ADD SWAP1 PUSH3 0x742 JUMP JUMPDEST DUP6 ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 LOG1 DUP11 PUSH3 0x453 PUSH3 0x6FA JUMP JUMPDEST PUSH1 0xB DUP2 MSTORE DUP2 DUP2 ADD SWAP14 DUP15 MSTORE SWAP15 MLOAD SWAP2 DUP16 JUMPDEST PUSH1 0xB DUP3 LT PUSH3 0x5BA JUMPI POP POP POP DUP1 DUP5 PUSH1 0xB PUSH1 0x2B SWAP4 ADD MSTORE KECCAK256 ADD SLOAD AND PUSH3 0x587 JUMPI DUP12 SWAP4 DUP16 DUP16 SWAP4 SWAP5 PUSH1 0x2 SWAP6 PUSH3 0x4DA DUP16 DUP14 DUP16 DUP13 SWAP9 PUSH3 0x4C8 SWAP4 PUSH3 0x4A1 PUSH3 0x6C4 JUMP JUMPDEST SWAP14 DUP15 DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP13 DUP14 MSTORE DUP14 DUP2 ADD SWAP11 DUP12 MSTORE ADD SWAP12 PUSH1 0x64 DUP14 MSTORE MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH3 0x742 JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP9 MLOAD DUP10 PUSH3 0x767 JUMP JUMPDEST DUP9 DUP9 ADD SWAP5 MLOAD ISZERO ISZERO SWAP4 DUP6 SLOAD SWAP4 MLOAD PUSH1 0x8 SHL AND SWAP4 AND SWAP2 AND OR OR SWAP1 SSTORE MLOAD SWAP2 ADD SSTORE DUP2 SLOAD SWAP3 DUP4 LT ISZERO PUSH3 0x573 JUMPI DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH3 0x55F JUMPI SWAP2 PUSH3 0x52C DUP7 DUP12 SWAP4 PUSH1 0x1F SWAP7 SWAP6 PUSH3 0x546 SWAP12 SWAP13 SWAP14 MSTORE DUP4 DUP6 KECCAK256 ADD PUSH3 0x767 JUMP JUMPDEST DUP10 MLOAD SWAP8 DUP9 SWAP7 DUP12 DUP9 MSTORE MLOAD DUP1 SWAP5 DUP2 DUP14 DUP11 ADD MSTORE DUP10 DUP10 ADD SWAP1 PUSH3 0x742 JUMP JUMPDEST DUP6 ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 LOG1 MLOAD PUSH2 0x15BE SWAP1 DUP2 PUSH3 0x8B6 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP14 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1E74 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 ADD DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE DUP7 SWAP5 POP DUP10 SWAP4 POP DUP13 SWAP2 ADD DUP16 PUSH3 0x462 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP16 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP16 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP16 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP16 REVERT JUMPDEST DUP14 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1E74 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP4 POP SWAP4 POP POP SWAP3 DUP2 DUP2 DUP8 ADD ADD MLOAD DUP2 DUP6 ADD MSTORE ADD SWAP2 DUP10 SWAP1 DUP7 DUP9 SWAP4 DUP16 PUSH3 0x34E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP15 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP15 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1E74 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x6E4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x6E4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x15 DUP2 LT PUSH3 0x731 JUMPI POP POP PUSH1 0x15 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x71D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0x756 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x745 JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x6E4 JUMPI DUP3 SLOAD PUSH1 0x1 SWAP3 DUP4 DUP3 AND SWAP2 DUP5 SHR DUP3 ISZERO PUSH3 0x8AC JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP3 LT EQ PUSH3 0x896 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x848 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x7E1 JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x7D5 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x7C2 JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x82D JUMPI POP POP POP LT PUSH3 0x813 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x809 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x7F6 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP5 DUP7 LT PUSH3 0x88B JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x87E JUMPI POP POP PUSH3 0x7A4 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x86E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x863 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x7F AND PUSH3 0x78E JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x8AC8D22 EQ PUSH2 0x1147 JUMPI POP DUP1 PUSH4 0x11149ADA EQ PUSH2 0xF28 JUMPI DUP1 PUSH4 0x1ACBCE14 EQ PUSH2 0xBF7 JUMPI DUP1 PUSH4 0x2EB4A65E EQ PUSH2 0x9E0 JUMPI DUP1 PUSH4 0x373B58E6 EQ PUSH2 0x988 JUMPI DUP1 PUSH4 0x41C7CE2E EQ PUSH2 0x927 JUMPI DUP1 PUSH4 0x46BDFB80 EQ PUSH2 0x873 JUMPI DUP1 PUSH4 0x56EF9CB5 EQ PUSH2 0x6DB JUMPI DUP1 PUSH4 0x66B92F9E EQ PUSH2 0x635 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0x74235369 EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x8129CD07 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x9B1BC0C9 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x9DDAF5AA EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xBF6618F9 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xE96F88EA EQ PUSH2 0x178 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH2 0xFE PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x20 PUSH2 0x196 PUSH1 0x4 CALLDATALOAD PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x173 JUMPI PUSH2 0x20C DUP2 PUSH2 0x1D9 PUSH1 0x80 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x1E9 DUP2 PUSH2 0x11C7 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x223 DUP4 PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0x22C DUP3 PUSH2 0x132D JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD SWAP3 PUSH1 0xFF DUP3 AND ISZERO ISZERO DUP5 MSTORE PUSH2 0x27A PUSH1 0x2 PUSH1 0x40 DUP8 ADD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 PUSH1 0x8 SHR AND DUP5 MSTORE ADD SLOAD SWAP4 PUSH1 0x60 DUP8 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP3 DUP10 MSTORE MLOAD SWAP2 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP4 MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE MLOAD PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x32D PUSH2 0x2D0 PUSH1 0x1 DUP5 ADD PUSH2 0x132D JUMP JUMPDEST SWAP3 PUSH1 0xFF PUSH1 0xC DUP3 ADD SLOAD AND SWAP1 PUSH1 0xD DUP2 ADD SLOAD SWAP1 PUSH2 0x2F1 PUSH1 0xF PUSH1 0xE DUP4 ADD SLOAD SWAP3 ADD PUSH2 0x132D JUMP JUMPDEST SWAP2 PUSH2 0x30E PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x1185 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x5 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x35C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x173 JUMPI PUSH2 0x3CC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0x13D3 JUMP JUMPDEST SWAP1 PUSH2 0x3DD PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x409 DUP2 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP6 ADD SWAP6 PUSH2 0x3F9 DUP2 DUP4 DUP10 PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH2 0x12F3 JUMP JUMPDEST ISZERO PUSH2 0x48D JUMPI DUP3 PUSH2 0x46C PUSH32 0xD91FB3AD497A5EAC04E08BAACAA347B1EEF608D1B43BCD4F35A7ED25EA5E8C25 SWAP5 PUSH1 0x1 PUSH2 0x450 PUSH1 0x20 PUSH2 0x480 SWAP8 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP11 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6F66207479706520646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x50B DUP3 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x11FF JUMP JUMPDEST DUP1 DUP4 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x5A4 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 ADD SWAP4 DUP2 DUP5 MSTORE MLOAD DUP1 SWAP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP4 PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 SWAP2 PUSH1 0x0 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x578 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x594 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1185 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x1 DUP7 DUP2 SWAP3 PUSH2 0x5B5 DUP6 SWAP11 SWAP10 SWAP11 PUSH2 0x132D JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP6 SWAP5 SWAP6 PUSH2 0x53D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH2 0x5F5 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x173 JUMPI PUSH2 0x681 PUSH1 0x20 PUSH2 0x66E PUSH2 0x6B3 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x694 DUP2 PUSH2 0x132D JUMP JUMPDEST SWAP1 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x80 DUP6 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0xFF DUP4 AND ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6F7 PUSH2 0x13D3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x2 DUP2 MSTORE PUSH2 0x712 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x132D JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND EQ SWAP2 DUP4 SWAP1 DUP4 ISZERO PUSH2 0x83C JUMPI JUMPDEST POP POP POP ISZERO PUSH2 0x7E7 JUMPI PUSH2 0x741 PUSH1 0x5 SLOAD DUP4 LT PUSH2 0x151E JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0xFF PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x7AA JUMPI PUSH32 0x70C9579A34961B8E4495AFEA0520B52EDC90522592E0784A023D52983ABE2B16 SWAP1 DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xC DUP2 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xE TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE CALLER SWAP4 LOG3 STOP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141C9BDBD988185B1C9958591E481D995C9A599A5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F207665726966792074686973207072 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6F6F662074797065 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 SWAP3 SWAP4 POP SWAP1 PUSH2 0x859 SWAP2 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND CALLER EQ DUP5 DUP3 DUP2 PUSH2 0x72C JUMP JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x173 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x895 PUSH2 0x1278 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x913 JUMPI DUP7 DUP7 PUSH2 0x8D3 DUP3 DUP9 SUB DUP4 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x8FC JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x8ED JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x8BD JUMP JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH2 0x94E SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x972 JUMPI PUSH2 0x95E PUSH2 0x32D SWAP2 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH2 0x9A1 PUSH2 0x1278 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x9D2 SWAP2 PUSH2 0x12DB JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x173 JUMPI PUSH2 0xA11 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x173 JUMPI PUSH2 0xA2F PUSH2 0x13E2 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 MLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0x20 SWAP5 DUP6 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0xA54 DUP2 DUP4 DUP10 PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH2 0xB6D JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xA74 DUP4 PUSH2 0x11C7 JUMP JUMPDEST DUP4 DUP4 MSTORE DUP5 DUP4 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 DUP5 ADD DUP8 DUP2 MSTORE PUSH2 0xAB9 PUSH2 0xAA7 DUP9 PUSH1 0x60 DUP9 ADD SWAP6 PUSH1 0x44 CALLDATALOAD DUP8 MSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP13 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP6 MLOAD DUP7 PUSH2 0x140E JUMP JUMPDEST PUSH2 0xAD6 PUSH1 0x1 DUP7 ADD SWAP3 MLOAD ISZERO ISZERO DUP4 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD DUP2 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x5C6 JUMPI DUP1 PUSH1 0x1 PUSH2 0xB1A SWAP3 ADD PUSH1 0x6 SSTORE PUSH2 0x128E JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x972 JUMPI PUSH32 0xC5136EE9CBCDFAE0F750E383ED3D0D7A24BBCD260F0B5FF469AA6B4A84D27432 SWAP4 PUSH2 0xB50 DUP4 PUSH2 0xB64 SWAP6 PUSH2 0x140E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6F66207479706520616C72656164792065786973747300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6F6620747970652063616E6E6F7420626520656D707479000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x173 JUMPI PUSH2 0xC2A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST SWAP1 CALLDATASIZE PUSH1 0x43 SLT ISZERO PUSH2 0x173 JUMPI PUSH1 0x40 MLOAD PUSH2 0xC40 DUP2 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x124 SWAP2 DUP2 CALLDATASIZE DUP5 GT PUSH2 0x173 JUMPI PUSH1 0x24 SWAP1 JUMPDEST DUP5 DUP3 LT PUSH2 0xF18 JUMPI POP POP CALLDATASIZE PUSH2 0x143 SLT ISZERO PUSH2 0x173 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xC70 DUP5 PUSH2 0x11E3 JUMP JUMPDEST DUP4 PUSH2 0x164 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x173 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xF08 JUMPI POP POP CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x173 JUMPI PUSH2 0xC9D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x1 DUP7 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP11 ADD SWAP6 PUSH2 0xCBA DUP2 DUP4 DUP10 PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xEC3 JUMPI PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0xEB1 JUMPI PUSH2 0xCF1 PUSH1 0x3 SWAP2 PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP9 MLOAD SWAP4 DUP5 SWAP2 PUSH2 0x1162 JUMP JUMPDEST ADD MSTORE PUSH1 0x5 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 EQ PUSH2 0x35C JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD14 DUP3 PUSH2 0x11AA JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 DUP7 DUP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x80 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP5 ADD MSTORE DUP5 PUSH1 0xE0 DUP5 ADD MSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xD83 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP8 SLOAD AND OR DUP7 SSTORE MLOAD PUSH1 0x1 DUP7 ADD PUSH2 0x140E JUMP JUMPDEST MLOAD PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0xE9A JUMPI POP POP MLOAD PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xE83 JUMPI POP POP SWAP1 PUSH1 0xF PUSH1 0xE0 DUP4 PUSH2 0xDC7 PUSH1 0x80 PUSH2 0xDE4 SWAP7 ADD MLOAD ISZERO ISZERO PUSH1 0xC DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xD DUP6 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD PUSH2 0x140E JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD SWAP4 PUSH1 0x1 PUSH1 0x40 SHL DUP6 LT ISZERO PUSH2 0x5C6 JUMPI PUSH2 0xE66 DUP5 SWAP3 PUSH2 0xE3A DUP8 PUSH32 0xC0B04028E7B044E610E837C16AA829C3AC6EDA886999B98BE29A1449DB097014 SWAP5 PUSH1 0x1 PUSH1 0x20 SWAP11 ADD DUP2 SSTORE PUSH2 0x12DB JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP7 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH2 0xE74 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST DUP3 DUP2 SUB DUP10 DUP5 ADD MSTORE CALLER SWAP7 PUSH2 0x1185 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 PUSH1 0xA DUP3 DUP8 ADD ADD SSTORE ADD PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 PUSH1 0x2 DUP3 DUP9 ADD ADD SSTORE ADD PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F7220696E6163746976652070726F6F6620747970650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xC7E JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xC50 JUMP JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x60 PUSH1 0xE0 PUSH1 0x40 MLOAD PUSH2 0xF4D DUP2 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE DUP3 DUP6 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xF62 DUP2 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x100 CALLDATASIZE DUP3 CALLDATACOPY PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xF79 DUP2 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE DUP3 CALLDATACOPY DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE PUSH2 0xFA6 PUSH1 0x5 SLOAD DUP3 LT PUSH2 0x151E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xFC1 DUP3 PUSH2 0x11AA JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE SWAP4 PUSH1 0x1 SWAP1 PUSH2 0xFDF DUP2 DUP4 ADD PUSH2 0x132D JUMP JUMPDEST SWAP1 DUP4 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 DUP8 DUP4 ADD SWAP1 PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x8 DUP3 LT PUSH2 0x1134 JUMPI POP POP POP PUSH2 0x1007 DUP6 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x40 DUP7 DUP2 ADD SWAP6 DUP7 MSTORE MLOAD SWAP4 PUSH1 0xA DUP4 ADD PUSH1 0x0 DUP7 JUMPDEST DUP11 DUP3 LT PUSH2 0x1121 JUMPI POP POP POP PUSH2 0x102C DUP6 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD SWAP5 DUP6 MSTORE PUSH1 0xFF PUSH1 0xC DUP5 ADD SLOAD AND SWAP8 PUSH1 0x80 DUP9 ADD SWAP9 ISZERO ISZERO DUP10 MSTORE PUSH1 0xD DUP5 ADD SLOAD SWAP3 PUSH1 0xA0 DUP10 ADD SWAP4 DUP5 MSTORE PUSH2 0x106A PUSH1 0xF PUSH1 0xE DUP8 ADD SLOAD SWAP7 PUSH1 0xC0 DUP13 ADD SWAP8 DUP9 MSTORE ADD PUSH2 0x132D JUMP JUMPDEST SWAP6 PUSH1 0xE0 DUP11 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP11 DUP4 DUP13 MSTORE MLOAD AND DUP3 DUP12 ADD MSTORE MLOAD SWAP7 PUSH2 0x109B PUSH2 0x200 SWAP9 DUP10 PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0x220 DUP13 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP9 MLOAD PUSH1 0x0 PUSH1 0x60 DUP13 ADD JUMPDEST PUSH1 0x8 DUP3 LT PUSH2 0x110B JUMPI POP POP POP MLOAD PUSH2 0x160 DUP11 ADD SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x10F5 JUMPI POP POP POP POP POP POP PUSH2 0x32D SWAP6 SWAP7 MLOAD ISZERO ISZERO PUSH2 0x1A0 DUP9 ADD MSTORE MLOAD PUSH2 0x1C0 DUP8 ADD MSTORE MLOAD PUSH2 0x1E0 DUP7 ADD MSTORE MLOAD SWAP1 PUSH1 0x1F NOT DUP6 DUP5 SUB ADD SWAP1 DUP6 ADD MSTORE PUSH2 0x1185 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE DUP14 SWAP12 POP SWAP2 DUP6 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x10BA JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE DUP15 SWAP13 POP SWAP2 DUP5 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 DUP5 ADD PUSH2 0x10A4 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 DUP5 ADD PUSH2 0x1019 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE SWAP2 DUP7 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 DUP4 ADD PUSH2 0xFF3 JUMP JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1175 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1165 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x119E DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5C6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5C6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5C6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5C6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x173 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1256 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x11FF JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x173 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x173 JUMPI JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x12C5 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12C5 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1323 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x130D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1302 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1341 DUP5 PUSH2 0x12F3 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x13B0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x136D JUMPI JUMPDEST POP POP PUSH2 0x136B SWAP3 POP SUB DUP4 PUSH2 0x11FF JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1398 JUMPI POP POP PUSH2 0x136B SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x135D JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1380 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x136B SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x135D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x173 JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x13F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5C6 JUMPI PUSH2 0x142C DUP3 SLOAD PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x14D6 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1472 JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1467 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1451 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x14BE JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x14A5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x149B JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP3 PUSH1 0x20 DUP6 LT PUSH2 0x1514 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1509 JUMPI POP POP PUSH2 0x1435 JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x14FB JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST ISZERO PUSH2 0x1525 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x141C9BDBD988191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1582 JUMPI PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 PUSH28 0xAC1EC2DE1FF953882C47A4682A1A8C3685B622AB222EC4E94972BB28 PUSH1 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER POP PUSH19 0x6F6F66207479706520616C7265616479206578 PUSH10 0x73747300000000000000 ","sourceMap":"172:7307:27:-:0;;;;;;;;;1827:10;1273:26:2;1269:95;;-1:-1:-1;1297:1:2;172:7307:27;;1827:10;-1:-1:-1;;;;;;172:7307:27;;;;;;1297:1:2;;;1827:10:27;-1:-1:-1;;;;;172:7307:27;3052:40:2;1297:1;;3052:40;172:7307:27;;;;;1849:15;172:7307;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5028:10;172:7307;;;;;;;;;;;;5028:31;172:7307;;;;;;:::i;:::-;;;;;5125:171;;;172:7307;;;;5125:171;;;172:7307;;;;5125:171;;;;;172:7307;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;172:7307:27;;;;;;;;;;;;-1:-1:-1;;;;;;172:7307:27;;;;;;;;;;;;;;;;;5307:19;172:7307;;;;5307:19;;;172:7307;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;5358:45;;;172:7307;;;;;;;;;;;;5358:45;;;;172:7307;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5028:31;172:7307;;;;;;;;;;;;;;:::i;:::-;;;;;5125:171;;;172:7307;;;5125:171;;;172:7307;;;5125:171;;172:7307;2039:2;172:7307;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5358:45;;;;172:7307;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;172:7307:27;;;;;;;;;;;-1:-1:-1;172:7307:27;;;;;;5028:31;172:7307;;;-1:-1:-1;172:7307:27;;;;;;;;;;;;:::i;:::-;;;;;5125:171;;;172:7307;;;5125:171;;;172:7307;;;5125:171;;172:7307;2096:2;172:7307;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5358:45;;;;172:7307;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5028:31;172:7307;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;5125:171;;;172:7307;;;5125:171;;;172:7307;;;5125:171;172:7307;2150:3;172:7307;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5358:45;;;;172:7307;;;;;;;;;-1:-1:-1;;;172:7307:27;;2039:2;172:7307;;;;;;-1:-1:-1;;;172:7307:27;;;;;;;;;;;-1:-1:-1;;;172:7307:27;;;;;;;;2096:2;172:7307;;;;-1:-1:-1;;;;;;;;;;;172:7307:27;;;;2150:3;;172:7307;;;;;;;;;;;;;-1:-1:-1;172:7307:27;;-1:-1:-1;172:7307:27;;;;;;;-1:-1:-1;;;;172:7307:27;;2039:2;172:7307;;;;;;-1:-1:-1;;;;172:7307:27;;;;;;;;;;;-1:-1:-1;;;172:7307:27;;;;;;;;2096:2;172:7307;;;;-1:-1:-1;;;;;;;;;;;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;172:7307:27;;;;;;;;;-1:-1:-1;;;172:7307:27;;;;;;;;;;;-1:-1:-1;;;172:7307:27;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;172:7307:27;;;;;;;1269:95:2;-1:-1:-1;;;1322:31:2;;1297:1;1322:31;;;172:7307:27;;;1322:31:2;172:7307:27;;;;;;;;;;;-1:-1:-1;;;;;172:7307:27;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:7307:27;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:7307:27;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;172:7307:27;;;;;;;;;;;;;-1:-1:-1;172:7307:27;;-1:-1:-1;172:7307:27;;-1:-1:-1;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:7307:27;;;;;;;;-1:-1:-1;172:7307:27;;-1:-1:-1;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:7307:27;;;;;;;;;;-1:-1:-1;172:7307:27;;;;;;;;-1:-1:-1;172:7307:27;;;;;-1:-1:-1;172:7307:27;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4728,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool":{"entryPoint":5075,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":4641,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4485,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":4909,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":5134,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4450,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4851,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4607,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_20216":{"entryPoint":4522,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_20226":{"entryPoint":4551,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_26086":{"entryPoint":4579,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":5090,"id":464,"parameterSlots":0,"returnSlots":0},"fun_isProofVerified":{"entryPoint":5473,"id":10299,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_75a0":{"entryPoint":5406,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_uint256_dyn":{"entryPoint":4827,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn_20227":{"entryPoint":4750,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816308ac8d22146111475750806311149ada14610f285780631acbce1414610bf75780632eb4a65e146109e0578063373b58e61461098857806341c7ce2e1461092757806346bdfb801461087357806356ef9cb5146106db57806366b92f9e14610635578063715018a6146105dc57806374235369146104d25780638129cd071461039b5780638da5cb5b146103725780639b1bc0c9146103315780639ddaf5aa14610294578063bf6618f9146101a0578063e96f88ea146101785763f2fde38b146100e557600080fd5b34610173576020366003190112610173576100fe611278565b6101066113e2565b6001600160a01b0390811690811561015a57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b34610173576020366003190112610173576020610196600435611561565b6040519015158152f35b3461017357602080600319360112610173576004359067ffffffffffffffff82116101735761020c816101d96080943690600401611221565b600060606040516101e9816111c7565b818152828582015282604082015201528160405193828580945193849201611162565b8101600381520301902060405191610223836111c7565b61022c8261132d565b835260018201548184019260ff82161515845261027a6002604087019260018060a01b03809560081c16845201549360608701948552604051978897828952519188015260a0870190611185565b935115156040860152511660608401525160808301520390f35b3461017357602036600319011261017357600435600090815260026020526040902080546001600160a01b031661032d6102d06001840161132d565b9260ff600c8201541690600d810154906102f1600f600e830154920161132d565b9161030e604051978897885260c0602089015260c0880190611185565b93151560408701526060860152608085015283820360a0850152611185565b0390f35b3461017357600036600319011261017357600554600019810190811161035c57602090604051908152f35b634e487b7160e01b600052601160045260246000fd5b34610173576000366003190112610173576000546040516001600160a01b039091168152602090f35b346101735760403660031901126101735760043567ffffffffffffffff8111610173576103cc903690600401611221565b6103d46113d3565b906103dd6113e2565b60405190610409815192602081818501956103f9818389611162565b81016003815203019020546112f3565b1561048d578261046c7fd91fb3ad497a5eac04e08baacaa347b1eef608d1b43bcd4f35a7ed25ea5e8c25946001610450602061048097604051809381928a51928391611162565b81016003815203019020019060ff801983541691151516179055565b604051928392604084526040840190611185565b90151560208301520390a1005b60405162461bcd60e51b815260206004820152601960248201527f50726f6f66207479706520646f6573206e6f74206578697374000000000000006044820152606490fd5b346101735760003660031901126101735760065467ffffffffffffffff81116105c6576040519060209061050b828260051b01846111ff565b808352818301908160066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f6000915b8383106105a45750505050604051918083019381845251809452604083019360408160051b85010192916000955b8287106105785785850386f35b909192938280610594600193603f198a82030186528851611185565b960192019601959291909261056b565b60018681926105b5859a999a61132d565b81520192019201919095949561053d565b634e487b7160e01b600052604160045260246000fd5b34610173576000366003190112610173576105f56113e2565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101735760203660031901126101735760043567ffffffffffffffff811161017357610681602061066e6106b3933690600401611221565b8160405193828580945193849201611162565b810160038152030190206106948161132d565b9060026001820154910154604051938493608085526080850190611185565b60ff83161515602085015260089290921c6001600160a01b0316604084015260608301520390f35b34610173576040366003190112610173576004356106f76113d3565b9080600052602060028152610712600160406000200161132d565b600054336001600160a01b0391821614918390831561083c575b505050156107e757610741600554831061151e565b816000526002815260ff600c60406000200154166107aa577f70c9579a34961b8e4495afea0520b52edc90522592e0784a023d52983abe2b169082600052600281526040600020600c8101600160ff19825416179055600e4291015560405193151584523393a3005b6064906040519062461bcd60e51b825260048201526016602482015275141c9bdbd988185b1c9958591e481d995c9a599a595960521b6044820152fd5b6084906040519062461bcd60e51b82526004820152602860248201527f4e6f7420617574686f72697a656420746f2076657269667920746869732070726044820152676f6f66207479706560c01b6064820152fd5b600192935090610859918160405193828580945193849201611162565b81016003815203019020015460081c16331484828161072c565b3461017357602080600319360112610173576001600160a01b03610895611278565b1660005260048152604060002060405190818382549182815201908192600052846000209060005b868282106109135786866108d3828803836111ff565b604051928392818401908285525180915260408401929160005b8281106108fc57505050500390f35b8351855286955093810193928101926001016108ed565b8354855290930192600192830192016108bd565b34610173576020366003190112610173576004356006548110156101735761094e9061128e565b6109725761095e61032d9161132d565b604051918291602083526020830190611185565b634e487b7160e01b600052600060045260246000fd5b34610173576040366003190112610173576109a1611278565b6001600160a01b0316600090815260046020526040902080546024359190821015610173576020916109d2916112db565b90546040519160031b1c8152f35b346101735760603660031901126101735760043567ffffffffffffffff811161017357610a11903690600401611221565b6024356001600160a01b038116919082900361017357610a2f6113e2565b805115610bb25760405190805160ff6001602094858181870195610a54818389611162565b81016003815203019020015416610b6d57600260405191610a74836111c7565b8383528483016001815260408401878152610ab9610aa78860608801956044358752604051809381928c51928391611162565b8101600381520301902095518661140e565b610ad66001860192511515839060ff801983541691151516179055565b518154610100600160a81b03191660089190911b610100600160a81b031617905551910155600654600160401b8110156105c657806001610b1a920160065561128e565b929092610972577fc5136ee9cbcdfae0f750e383ed3d0d7a24bbcd260f0b5ff469aa6b4a84d2743293610b5083610b649561140e565b604051938493604085526040850190611185565b918301520390a1005b60405162461bcd60e51b815260048101849052601960248201527f50726f6f66207479706520616c726561647920657869737473000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f50726f6f6620747970652063616e6e6f7420626520656d7074790000000000006044820152606490fd5b34610173576101803660031901126101735767ffffffffffffffff60043581811161017357610c2a903690600401611221565b90366043121561017357604051610c40816111aa565b6101249181368411610173576024905b848210610f185750503661014312156101735760405192610c70846111e3565b836101649136831161017357905b828210610f085750503590811161017357610c9d903690600401611221565b9060405160ff6001865192602081818a0195610cba818389611162565b8101600381520301902001541615610ec357600260015414610eb157610cf160039160026001556040519182918851938491611162565b015260055492600019841461035c576001840160055560405190610d14826111aa565b33825260208201928684526040830190815260608301918252600060808401524260a0840152600060c08401528460e0840152856000526002602052610d8360406000209460018060a01b038551166bffffffffffffffffffffffff60a01b875416178655516001860161140e565b5160005b60088110610e9a5750505160005b60028110610e8357505090600f60e083610dc76080610de49601511515600c86019060ff801983541691151516179055565b60a0810151600d85015560c0810151600e8501550151910161140e565b336000526004602052604060002092835493600160401b8510156105c657610e668492610e3a877fc0b04028e7b044e610e837c16aa829c3ac6eda886999b98be29a1449db09701494600160209a0181556112db565b81549060031b9086821b91600019901b1916179055610e74604051928392604084526040840190611185565b828103898401523396611185565b0390a360018055604051908152f35b60019060208351930192600a828701015501610d95565b600190602083519301926002828801015501610d87565b604051633ee5aeb560e01b8152600490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c6964206f7220696e6163746976652070726f6f66207479706500006044820152606490fd5b8135815260209182019101610c7e565b8135815260209182019101610c50565b346101735760208060031936011261017357600435606060e0604051610f4d816111aa565b600081528285820152604051610f62816111aa565b6101003682376040820152604051610f79816111e3565b60403682378382015260006080820152600060a0820152600060c08201520152610fa6600554821061151e565b600052600280825260406000209160405190610fc1826111aa565b83546001600160a01b03908116835293600190610fdf81830161132d565b908385019182526040519384878301906000905b6008821061113457505050611007856111aa565b60408681019586525193600a83016000865b8a82106111215750505061102c856111e3565b6060870194855260ff600c8401541697608088019815158952600d8401549260a0890193845261106a600f600e8701549660c08c019788520161132d565b9560e08a019687526040519b8c9a838c525116828b0152519661109b610200988960408d01526102208c0190611185565b9851600060608c015b6008821061110b57505050516101608a01906000915b8483106110f55750505050505061032d95965115156101a0880152516101c0870152516101e08601525190601f198584030190850152611185565b815181528d9b50918501919083019083016110ba565b825181528e9c50918401919086019084016110a4565b8254815291830191908301908401611019565b8254815291860191908601908301610ff3565b34610173576000366003190112610173576020906005548152f35b60005b8381106111755750506000910152565b8181015183820152602001611165565b9060209161119e81518092818552858086019101611162565b601f01601f1916010190565b610100810190811067ffffffffffffffff8211176105c657604052565b6080810190811067ffffffffffffffff8211176105c657604052565b6040810190811067ffffffffffffffff8211176105c657604052565b90601f8019910116810190811067ffffffffffffffff8211176105c657604052565b81601f820112156101735780359067ffffffffffffffff82116105c65760405192611256601f8401601f1916602001856111ff565b8284526020838301011161017357816000926020809301838601378301015290565b600435906001600160a01b038216820361017357565b6006548110156112c55760066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156112c55760005260206000200190600090565b90600182811c92168015611323575b602083101461130d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611302565b9060405191826000825492611341846112f3565b9081845260019485811690816000146113b0575060011461136d575b505061136b925003836111ff565b565b9093915060005260209081600020936000915b81831061139857505061136b9350820101388061135d565b85548884018501529485019487945091830191611380565b91505061136b94506020925060ff191682840152151560051b820101388061135d565b60243590811515820361017357565b6000546001600160a01b031633036113f657565b60405163118cdaa760e01b8152336004820152602490fd5b919091825167ffffffffffffffff81116105c65761142c82546112f3565b601f81116114d6575b50602080601f8311600114611472575081929394600092611467575b50508160011b916000199060031b1c1916179055565b015190503880611451565b90601f198316958460005282600020926000905b8882106114be575050836001959697106114a5575b505050811b019055565b015160001960f88460031b161c1916905538808061149b565b80600185968294968601518155019501930190611486565b600083815260208120601f840160051c81019260208510611514575b601f0160051c01915b828110611509575050611435565b8181556001016114fb565b90925082906114f2565b1561152557565b60405162461bcd60e51b8152602060048201526014602482015273141c9bdbd988191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b60055481101561158257600052600260205260ff600c604060002001541690565b5060009056fea2646970667358221220497bac1ec2de1ff953882c47a4682a1a8c3685b622ab222ec4e94972bb2860d364736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x8AC8D22 EQ PUSH2 0x1147 JUMPI POP DUP1 PUSH4 0x11149ADA EQ PUSH2 0xF28 JUMPI DUP1 PUSH4 0x1ACBCE14 EQ PUSH2 0xBF7 JUMPI DUP1 PUSH4 0x2EB4A65E EQ PUSH2 0x9E0 JUMPI DUP1 PUSH4 0x373B58E6 EQ PUSH2 0x988 JUMPI DUP1 PUSH4 0x41C7CE2E EQ PUSH2 0x927 JUMPI DUP1 PUSH4 0x46BDFB80 EQ PUSH2 0x873 JUMPI DUP1 PUSH4 0x56EF9CB5 EQ PUSH2 0x6DB JUMPI DUP1 PUSH4 0x66B92F9E EQ PUSH2 0x635 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0x74235369 EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x8129CD07 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x9B1BC0C9 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x9DDAF5AA EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xBF6618F9 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xE96F88EA EQ PUSH2 0x178 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH2 0xFE PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x20 PUSH2 0x196 PUSH1 0x4 CALLDATALOAD PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x173 JUMPI PUSH2 0x20C DUP2 PUSH2 0x1D9 PUSH1 0x80 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x1E9 DUP2 PUSH2 0x11C7 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x223 DUP4 PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0x22C DUP3 PUSH2 0x132D JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD SWAP3 PUSH1 0xFF DUP3 AND ISZERO ISZERO DUP5 MSTORE PUSH2 0x27A PUSH1 0x2 PUSH1 0x40 DUP8 ADD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 PUSH1 0x8 SHR AND DUP5 MSTORE ADD SLOAD SWAP4 PUSH1 0x60 DUP8 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP3 DUP10 MSTORE MLOAD SWAP2 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP4 MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE MLOAD PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x32D PUSH2 0x2D0 PUSH1 0x1 DUP5 ADD PUSH2 0x132D JUMP JUMPDEST SWAP3 PUSH1 0xFF PUSH1 0xC DUP3 ADD SLOAD AND SWAP1 PUSH1 0xD DUP2 ADD SLOAD SWAP1 PUSH2 0x2F1 PUSH1 0xF PUSH1 0xE DUP4 ADD SLOAD SWAP3 ADD PUSH2 0x132D JUMP JUMPDEST SWAP2 PUSH2 0x30E PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x1185 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x5 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x35C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x173 JUMPI PUSH2 0x3CC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0x13D3 JUMP JUMPDEST SWAP1 PUSH2 0x3DD PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x409 DUP2 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP6 ADD SWAP6 PUSH2 0x3F9 DUP2 DUP4 DUP10 PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH2 0x12F3 JUMP JUMPDEST ISZERO PUSH2 0x48D JUMPI DUP3 PUSH2 0x46C PUSH32 0xD91FB3AD497A5EAC04E08BAACAA347B1EEF608D1B43BCD4F35A7ED25EA5E8C25 SWAP5 PUSH1 0x1 PUSH2 0x450 PUSH1 0x20 PUSH2 0x480 SWAP8 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP11 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6F66207479706520646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x50B DUP3 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x11FF JUMP JUMPDEST DUP1 DUP4 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x5A4 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 ADD SWAP4 DUP2 DUP5 MSTORE MLOAD DUP1 SWAP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP4 PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 SWAP2 PUSH1 0x0 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x578 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x594 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1185 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x1 DUP7 DUP2 SWAP3 PUSH2 0x5B5 DUP6 SWAP11 SWAP10 SWAP11 PUSH2 0x132D JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP6 SWAP5 SWAP6 PUSH2 0x53D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH2 0x5F5 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x173 JUMPI PUSH2 0x681 PUSH1 0x20 PUSH2 0x66E PUSH2 0x6B3 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x694 DUP2 PUSH2 0x132D JUMP JUMPDEST SWAP1 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x80 DUP6 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0xFF DUP4 AND ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6F7 PUSH2 0x13D3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x2 DUP2 MSTORE PUSH2 0x712 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x132D JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND EQ SWAP2 DUP4 SWAP1 DUP4 ISZERO PUSH2 0x83C JUMPI JUMPDEST POP POP POP ISZERO PUSH2 0x7E7 JUMPI PUSH2 0x741 PUSH1 0x5 SLOAD DUP4 LT PUSH2 0x151E JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0xFF PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x7AA JUMPI PUSH32 0x70C9579A34961B8E4495AFEA0520B52EDC90522592E0784A023D52983ABE2B16 SWAP1 DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xC DUP2 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xE TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE CALLER SWAP4 LOG3 STOP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141C9BDBD988185B1C9958591E481D995C9A599A5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F207665726966792074686973207072 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6F6F662074797065 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 SWAP3 SWAP4 POP SWAP1 PUSH2 0x859 SWAP2 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND CALLER EQ DUP5 DUP3 DUP2 PUSH2 0x72C JUMP JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x173 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x895 PUSH2 0x1278 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x913 JUMPI DUP7 DUP7 PUSH2 0x8D3 DUP3 DUP9 SUB DUP4 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x8FC JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x8ED JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x8BD JUMP JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH2 0x94E SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x972 JUMPI PUSH2 0x95E PUSH2 0x32D SWAP2 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH2 0x9A1 PUSH2 0x1278 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x9D2 SWAP2 PUSH2 0x12DB JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x173 JUMPI PUSH2 0xA11 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x173 JUMPI PUSH2 0xA2F PUSH2 0x13E2 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 MLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0x20 SWAP5 DUP6 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0xA54 DUP2 DUP4 DUP10 PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH2 0xB6D JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xA74 DUP4 PUSH2 0x11C7 JUMP JUMPDEST DUP4 DUP4 MSTORE DUP5 DUP4 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 DUP5 ADD DUP8 DUP2 MSTORE PUSH2 0xAB9 PUSH2 0xAA7 DUP9 PUSH1 0x60 DUP9 ADD SWAP6 PUSH1 0x44 CALLDATALOAD DUP8 MSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP13 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP6 MLOAD DUP7 PUSH2 0x140E JUMP JUMPDEST PUSH2 0xAD6 PUSH1 0x1 DUP7 ADD SWAP3 MLOAD ISZERO ISZERO DUP4 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD DUP2 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x5C6 JUMPI DUP1 PUSH1 0x1 PUSH2 0xB1A SWAP3 ADD PUSH1 0x6 SSTORE PUSH2 0x128E JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x972 JUMPI PUSH32 0xC5136EE9CBCDFAE0F750E383ED3D0D7A24BBCD260F0B5FF469AA6B4A84D27432 SWAP4 PUSH2 0xB50 DUP4 PUSH2 0xB64 SWAP6 PUSH2 0x140E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6F66207479706520616C72656164792065786973747300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6F6620747970652063616E6E6F7420626520656D707479000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x173 JUMPI PUSH2 0xC2A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST SWAP1 CALLDATASIZE PUSH1 0x43 SLT ISZERO PUSH2 0x173 JUMPI PUSH1 0x40 MLOAD PUSH2 0xC40 DUP2 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x124 SWAP2 DUP2 CALLDATASIZE DUP5 GT PUSH2 0x173 JUMPI PUSH1 0x24 SWAP1 JUMPDEST DUP5 DUP3 LT PUSH2 0xF18 JUMPI POP POP CALLDATASIZE PUSH2 0x143 SLT ISZERO PUSH2 0x173 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xC70 DUP5 PUSH2 0x11E3 JUMP JUMPDEST DUP4 PUSH2 0x164 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x173 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xF08 JUMPI POP POP CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x173 JUMPI PUSH2 0xC9D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x1 DUP7 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP11 ADD SWAP6 PUSH2 0xCBA DUP2 DUP4 DUP10 PUSH2 0x1162 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xEC3 JUMPI PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0xEB1 JUMPI PUSH2 0xCF1 PUSH1 0x3 SWAP2 PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP9 MLOAD SWAP4 DUP5 SWAP2 PUSH2 0x1162 JUMP JUMPDEST ADD MSTORE PUSH1 0x5 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 EQ PUSH2 0x35C JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD14 DUP3 PUSH2 0x11AA JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 DUP7 DUP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x80 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP5 ADD MSTORE DUP5 PUSH1 0xE0 DUP5 ADD MSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xD83 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP8 SLOAD AND OR DUP7 SSTORE MLOAD PUSH1 0x1 DUP7 ADD PUSH2 0x140E JUMP JUMPDEST MLOAD PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0xE9A JUMPI POP POP MLOAD PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xE83 JUMPI POP POP SWAP1 PUSH1 0xF PUSH1 0xE0 DUP4 PUSH2 0xDC7 PUSH1 0x80 PUSH2 0xDE4 SWAP7 ADD MLOAD ISZERO ISZERO PUSH1 0xC DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xD DUP6 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD PUSH2 0x140E JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD SWAP4 PUSH1 0x1 PUSH1 0x40 SHL DUP6 LT ISZERO PUSH2 0x5C6 JUMPI PUSH2 0xE66 DUP5 SWAP3 PUSH2 0xE3A DUP8 PUSH32 0xC0B04028E7B044E610E837C16AA829C3AC6EDA886999B98BE29A1449DB097014 SWAP5 PUSH1 0x1 PUSH1 0x20 SWAP11 ADD DUP2 SSTORE PUSH2 0x12DB JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP7 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH2 0xE74 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST DUP3 DUP2 SUB DUP10 DUP5 ADD MSTORE CALLER SWAP7 PUSH2 0x1185 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 PUSH1 0xA DUP3 DUP8 ADD ADD SSTORE ADD PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 PUSH1 0x2 DUP3 DUP9 ADD ADD SSTORE ADD PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F7220696E6163746976652070726F6F6620747970650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xC7E JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xC50 JUMP JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x173 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x60 PUSH1 0xE0 PUSH1 0x40 MLOAD PUSH2 0xF4D DUP2 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE DUP3 DUP6 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xF62 DUP2 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x100 CALLDATASIZE DUP3 CALLDATACOPY PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xF79 DUP2 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE DUP3 CALLDATACOPY DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE PUSH2 0xFA6 PUSH1 0x5 SLOAD DUP3 LT PUSH2 0x151E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xFC1 DUP3 PUSH2 0x11AA JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE SWAP4 PUSH1 0x1 SWAP1 PUSH2 0xFDF DUP2 DUP4 ADD PUSH2 0x132D JUMP JUMPDEST SWAP1 DUP4 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 DUP8 DUP4 ADD SWAP1 PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x8 DUP3 LT PUSH2 0x1134 JUMPI POP POP POP PUSH2 0x1007 DUP6 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x40 DUP7 DUP2 ADD SWAP6 DUP7 MSTORE MLOAD SWAP4 PUSH1 0xA DUP4 ADD PUSH1 0x0 DUP7 JUMPDEST DUP11 DUP3 LT PUSH2 0x1121 JUMPI POP POP POP PUSH2 0x102C DUP6 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD SWAP5 DUP6 MSTORE PUSH1 0xFF PUSH1 0xC DUP5 ADD SLOAD AND SWAP8 PUSH1 0x80 DUP9 ADD SWAP9 ISZERO ISZERO DUP10 MSTORE PUSH1 0xD DUP5 ADD SLOAD SWAP3 PUSH1 0xA0 DUP10 ADD SWAP4 DUP5 MSTORE PUSH2 0x106A PUSH1 0xF PUSH1 0xE DUP8 ADD SLOAD SWAP7 PUSH1 0xC0 DUP13 ADD SWAP8 DUP9 MSTORE ADD PUSH2 0x132D JUMP JUMPDEST SWAP6 PUSH1 0xE0 DUP11 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP11 DUP4 DUP13 MSTORE MLOAD AND DUP3 DUP12 ADD MSTORE MLOAD SWAP7 PUSH2 0x109B PUSH2 0x200 SWAP9 DUP10 PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0x220 DUP13 ADD SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP9 MLOAD PUSH1 0x0 PUSH1 0x60 DUP13 ADD JUMPDEST PUSH1 0x8 DUP3 LT PUSH2 0x110B JUMPI POP POP POP MLOAD PUSH2 0x160 DUP11 ADD SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x10F5 JUMPI POP POP POP POP POP POP PUSH2 0x32D SWAP6 SWAP7 MLOAD ISZERO ISZERO PUSH2 0x1A0 DUP9 ADD MSTORE MLOAD PUSH2 0x1C0 DUP8 ADD MSTORE MLOAD PUSH2 0x1E0 DUP7 ADD MSTORE MLOAD SWAP1 PUSH1 0x1F NOT DUP6 DUP5 SUB ADD SWAP1 DUP6 ADD MSTORE PUSH2 0x1185 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE DUP14 SWAP12 POP SWAP2 DUP6 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x10BA JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE DUP15 SWAP13 POP SWAP2 DUP5 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 DUP5 ADD PUSH2 0x10A4 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 DUP5 ADD PUSH2 0x1019 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE SWAP2 DUP7 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 DUP4 ADD PUSH2 0xFF3 JUMP JUMPDEST CALLVALUE PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x173 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1175 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1165 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x119E DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5C6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5C6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5C6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5C6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x173 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1256 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x11FF JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x173 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x173 JUMPI JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x12C5 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12C5 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1323 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x130D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1302 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1341 DUP5 PUSH2 0x12F3 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x13B0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x136D JUMPI JUMPDEST POP POP PUSH2 0x136B SWAP3 POP SUB DUP4 PUSH2 0x11FF JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1398 JUMPI POP POP PUSH2 0x136B SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x135D JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1380 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x136B SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x135D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x173 JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x13F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5C6 JUMPI PUSH2 0x142C DUP3 SLOAD PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x14D6 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1472 JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1467 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1451 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x14BE JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x14A5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x149B JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP3 PUSH1 0x20 DUP6 LT PUSH2 0x1514 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1509 JUMPI POP POP PUSH2 0x1435 JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x14FB JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST ISZERO PUSH2 0x1525 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x141C9BDBD988191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1582 JUMPI PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 PUSH28 0xAC1EC2DE1FF953882C47A4682A1A8C3685B622AB222EC4E94972BB28 PUSH1 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"172:7307:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;172:7307:27;;;;2627:22:2;;2623:91;;172:7307:27;;;;;;;;;;;;3052:40:2;172:7307:27;3052:40:2;;172:7307:27;2623:91:2;172:7307:27;;-1:-1:-1;;;2672:31:2;;172:7307:27;;2672:31:2;;172:7307:27;;;2672:31:2;172:7307:27;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;;;;;;;750:39;172:7307;;;;;;;-1:-1:-1;;;;;172:7307:27;;750:39;172:7307;750:39;;;:::i;:::-;;172:7307;750:39;;;172:7307;;750:39;;;;172:7307;750:39;;;;;;172:7307;750:39;;;:::i;:::-;172:7307;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;7455:11;172:7307;-1:-1:-1;;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;;;;;-1:-1:-1;;;;;172:7307:27;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;1500:62:2;;;:::i;:::-;172:7307:27;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;5700:45;172:7307;;;5794:43;5852:39;172:7307;5794:31;172:7307;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5794:31;172:7307;;;;;;;;;;;;;;;5794:43;172:7307;;;;;;;;;;;;;:::i;:::-;;;;;;;;5852:39;;;172:7307;;;;-1:-1:-1;;;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;6657:19;172:7307;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;6657:19;172:7307;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;1500:62:2;;:::i;:::-;172:7307:27;;;-1:-1:-1;;;;;;172:7307:27;;;;-1:-1:-1;;;;;172:7307:27;3052:40:2;172:7307:27;;3052:40:2;172:7307:27;;;;;;;-1:-1:-1;;172:7307:27;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;795:46;;;:::i;:::-;;;;;;172:7307;795:46;;172:7307;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:7307:27;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;;;;;:::i;:::-;;;;;;3733:6;172:7307;;;;;;;3733:26;172:7307;:::i;:::-;;;1637:10;-1:-1:-1;;;;;172:7307:27;;;1637:21;;172:7307;;1637:78;;;;172:7307;;;;;;;3771:55;3790:11;172:7307;3779:22;;3771:55;:::i;:::-;172:7307;;;3733:6;172:7307;;;3845:27;172:7307;;;3845:27;172:7307;;;;4285:45;172:7307;;;;3733:6;172:7307;;;;;3845:27;3958:16;;172:7307;;;;;;;;;3991:16;4010:15;3991:16;;172:7307;;;;;;;;1637:10;4285:45;;172:7307;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;172:7307:27;;;;;1637:78;172:7307;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1676:39;172:7307;;;;1637:10;1662:53;1637:78;;;;;172:7307;;;;;;;;;;;;;-1:-1:-1;;;;;172:7307:27;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;;;937:35;172:7307;937:35;;;;;;;;:::i;:::-;172:7307;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;;;:::i;:::-;-1:-1:-1;;;;;172:7307:27;;;;;;;;;;;;;;;;;847:47;;;;;172:7307;847:47;;;;:::i;:::-;172:7307;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;172:7307:27;;;;;;;;;1500:62:2;;:::i;:::-;172:7307:27;;4950:28;172:7307;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5028:31;172:7307;;;;;;;;;;;:::i;:::-;;;;5125:171;;;172:7307;;;;5125:171;;172:7307;;;;;5125:171;172:7307;5125:171;;172:7307;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;172:7307:27;;;;;;-1:-1:-1;;;;;172:7307:27;;;;;;;;5307:19;172:7307;-1:-1:-1;;;172:7307:27;;;;;;;;;;5307:19;172:7307;;:::i;:::-;;;;;;5358:45;172:7307;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;5358:45;;;172:7307;;;;-1:-1:-1;;;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1468:31;172:7307;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1468:31;172:7307;;;;;;1468:31;172:7307;2702:18:15;2698:86;;172:7307:27;;;;1468:31;172:7307;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;172:7307:27;;;;1468:31;172:7307;;;;;;;;;;:::i;:::-;3047:10;172:7307;;;3016:296;;172:7307;;;;;3016:296;;172:7307;;;3016:296;;;172:7307;;;;3016:296;;;172:7307;3218:15;3016:296;;;172:7307;;3016:296;;;172:7307;3016:296;172:7307;3016:296;;172:7307;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1468:31;172:7307;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3016:296;;;172:7307;;3016:296;172:7307;3016:296;172:7307;3016:296;;172:7307;;;;;;;;;;;;;;;;;;;;;;3016:296;;;172:7307;;;;;3016:296;;;172:7307;;;;;3016:296;172:7307;;;;:::i;:::-;3047:10;172:7307;;;;;;;;;;;;-1:-1:-1;;;172:7307:27;;;;;;;;;;3375:62;172:7307;1468:31;172:7307;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3047:10;172:7307;;:::i;:::-;3375:62;;;1468:31;172:7307;;;;;;;;;1468:31;172:7307;;;;;;;;;;;;;;;;;1468:31;172:7307;;;;;;;;;;;;;;;;2698:86:15;172:7307:27;;-1:-1:-1;;;2743:30:15;;172:7307:27;;2743:30:15;172:7307:27;;;-1:-1:-1;;;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;6100:55;6119:11;172:7307;6108:22;;6100:55;:::i;:::-;172:7307;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;172:7307:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;172:7307:27;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;;;905:26;172:7307;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;172:7307:27;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7307:27;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;172:7307:27;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;172:7307:27;;;;;;:::o;:::-;5307:19;172:7307;;;;;;5307:19;-1:-1:-1;172:7307:27;;;;-1:-1:-1;172:7307:27;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:7307:27;;-1:-1:-1;172:7307:27;;;-1:-1:-1;172:7307:27;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:7307:27;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;172:7307:27;;;;-1:-1:-1;172:7307:27;;-1:-1:-1;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1796:162:2:-;1710:6;172:7307:27;-1:-1:-1;;;;;172:7307:27;735:10:13;1855:23:2;1851:101;;1796:162::o;1851:101::-;172:7307:27;;-1:-1:-1;;;1901:40:2;;735:10:13;1901:40:2;;;172:7307:27;;;1901:40:2;172:7307:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:7307:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:7307:27;;;;;;;;:::o;:::-;;;-1:-1:-1;;;172:7307:27;;;;;;;;;;;;-1:-1:-1;;;172:7307:27;;;;;;;6830:174;6928:11;172:7307;6916:23;;;6912:41;;-1:-1:-1;172:7307:27;6970:6;172:7307;;;6970:27;172:7307;-1:-1:-1;172:7307:27;6970:27;172:7307;;6830:174;:::o;6912:41::-;6941:12;-1:-1:-1;6941:12:27;:::o"},"methodIdentifiers":{"addProofType(string,address,uint256)":"2eb4a65e","getProof(uint256)":"11149ada","getProofType(string)":"bf6618f9","getSupportedProofTypes()":"74235369","getTotalProofs()":"9b1bc0c9","getUserProofs(address)":"46bdfb80","isProofVerified(uint256)":"e96f88ea","nextProofId()":"08ac8d22","owner()":"8da5cb5b","proofTypes(string)":"66b92f9e","proofs(uint256)":"9ddaf5aa","renounceOwnership()":"715018a6","submitProof(string,uint256[8],uint256[2],string)":"1acbce14","supportedProofTypes(uint256)":"41c7ce2e","transferOwnership(address)":"f2fde38b","updateProofType(string,bool)":"8129cd07","userProofs(address,uint256)":"373b58e6","verifyProof(uint256,bool)":"56ef9cb5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"proofType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataHash\",\"type\":\"string\"}],\"name\":\"ProofSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"proofType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"verifierContract\",\"type\":\"address\"}],\"name\":\"ProofTypeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"proofType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ProofTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"ProofVerified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_proofType\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_verifierContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minReputation\",\"type\":\"uint256\"}],\"name\":\"addProofType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proofId\",\"type\":\"uint256\"}],\"name\":\"getProof\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"proofType\",\"type\":\"string\"},{\"internalType\":\"uint256[8]\",\"name\":\"proof\",\"type\":\"uint256[8]\"},{\"internalType\":\"uint256[2]\",\"name\":\"publicInputs\",\"type\":\"uint256[2]\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"submittedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verifiedAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataHash\",\"type\":\"string\"}],\"internalType\":\"struct ZKProof.Proof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_proofType\",\"type\":\"string\"}],\"name\":\"getProofType\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"verifierContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minReputation\",\"type\":\"uint256\"}],\"internalType\":\"struct ZKProof.ProofType\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedProofTypes\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalProofs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProofs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proofId\",\"type\":\"uint256\"}],\"name\":\"isProofVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextProofId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"proofTypes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"verifierContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minReputation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proofs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"proofType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"submittedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verifiedAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_proofType\",\"type\":\"string\"},{\"internalType\":\"uint256[8]\",\"name\":\"_proof\",\"type\":\"uint256[8]\"},{\"internalType\":\"uint256[2]\",\"name\":\"_publicInputs\",\"type\":\"uint256[2]\"},{\"internalType\":\"string\",\"name\":\"_metadataHash\",\"type\":\"string\"}],\"name\":\"submitProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedProofTypes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_proofType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"updateProofType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userProofs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proofId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isValid\",\"type\":\"bool\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"addProofType(string,address,uint256)\":{\"details\":\"Add a new proof type\",\"params\":{\"_minReputation\":\"Minimum reputation required\",\"_proofType\":\"Name of the proof type\",\"_verifierContract\":\"Address of the verifier contract\"}},\"getProof(uint256)\":{\"details\":\"Get proof details\",\"params\":{\"_proofId\":\"ID of the proof\"},\"returns\":{\"_0\":\"Proof struct\"}},\"getProofType(string)\":{\"details\":\"Get proof type details\",\"params\":{\"_proofType\":\"Name of the proof type\"},\"returns\":{\"_0\":\"ProofType struct\"}},\"getSupportedProofTypes()\":{\"details\":\"Get all supported proof types\",\"returns\":{\"_0\":\"Array of proof type names\"}},\"getTotalProofs()\":{\"details\":\"Get total number of proofs submitted\",\"returns\":{\"_0\":\"Total proof count\"}},\"getUserProofs(address)\":{\"details\":\"Get all proof IDs submitted by a user\",\"params\":{\"_user\":\"Address of the user\"},\"returns\":{\"_0\":\"Array of proof IDs\"}},\"isProofVerified(uint256)\":{\"details\":\"Check if a proof is verified\",\"params\":{\"_proofId\":\"ID of the proof\"},\"returns\":{\"_0\":\"Whether the proof is verified\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"submitProof(string,uint256[8],uint256[2],string)\":{\"details\":\"Submit a zero-knowledge proof\",\"params\":{\"_metadataHash\":\"IPFS hash containing proof metadata\",\"_proof\":\"The ZK proof (8 field elements)\",\"_proofType\":\"Type of proof being submitted\",\"_publicInputs\":\"Public inputs for the proof (2 field elements)\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateProofType(string,bool)\":{\"details\":\"Update proof type status\",\"params\":{\"_isActive\":\"Whether the proof type is active\",\"_proofType\":\"Name of the proof type\"}},\"verifyProof(uint256,bool)\":{\"details\":\"Verify a submitted proof\",\"params\":{\"_isValid\":\"Whether the proof is valid\",\"_proofId\":\"ID of the proof to verify\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZKProof.sol\":\"ZKProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ZKProof.sol\":{\"keccak256\":\"0xee0d197cf4686a0ddc8e7832100d24c6909d7ab7313c6a9b9d3a9c16fefe2ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b1ba1ea2d09cf0b9deb50c1c30599caaa629334438497bb7bdafdc95507e4c\",\"dweb:/ipfs/QmSc4nrChvQeJ11jjFsTBhqdaNhbD5mFGVJ2R5Sz4xaBND\"]}},\"version\":1}"}}}}}